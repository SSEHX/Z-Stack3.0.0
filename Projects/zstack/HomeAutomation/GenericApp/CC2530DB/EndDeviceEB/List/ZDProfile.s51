///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V9.30.1.3056 for 8051               05/Nov/2017  14:39:08
// Copyright 2004-2015 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Components\stack\zdo\ZDProfile.c
//    Command line       =  
//        -f
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wEndev.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_TX_DATA_MAX=3
//        -DMAC_CFG_TX_MAX=6 -DMAC_CFG_RX_MAX=3) -f
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 -DDEFAULT_KEY={0}
//        -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000
//        -DENABLE_LED4_DISABLE_S1) -f
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Components\stack\zdo\ZDProfile.c
//        -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D
//        xPOWER_SAVING -D NWK_AUTO_POLL -D xZTOOL_P1 -D xMT_TASK -D
//        xMT_APP_FUNC -D xMT_SYS_FUNC -D xMT_ZDO_FUNC -D xMT_ZDO_MGMT -D
//        xMT_APP_CNF_FUNC -D LEGACY_LCD_DEBUG -D LCD_SUPPORTED=DEBUG -D
//        MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_WRITE -D ZCL_BASIC -D
//        ZCL_IDENTIFY -D ZCL_SCENES -D ZCL_GROUPS -lC
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\EndDeviceEB\List
//        -lA
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\EndDeviceEB\List
//        --diag_suppress Pe001,Pa010 -o
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\EndDeviceEB\Obj
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 16 -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\Source\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\Source\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\ZMain\TI2530DB\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\hal\include\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\include\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\mt\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\osal\include\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\af\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\bdb\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\gp\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\zcl\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\zmac\
//        -I
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
//        -Ohz --require_prototypes
//    List file          =  
//        C:\Users\admin\Desktop\github\z-stack3.0.0\Projects\zstack\HomeAutomation\GenericApp\CC2530DB\EndDeviceEB\List\ZDProfile.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME ZDProfile

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V5
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V8
        EXTERN ?V10
        EXTERN ?V11
        EXTERN ?V12
        EXTERN ?V13
        EXTERN ?V9
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?US_SHR
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN ?XSTACK_DISP102_8
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC `??ZDO_RegisterForZDOMsg::?relay`
        FUNCTION `??ZDO_RegisterForZDOMsg::?relay`,0203H
        PUBLIC `??ZDO_RemoveRegisteredCB::?relay`
        FUNCTION `??ZDO_RemoveRegisteredCB::?relay`,0203H
        PUBLIC `??ZDO_SendMsgCBs::?relay`
        FUNCTION `??ZDO_SendMsgCBs::?relay`,0203H
        PUBLIC `??ZDP_BindUnbindReq::?relay`
        FUNCTION `??ZDP_BindUnbindReq::?relay`,0203H
        PUBLIC `??ZDP_DeviceAnnce::?relay`
        FUNCTION `??ZDP_DeviceAnnce::?relay`,0203H
        PUBLIC `??ZDP_EPRsp::?relay`
        FUNCTION `??ZDP_EPRsp::?relay`,0203H
        PUBLIC `??ZDP_EndDeviceBindReq::?relay`
        FUNCTION `??ZDP_EndDeviceBindReq::?relay`,0203H
        PUBLIC `??ZDP_GenericRsp::?relay`
        FUNCTION `??ZDP_GenericRsp::?relay`,0203H
        PUBLIC `??ZDP_IEEEAddrReq::?relay`
        FUNCTION `??ZDP_IEEEAddrReq::?relay`,0203H
        PUBLIC `??ZDP_IncomingData::?relay`
        FUNCTION `??ZDP_IncomingData::?relay`,0203H
        PUBLIC `??ZDP_MatchDescReq::?relay`
        FUNCTION `??ZDP_MatchDescReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtBindRsp::?relay`
        FUNCTION `??ZDP_MgmtBindRsp::?relay`,0203H
        PUBLIC `??ZDP_MgmtDirectJoinReq::?relay`
        FUNCTION `??ZDP_MgmtDirectJoinReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtLeaveReq::?relay`
        FUNCTION `??ZDP_MgmtLeaveReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtLqiRsp::?relay`
        FUNCTION `??ZDP_MgmtLqiRsp::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkDiscReq::?relay`
        FUNCTION `??ZDP_MgmtNwkDiscReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkDiscRsp::?relay`
        FUNCTION `??ZDP_MgmtNwkDiscRsp::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkUpdateNotify::?relay`
        FUNCTION `??ZDP_MgmtNwkUpdateNotify::?relay`,0203H
        PUBLIC `??ZDP_MgmtNwkUpdateReq::?relay`
        FUNCTION `??ZDP_MgmtNwkUpdateReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtPermitJoinReq::?relay`
        FUNCTION `??ZDP_MgmtPermitJoinReq::?relay`,0203H
        PUBLIC `??ZDP_MgmtRtgRsp::?relay`
        FUNCTION `??ZDP_MgmtRtgRsp::?relay`,0203H
        PUBLIC `??ZDP_NWKAddrOfInterestReq::?relay`
        FUNCTION `??ZDP_NWKAddrOfInterestReq::?relay`,0203H
        PUBLIC `??ZDP_NodeDescMsg::?relay`
        FUNCTION `??ZDP_NodeDescMsg::?relay`,0203H
        PUBLIC `??ZDP_NwkAddrReq::?relay`
        FUNCTION `??ZDP_NwkAddrReq::?relay`,0203H
        PUBLIC `??ZDP_ParentAnnce::?relay`
        FUNCTION `??ZDP_ParentAnnce::?relay`,0203H
        PUBLIC `??ZDP_PowerDescMsg::?relay`
        FUNCTION `??ZDP_PowerDescMsg::?relay`,0203H
        PUBLIC `??ZDP_SendData::?relay`
        FUNCTION `??ZDP_SendData::?relay`,0203H
        PUBLIC `??ZDP_ServerDiscReq::?relay`
        FUNCTION `??ZDP_ServerDiscReq::?relay`,0203H
        PUBLIC `??ZDP_ServerDiscRsp::?relay`
        FUNCTION `??ZDP_ServerDiscRsp::?relay`,0203H
        PUBLIC `??ZDP_SimpleDescMsg::?relay`
        FUNCTION `??ZDP_SimpleDescMsg::?relay`,0203H
        PUBLIC `??ZDP_SimpleDescReq::?relay`
        FUNCTION `??ZDP_SimpleDescReq::?relay`,0203H
        PUBLIC `??ZDP_UserDescRsp::?relay`
        FUNCTION `??ZDP_UserDescRsp::?relay`,0203H
        PUBLIC `??ZDP_UserDescSet::?relay`
        FUNCTION `??ZDP_UserDescSet::?relay`,0203H
        FUNCTION `??fillAndSend::?relay`,0203H
        PUBLIC `??zdpProcessAddrReq::?relay`
        FUNCTION `??zdpProcessAddrReq::?relay`,0203H
        PUBLIC ZDO_RegisterForZDOMsg
        FUNCTION ZDO_RegisterForZDOMsg,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_RemoveRegisteredCB
        FUNCTION ZDO_RemoveRegisteredCB,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_SendMsgCBs
        FUNCTION ZDO_SendMsgCBs,0a1203H
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_AF_ENDPOINT
        PUBLIC ZDP_BindUnbindReq
        FUNCTION ZDP_BindUnbindReq,0a1203H
        ARGFRAME XSTACK, 8, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDP_DeviceAnnce
        FUNCTION ZDP_DeviceAnnce,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_EPRsp
        FUNCTION ZDP_EPRsp,0a1203H
        ARGFRAME XSTACK, 7, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 19, STACK
        PUBLIC ZDP_EndDeviceBindReq
        FUNCTION ZDP_EndDeviceBindReq,0a1203H
        ARGFRAME XSTACK, 9, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDP_GenericRsp
        FUNCTION ZDP_GenericRsp,021203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_IEEEAddrReq
        FUNCTION ZDP_IEEEAddrReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_IncomingData
        FUNCTION ZDP_IncomingData,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC ZDP_MatchDescReq
        FUNCTION ZDP_MatchDescReq,0a1203H
        ARGFRAME XSTACK, 8, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDP_MgmtBindRsp
        FUNCTION ZDP_MgmtBindRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDP_MgmtDirectJoinReq
        FUNCTION ZDP_MgmtDirectJoinReq,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_MgmtLeaveReq
        FUNCTION ZDP_MgmtLeaveReq,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_MgmtLqiRsp
        FUNCTION ZDP_MgmtLqiRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC ZDP_MgmtNwkDiscReq
        FUNCTION ZDP_MgmtNwkDiscReq,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDP_MgmtNwkDiscRsp
        FUNCTION ZDP_MgmtNwkDiscRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDP_MgmtNwkUpdateNotify
        FUNCTION ZDP_MgmtNwkUpdateNotify,0a1203H
        ARGFRAME XSTACK, 12, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_MgmtNwkUpdateReq
        FUNCTION ZDP_MgmtNwkUpdateReq,0a1203H
        ARGFRAME XSTACK, 6, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDP_MgmtPermitJoinReq
        FUNCTION ZDP_MgmtPermitJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_MgmtRtgRsp
        FUNCTION ZDP_MgmtRtgRsp,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_NWKAddrOfInterestReq
        FUNCTION ZDP_NWKAddrOfInterestReq,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_NodeDescMsg
        FUNCTION ZDP_NodeDescMsg,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDP_ParentAnnce
        FUNCTION ZDP_ParentAnnce,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 26, STACK
        PUBLIC ZDP_PowerDescMsg
        FUNCTION ZDP_PowerDescMsg,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_SendData
        FUNCTION ZDP_SendData,0a1203H
        ARGFRAME XSTACK, 5, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDP_ServerDiscReq
        FUNCTION ZDP_ServerDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDP_ServerDiscRsp
        FUNCTION ZDP_ServerDiscRsp,0a1203H
        ARGFRAME XSTACK, 4, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDP_SimpleDescMsg
        FUNCTION ZDP_SimpleDescMsg,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDP_SimpleDescReq
        FUNCTION ZDP_SimpleDescReq,0a1203H
        ARGFRAME XSTACK, 1, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDP_TransID
        PUBLIC ZDP_TxOptions
        PUBLIC ZDP_UserDescRsp
        FUNCTION ZDP_UserDescRsp,0a1203H
        ARGFRAME XSTACK, 3, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDP_UserDescSet
        FUNCTION ZDP_UserDescSet,0a1203H
        ARGFRAME XSTACK, 2, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBWEAK __Constant_a
        PUBLIC childIndex
        FUNCTION fillAndSend,0a1203H
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 35, STACK
        PUBLIC zdoMsgCBs
        PUBLIC zdpMsgProcs
        PUBLIC zdpProcessAddrReq
        FUNCTION zdpProcessAddrReq,0a1603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 19, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
          CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI V8 SameValue
          CFI V9 SameValue
          CFI V10 SameValue
          CFI V11 SameValue
          CFI V12 SameValue
          CFI V13 SameValue
          CFI V14 SameValue
          CFI V15 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
AF_DataRequest      SYMBOL "AF_DataRequest"
`??AF_DataRequest::?relay` SYMBOL "?relay", AF_DataRequest
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
`??NLME_GetExtAddr::?relay` SYMBOL "?relay", NLME_GetExtAddr
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
`??NLME_GetShortAddr::?relay` SYMBOL "?relay", NLME_GetShortAddr
ZDApp_InMsgCB       SYMBOL "ZDApp_InMsgCB"
`??ZDApp_InMsgCB::?relay` SYMBOL "?relay", ZDApp_InMsgCB
ZDApp_SetParentAnnceTimer SYMBOL "ZDApp_SetParentAnnceTimer"
`??ZDApp_SetParentAnnceTimer::?relay` SYMBOL "?relay", ZDApp_SetParentAnnceTimer
`?<Name ZDO_ProcessActiveEPR 10>` SYMBOL "ZDO_ProcessActiveEPReq"
`??ZDO_ProcessActiveEPReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessActiveEPR 10>`
`?<Name ZDO_ProcessMatchDesc 12>` SYMBOL "ZDO_ProcessMatchDescReq"
`??ZDO_ProcessMatchDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessMatchDesc 12>`
`?<Name ZDO_ProcessMgmtBindR 14>` SYMBOL "ZDO_ProcessMgmtBindReq"
`??ZDO_ProcessMgmtBindReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessMgmtBindR 14>`
`?<Name ZDO_ProcessMgmtLeave 16>` SYMBOL "ZDO_ProcessMgmtLeaveReq"
`??ZDO_ProcessMgmtLeaveReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessMgmtLeave 16>`
`?<Name ZDO_ProcessMgmtLqiRe 18>` SYMBOL "ZDO_ProcessMgmtLqiReq"
`??ZDO_ProcessMgmtLqiReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessMgmtLqiRe 18>`
`?<Name ZDO_ProcessNodeDescR 20>` SYMBOL "ZDO_ProcessNodeDescReq"
`??ZDO_ProcessNodeDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessNodeDescR 20>`
`?<Name ZDO_ProcessNodeDescR 22>` SYMBOL "ZDO_ProcessNodeDescRsp"
`??ZDO_ProcessNodeDescRsp::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessNodeDescR 22>`
`?<Name ZDO_ProcessPowerDesc 24>` SYMBOL "ZDO_ProcessPowerDescReq"
`??ZDO_ProcessPowerDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessPowerDesc 24>`
`?<Name ZDO_ProcessSimpleDes 26>` SYMBOL "ZDO_ProcessSimpleDescReq"
`??ZDO_ProcessSimpleDescReq::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessSimpleDes 26>`
`?<Name ZDO_ProcessSimpleDes 28>` SYMBOL "ZDO_ProcessSimpleDescRsp"
`??ZDO_ProcessSimpleDescRsp::?relay` SYMBOL "?relay", `?<Name ZDO_ProcessSimpleDes 28>`
osal_buffer_uint32  SYMBOL "osal_buffer_uint32"
`??osal_buffer_uint32::?relay` SYMBOL "?relay", osal_buffer_uint32
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
`??osal_mem_free::?relay` SYMBOL "?relay", osal_mem_free
osal_memcpy         SYMBOL "osal_memcpy"
`??osal_memcpy::?relay` SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
`??osal_memset::?relay` SYMBOL "?relay", osal_memset
osal_msg_allocate   SYMBOL "osal_msg_allocate"
`??osal_msg_allocate::?relay` SYMBOL "?relay", osal_msg_allocate
osal_msg_send       SYMBOL "osal_msg_send"
`??osal_msg_send::?relay` SYMBOL "?relay", osal_msg_send
osal_start_timerEx  SYMBOL "osal_start_timerEx"
`??osal_start_timerEx::?relay` SYMBOL "?relay", osal_start_timerEx
sAddrExtCmp         SYMBOL "sAddrExtCmp"
`??sAddrExtCmp::?relay` SYMBOL "?relay", sAddrExtCmp
sAddrExtCpy         SYMBOL "sAddrExtCpy"
`??sAddrExtCpy::?relay` SYMBOL "?relay", sAddrExtCpy
ZDO_RegisterForZDOMsg SYMBOL "ZDO_RegisterForZDOMsg"
`??ZDO_RegisterForZDOMsg::?relay` SYMBOL "?relay", ZDO_RegisterForZDOMsg
ZDO_RemoveRegisteredCB SYMBOL "ZDO_RemoveRegisteredCB"
`??ZDO_RemoveRegisteredCB::?relay` SYMBOL "?relay", ZDO_RemoveRegisteredCB
ZDO_SendMsgCBs      SYMBOL "ZDO_SendMsgCBs"
`??ZDO_SendMsgCBs::?relay` SYMBOL "?relay", ZDO_SendMsgCBs
ZDP_BindUnbindReq   SYMBOL "ZDP_BindUnbindReq"
`??ZDP_BindUnbindReq::?relay` SYMBOL "?relay", ZDP_BindUnbindReq
ZDP_DeviceAnnce     SYMBOL "ZDP_DeviceAnnce"
`??ZDP_DeviceAnnce::?relay` SYMBOL "?relay", ZDP_DeviceAnnce
ZDP_EPRsp           SYMBOL "ZDP_EPRsp"
`??ZDP_EPRsp::?relay` SYMBOL "?relay", ZDP_EPRsp
ZDP_EndDeviceBindReq SYMBOL "ZDP_EndDeviceBindReq"
`??ZDP_EndDeviceBindReq::?relay` SYMBOL "?relay", ZDP_EndDeviceBindReq
ZDP_GenericRsp      SYMBOL "ZDP_GenericRsp"
`??ZDP_GenericRsp::?relay` SYMBOL "?relay", ZDP_GenericRsp
ZDP_IEEEAddrReq     SYMBOL "ZDP_IEEEAddrReq"
`??ZDP_IEEEAddrReq::?relay` SYMBOL "?relay", ZDP_IEEEAddrReq
ZDP_IncomingData    SYMBOL "ZDP_IncomingData"
`??ZDP_IncomingData::?relay` SYMBOL "?relay", ZDP_IncomingData
ZDP_MatchDescReq    SYMBOL "ZDP_MatchDescReq"
`??ZDP_MatchDescReq::?relay` SYMBOL "?relay", ZDP_MatchDescReq
ZDP_MgmtBindRsp     SYMBOL "ZDP_MgmtBindRsp"
`??ZDP_MgmtBindRsp::?relay` SYMBOL "?relay", ZDP_MgmtBindRsp
ZDP_MgmtDirectJoinReq SYMBOL "ZDP_MgmtDirectJoinReq"
`??ZDP_MgmtDirectJoinReq::?relay` SYMBOL "?relay", ZDP_MgmtDirectJoinReq
ZDP_MgmtLeaveReq    SYMBOL "ZDP_MgmtLeaveReq"
`??ZDP_MgmtLeaveReq::?relay` SYMBOL "?relay", ZDP_MgmtLeaveReq
ZDP_MgmtLqiRsp      SYMBOL "ZDP_MgmtLqiRsp"
`??ZDP_MgmtLqiRsp::?relay` SYMBOL "?relay", ZDP_MgmtLqiRsp
ZDP_MgmtNwkDiscReq  SYMBOL "ZDP_MgmtNwkDiscReq"
`??ZDP_MgmtNwkDiscReq::?relay` SYMBOL "?relay", ZDP_MgmtNwkDiscReq
ZDP_MgmtNwkDiscRsp  SYMBOL "ZDP_MgmtNwkDiscRsp"
`??ZDP_MgmtNwkDiscRsp::?relay` SYMBOL "?relay", ZDP_MgmtNwkDiscRsp
ZDP_MgmtNwkUpdateNotify SYMBOL "ZDP_MgmtNwkUpdateNotify"
`??ZDP_MgmtNwkUpdateNotify::?relay` SYMBOL "?relay", ZDP_MgmtNwkUpdateNotify
ZDP_MgmtNwkUpdateReq SYMBOL "ZDP_MgmtNwkUpdateReq"
`??ZDP_MgmtNwkUpdateReq::?relay` SYMBOL "?relay", ZDP_MgmtNwkUpdateReq
ZDP_MgmtPermitJoinReq SYMBOL "ZDP_MgmtPermitJoinReq"
`??ZDP_MgmtPermitJoinReq::?relay` SYMBOL "?relay", ZDP_MgmtPermitJoinReq
ZDP_MgmtRtgRsp      SYMBOL "ZDP_MgmtRtgRsp"
`??ZDP_MgmtRtgRsp::?relay` SYMBOL "?relay", ZDP_MgmtRtgRsp
ZDP_NWKAddrOfInterestReq SYMBOL "ZDP_NWKAddrOfInterestReq"
`??ZDP_NWKAddrOfInterestReq::?relay` SYMBOL "?relay", ZDP_NWKAddrOfInterestReq
ZDP_NodeDescMsg     SYMBOL "ZDP_NodeDescMsg"
`??ZDP_NodeDescMsg::?relay` SYMBOL "?relay", ZDP_NodeDescMsg
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
`??ZDP_NwkAddrReq::?relay` SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_ParentAnnce     SYMBOL "ZDP_ParentAnnce"
`??ZDP_ParentAnnce::?relay` SYMBOL "?relay", ZDP_ParentAnnce
ZDP_PowerDescMsg    SYMBOL "ZDP_PowerDescMsg"
`??ZDP_PowerDescMsg::?relay` SYMBOL "?relay", ZDP_PowerDescMsg
ZDP_SendData        SYMBOL "ZDP_SendData"
`??ZDP_SendData::?relay` SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscReq   SYMBOL "ZDP_ServerDiscReq"
`??ZDP_ServerDiscReq::?relay` SYMBOL "?relay", ZDP_ServerDiscReq
ZDP_ServerDiscRsp   SYMBOL "ZDP_ServerDiscRsp"
`??ZDP_ServerDiscRsp::?relay` SYMBOL "?relay", ZDP_ServerDiscRsp
ZDP_SimpleDescMsg   SYMBOL "ZDP_SimpleDescMsg"
`??ZDP_SimpleDescMsg::?relay` SYMBOL "?relay", ZDP_SimpleDescMsg
ZDP_SimpleDescReq   SYMBOL "ZDP_SimpleDescReq"
`??ZDP_SimpleDescReq::?relay` SYMBOL "?relay", ZDP_SimpleDescReq
ZDP_UserDescRsp     SYMBOL "ZDP_UserDescRsp"
`??ZDP_UserDescRsp::?relay` SYMBOL "?relay", ZDP_UserDescRsp
ZDP_UserDescSet     SYMBOL "ZDP_UserDescSet"
`??ZDP_UserDescSet::?relay` SYMBOL "?relay", ZDP_UserDescSet
zdpProcessAddrReq   SYMBOL "zdpProcessAddrReq"
`??zdpProcessAddrReq::?relay` SYMBOL "?relay", zdpProcessAddrReq

        EXTERN `??AF_DataRequest::?relay`
        FUNCTION `??AF_DataRequest::?relay`,00H
        EXTERN `??NLME_GetExtAddr::?relay`
        FUNCTION `??NLME_GetExtAddr::?relay`,00H
        EXTERN `??NLME_GetShortAddr::?relay`
        FUNCTION `??NLME_GetShortAddr::?relay`,00H
        EXTERN `??ZDApp_InMsgCB::?relay`
        FUNCTION `??ZDApp_InMsgCB::?relay`,00H
        EXTERN `??ZDApp_SetParentAnnceTimer::?relay`
        FUNCTION `??ZDApp_SetParentAnnceTimer::?relay`,00H
        EXTERN `??ZDO_ProcessActiveEPReq::?relay`
        FUNCTION `??ZDO_ProcessActiveEPReq::?relay`,00H
        EXTERN `??ZDO_ProcessMatchDescReq::?relay`
        FUNCTION `??ZDO_ProcessMatchDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessMgmtBindReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtBindReq::?relay`,00H
        EXTERN `??ZDO_ProcessMgmtLeaveReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLeaveReq::?relay`,00H
        EXTERN `??ZDO_ProcessMgmtLqiReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLqiReq::?relay`,00H
        EXTERN `??ZDO_ProcessNodeDescReq::?relay`
        FUNCTION `??ZDO_ProcessNodeDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessNodeDescRsp::?relay`
        FUNCTION `??ZDO_ProcessNodeDescRsp::?relay`,00H
        EXTERN `??ZDO_ProcessPowerDescReq::?relay`
        FUNCTION `??ZDO_ProcessPowerDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessSimpleDescReq::?relay`
        FUNCTION `??ZDO_ProcessSimpleDescReq::?relay`,00H
        EXTERN `??ZDO_ProcessSimpleDescRsp::?relay`
        FUNCTION `??ZDO_ProcessSimpleDescRsp::?relay`,00H
        EXTERN `??osal_buffer_uint32::?relay`
        FUNCTION `??osal_buffer_uint32::?relay`,00H
        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_mem_free::?relay`
        FUNCTION `??osal_mem_free::?relay`,00H
        EXTERN `??osal_memcpy::?relay`
        FUNCTION `??osal_memcpy::?relay`,00H
        EXTERN `??osal_memset::?relay`
        FUNCTION `??osal_memset::?relay`,00H
        EXTERN `??osal_msg_allocate::?relay`
        FUNCTION `??osal_msg_allocate::?relay`,00H
        EXTERN `??osal_msg_send::?relay`
        FUNCTION `??osal_msg_send::?relay`,00H
        EXTERN `??osal_start_timerEx::?relay`
        FUNCTION `??osal_start_timerEx::?relay`,00H
        EXTERN `??sAddrExtCmp::?relay`
        FUNCTION `??sAddrExtCmp::?relay`,00H
        EXTERN `??sAddrExtCpy::?relay`
        FUNCTION `??sAddrExtCpy::?relay`,00H
        EXTERN AF_DataRequest
        FUNCTION AF_DataRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDAppNwkAddr
        EXTERN ZDAppTaskID
        EXTERN ZDApp_InMsgCB
        FUNCTION ZDApp_InMsgCB,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_SetParentAnnceTimer
        FUNCTION ZDApp_SetParentAnnceTimer,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_epDesc
        EXTERN osal_buffer_uint32
        FUNCTION osal_buffer_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_allocate
        FUNCTION osal_msg_allocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_send
        FUNCTION osal_msg_send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCmp
        FUNCTION sAddrExtCmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN saveExtAddr

// C:\Users\admin\Desktop\github\z-stack3.0.0\Components\stack\zdo\ZDProfile.c
//    1 /**************************************************************************************************
//    2   Filename:       ZDProfile.c
//    3   Revised:        $Date: 2015-10-14 11:48:06 -0700 (Wed, 14 Oct 2015) $
//    4   Revision:       $Revision: 44530 $
//    5 
//    6   Description:    This is the Zigbee Device Profile.
//    7 
//    8 
//    9   Copyright 2004-2015 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License").  You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product.  Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "ZComDef.h"
//   44 #include "OSAL.h"
//   45 #include "AF.h"
//   46 #include "NLMEDE.h"
//   47 #include "nwk_util.h"
//   48 #include "APS.h"
//   49 
//   50 #include "AddrMgr.h"
//   51 #include "ZDConfig.h"
//   52 #include "ZDProfile.h"
//   53 #include "ZDObject.h"
//   54 #include "ZDNwkMgr.h"
//   55 
//   56 #if defined( LCD_SUPPORTED )
//   57   #include "OnBoard.h"
//   58 #endif
//   59 
//   60 #include "nwk_util.h"
//   61 
//   62 #if defined( MT_ZDO_FUNC )
//   63   #include "MT_ZDO.h"
//   64 #endif
//   65 
//   66 /*********************************************************************
//   67  * MACROS
//   68  */
//   69 
//   70 #define ZADDR_TO_AFADDR( pZADDR, AFADDR ) {                            \ 
//   71   (AFADDR).endPoint = ZDP_AF_ENDPOINT;                                 \ 
//   72   (AFADDR).addrMode = (afAddrMode_t)(pZADDR)->addrMode;                \ 
//   73   (AFADDR).addr.shortAddr = (pZADDR)->addr.shortAddr;                  \ 
//   74 }
//   75 
//   76 #define FillAndSendBuffer( TRANSSEQ, ADDR, ID, LEN, BUF ) {     \ 
//   77   afStatus_t stat;                                    \ 
//   78   ZDP_TmpBuf = (BUF)+1;                               \ 
//   79   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   80   osal_mem_free( (BUF) );                             \ 
//   81   ZDP_TmpBuf = ZDP_Buf+1;                             \ 
//   82   return stat;                                        \ 
//   83 }
//   84 
//   85 #define FillAndSendTxOptions( TRANSSEQ, ADDR, ID, LEN, TxO ) {  \ 
//   86   afStatus_t stat;                                    \ 
//   87   ZDP_TxOptions = (TxO);                              \ 
//   88   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   89   ZDP_TxOptions = AF_TX_OPTIONS_NONE;                 \ 
//   90   return stat;                                        \ 
//   91 }
//   92 
//   93 #define FillAndSendBufferTxOptions( TRANSSEQ, ADDR, ID, LEN, BUF, TxO ) { \ 
//   94   afStatus_t stat;                                    \ 
//   95   ZDP_TmpBuf = (BUF)+1;                               \ 
//   96   ZDP_TxOptions = (TxO);                              \ 
//   97   stat = fillAndSend( (TRANSSEQ), (ADDR), (ID), (LEN) );          \ 
//   98   osal_mem_free( (BUF) );                             \ 
//   99   ZDP_TmpBuf = ZDP_Buf+1;                             \ 
//  100   ZDP_TxOptions = AF_TX_OPTIONS_NONE;                 \ 
//  101   return stat;                                        \ 
//  102 }
//  103 
//  104 /*********************************************************************
//  105  * CONSTANTS
//  106  */
//  107 
//  108 #define ZDP_BUF_SZ          80
//  109 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  110 CONST byte ZDP_AF_ENDPOINT = 0;
ZDP_AF_ENDPOINT:
        DB 0
//  111 
//  112 // Routing table options
//  113 #define ZP_RTG_RECORD       0x04       // Routing table indication that a route record is needed
//  114 #define ZP_MTO_ROUTE_RC     0x08       // Concentrator with routing cache
//  115 #define ZP_MTO_ROUTE_NRC    0x10       // Concentrator with limited cache
//  116 
//  117 
//  118 /*********************************************************************
//  119  * TYPEDEFS
//  120  */
//  121 typedef struct
//  122 {
//  123   void *next;
//  124   uint8 taskID;
//  125   uint16 clusterID;
//  126 } ZDO_MsgCB_t;
//  127 
//  128 
//  129 /*********************************************************************
//  130  * GLOBAL VARIABLES
//  131  */
//  132 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  133 byte ZDP_TransID = 0;
ZDP_TransID:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  134 uint8 childIndex = 0;
childIndex:
        DS 1
        REQUIRE __INIT_XDATA_Z
//  135 
//  136 /*********************************************************************
//  137  * EXTERNAL VARIABLES
//  138  */
//  139 
//  140 extern endPointDesc_t ZDApp_epDesc;
//  141 
//  142 /*********************************************************************
//  143  * EXTERNAL FUNCTIONS
//  144  */
//  145 extern void ZDApp_SetParentAnnceTimer( void );
//  146 
//  147 /*********************************************************************
//  148  * LOCAL FUNCTIONS
//  149  */
//  150 
//  151 static afStatus_t fillAndSend( uint8 *transSeq, zAddrType_t *addr, cId_t clusterID, byte len );
//  152 uint8 ZDO_SendMsgCBs( zdoIncomingMsg_t *inMsg );
//  153 void zdpProcessAddrReq( zdoIncomingMsg_t *inMsg );
//  154 
//  155 /*********************************************************************
//  156  * LOCAL VARIABLES
//  157  */
//  158 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  159 static uint8  ZDP_Buf[ ZDP_BUF_SZ ];
ZDP_Buf:
        DS 80
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_I:XDATA:NOROOT(0)
//  160 static uint8 *ZDP_TmpBuf = ZDP_Buf+1;
ZDP_TmpBuf:
        DATA16
        DS 2
        REQUIRE `?<Initializer for ZDP_TmpBuf>`
        REQUIRE __INIT_XDATA_I
//  161 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  162 byte ZDP_TxOptions = AF_TX_OPTIONS_NONE;
ZDP_TxOptions:
        DS 1
        REQUIRE __INIT_XDATA_Z

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  163 ZDO_MsgCB_t *zdoMsgCBs = (ZDO_MsgCB_t *)NULL;
zdoMsgCBs:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  164 
//  165 /*********************************************************************
//  166  * ZDO Message Processing table
//  167  */
//  168 
//  169 typedef void (*pfnZDPMsgProcessor)( zdoIncomingMsg_t *inMsg );
//  170 
//  171 typedef struct
//  172 {
//  173   uint16                clusterID;
//  174   pfnZDPMsgProcessor    pFn;
//  175 } zdpMsgProcItem_t;
//  176 

        RSEG CODE_C:CODE:REORDER:NOROOT(0)
        DATA8
//  177 CONST zdpMsgProcItem_t zdpMsgProcs[] =
zdpMsgProcs:
        DATA16
        DW 1
        DW `??zdpProcessAddrReq::?relay`
        DW 2
        DW `??ZDO_ProcessNodeDescReq::?relay`
        DW 32770
        DW `??ZDO_ProcessNodeDescRsp::?relay`
        DW 3
        DW `??ZDO_ProcessPowerDescReq::?relay`
        DW 4
        DW `??ZDO_ProcessSimpleDescReq::?relay`
        DW 32772
        DW `??ZDO_ProcessSimpleDescRsp::?relay`
        DW 5
        DW `??ZDO_ProcessActiveEPReq::?relay`
        DW 6
        DW `??ZDO_ProcessMatchDescReq::?relay`
        DW 49
        DW `??ZDO_ProcessMgmtLqiReq::?relay`
        DW 51
        DW `??ZDO_ProcessMgmtBindReq::?relay`
        DW 52
        DW `??ZDO_ProcessMgmtLeaveReq::?relay`
        DW 65535
        DW 0H
//  178 {
//  179 #if ( RFD_RCVC_ALWAYS_ON==TRUE ) || ( ZG_BUILD_RTR_TYPE )
//  180   // These aren't processed by sleeping end devices.
//  181   { NWK_addr_req,           zdpProcessAddrReq },
//  182   { Device_annce,           ZDO_ProcessDeviceAnnce },
//  183 #endif
//  184 #if ( ZG_BUILD_RTR_TYPE )
//  185   // These aren't processed by end devices.
//  186   { Parent_annce,           ZDO_ProcessParentAnnce },
//  187   { Parent_annce_rsp,       ZDO_ProcessParentAnnceRsp },
//  188 #endif
//  189   { IEEE_addr_req,          zdpProcessAddrReq },
//  190   { Node_Desc_req,          ZDO_ProcessNodeDescReq },
//  191   { Node_Desc_rsp,          ZDO_ProcessNodeDescRsp },
//  192   { Power_Desc_req,         ZDO_ProcessPowerDescReq },
//  193   { Simple_Desc_req,        ZDO_ProcessSimpleDescReq },
//  194   { Simple_Desc_rsp,        ZDO_ProcessSimpleDescRsp },
//  195   { Active_EP_req,          ZDO_ProcessActiveEPReq },
//  196   { Match_Desc_req,         ZDO_ProcessMatchDescReq },
//  197 #if defined ( ZDO_MGMT_NWKDISC_RESPONSE )
//  198   { Mgmt_NWK_Disc_req,      ZDO_ProcessMgmtNwkDiscReq },
//  199 #endif
//  200 #if defined ( ZDO_MGMT_LQI_RESPONSE ) && ( ZG_BUILD_RTR_TYPE || ZG_BUILD_ENDDEVICE_TYPE )
//  201   { Mgmt_Lqi_req,           ZDO_ProcessMgmtLqiReq },
//  202 #endif
//  203 #if defined ( ZDO_MGMT_RTG_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  204   { Mgmt_Rtg_req,           ZDO_ProcessMgmtRtgReq },
//  205 #endif
//  206 #if defined ( ZDO_MGMT_BIND_RESPONSE ) && defined ( REFLECTOR )
//  207   { Mgmt_Bind_req,          ZDO_ProcessMgmtBindReq },
//  208 #endif
//  209 #if defined ( ZDO_MGMT_JOINDIRECT_RESPONSE ) && ( ZG_BUILD_RTR_TYPE )
//  210   { Mgmt_Direct_Join_req,   ZDO_ProcessMgmtDirectJoinReq },
//  211 #endif
//  212 #if defined ( ZDO_MGMT_LEAVE_RESPONSE )
//  213   { Mgmt_Leave_req,         ZDO_ProcessMgmtLeaveReq },
//  214 #endif
//  215 #if defined ( ZDO_MGMT_PERMIT_JOIN_RESPONSE )  && ( ZG_BUILD_RTR_TYPE )
//  216   { Mgmt_Permit_Join_req,   ZDO_ProcessMgmtPermitJoinReq },
//  217 #endif
//  218 #if defined ( ZDO_USERDESC_RESPONSE )
//  219   { User_Desc_req,          ZDO_ProcessUserDescReq },
//  220 #endif
//  221 #if defined ( ZDO_USERDESCSET_RESPONSE )
//  222   { User_Desc_set,          ZDO_ProcessUserDescSet },
//  223 #endif
//  224 #if defined ( ZDO_SERVERDISC_RESPONSE )
//  225   { Server_Discovery_req,   ZDO_ProcessServerDiscReq },
//  226 #endif
//  227   {0xFFFF, NULL} // Last
//  228 };
//  229 
//  230 /*********************************************************************
//  231  * @fn          fillAndSend
//  232  *
//  233  * @brief       Combined to reduce space
//  234  *
//  235  * @param
//  236  * @param
//  237  *
//  238  * @return      afStatus_t
//  239  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  240 static afStatus_t fillAndSend( uint8 *transSeq, zAddrType_t *addr, cId_t clusterID, byte len )
fillAndSend:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function fillAndSend
        CODE
//  241 {
        FUNCALL fillAndSend, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL fillAndSend, AF_DataRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 35, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 35, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 12
        MOV     A,#-0xc
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     ?V4,R1
//  242   afAddrType_t afAddr;
//  243 
//  244   osal_memset( &afAddr, 0, sizeof(afAddrType_t) );
        ; Setup parameters for call to function osal_memset
        MOV     R4,#0xc
        MOV     R5,#0x0
        MOV     R1,#0x0
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
//  245   ZADDR_TO_AFADDR( addr, afAddr );
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP0_8
        CLR     A
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_22:
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_76:
        LCALL   ?Subroutine30 & 0xFFFF
//  246 
//  247   *(ZDP_TmpBuf-1) = *transSeq;
??CrossCallReturnLabel_35:
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        ADD     A,#-0x1
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#-0x1
        MOV     ?V3,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     DPL,?V2
        MOV     DPH,?V3
        MOVX    @DPTR,A
//  248 
//  249   return AF_DataRequest( &afAddr, &ZDApp_epDesc, clusterID,
//  250                            (uint16)(len+1), (uint8*)(ZDP_TmpBuf-1),
//  251                            transSeq, ZDP_TxOptions,  AF_DEFAULT_RADIUS );
        ; Setup parameters for call to function AF_DataRequest
        MOV     ?V5,#0x1e
        MOV     R0,#?V5
        LCALL   ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV     A,?V4
        ADD     A,#0x1
        MOV     ?V0,A
        CLR     A
        ADDC    A,#0x0
        MOV     ?V1,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        MOV     A,#0x21
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV     DPTR,#ZDP_TxOptions
        MOVX    A,@DPTR
        MOV     R1,A
        MOV     R4,#ZDApp_epDesc & 0xff
        MOV     R5,#(ZDApp_epDesc >> 8) & 0xff
        MOV     A,#0x9
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??AF_DataRequest::?relay`; Banked call to: AF_DataRequest
        MOV     A,#0x9
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     A,#0xc
        LJMP    ?Subroutine0 & 0xFFFF
//  252 
//  253 }
          CFI EndBlock cfiBlock0
//  254 
//  255 /*********************************************************************
//  256  * @fn          ZDP_SendData
//  257  *
//  258  * @brief       This builds and send a request message that has
//  259  *              NWKAddrOfInterest as its only parameter.
//  260  *
//  261  * @param       dstAddr - destination address
//  262  * @param       cmd - clusterID
//  263  * @param       dataLen - number of bytes of data
//  264  * @param       data - pointer to the data
//  265  * @param       SecurityEnable - Security Options
//  266  *
//  267  * @return      afStatus_t
//  268  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  269 afStatus_t ZDP_SendData( uint8 *TransSeq, zAddrType_t *dstAddr, uint16 cmd,
ZDP_SendData:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ZDP_SendData
        CODE
//  270                         byte len, uint8 *buf, byte SecurityEnable )
//  271 {
        FUNCALL ZDP_SendData, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
//  272   uint8 *pBuf = ZDP_TmpBuf;
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ?Subroutine45 & 0xFFFF
//  273   byte cnt = len;
??CrossCallReturnLabel_63:
        MOV     A,R7
        MOV     R6,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_241:
        SJMP    ??ZDP_SendData_0
//  274 
//  275   while ( cnt-- )
//  276   {
//  277     *pBuf++ = *buf++;
??ZDP_SendData_1:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     DPL,?V2
        MOV     DPH,?V3
        LCALL   ??Subroutine120_0 & 0xFFFF
//  278   }
??CrossCallReturnLabel_230:
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        MOV     ?V2,DPL
        MOV     ?V3,DPH
??ZDP_SendData_0:
        MOV     A,#-0x1
        ADD     A,R6
        MOV     R6,A
        INC     A
        JNZ     ??ZDP_SendData_1
//  279 
//  280   FillAndSendTxOptions( TransSeq, dstAddr, cmd, len, ((SecurityEnable) ? AF_EN_SECURITY : 0) );
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     DPTR,#ZDP_TxOptions
        JZ      ??ZDP_SendData_2
        MOV     A,#0x40
        SJMP    ??ZDP_SendData_3
??ZDP_SendData_2:
        CLR     A
??ZDP_SendData_3:
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     A,R7
        MOV     R1,A
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     A,R1
        MOV     R1,A
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
        LJMP    ??Subroutine97_0 & 0xFFFF
//  281 }
          CFI EndBlock cfiBlock1
//  282 
//  283 /*********************************************************************
//  284  * @fn          ZDP_NWKAddrOfInterestReq
//  285  *
//  286  * @brief       This builds and send a request message that has
//  287  *              NWKAddrOfInterest as its only parameter.
//  288  *
//  289  * @param       dstAddr - destination address
//  290  * @param       nwkAddr - 16 bit address
//  291  * @param       SecurityEnable - Security Options
//  292  *
//  293  * @return      afStatus_t
//  294  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  295 afStatus_t ZDP_NWKAddrOfInterestReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_NWKAddrOfInterestReq:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
        CODE
//  296                                      byte cmd, byte SecurityEnable )
//  297 {
        FUNCALL ZDP_NWKAddrOfInterestReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
//  298   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  299 
//  300   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
        LCALL   ?Subroutine19 & 0xFFFF
//  301   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_16:
        MOVX    @DPTR,A
//  302 
//  303   return fillAndSend( &ZDP_TransID, dstAddr, cmd, 2 );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,R6
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     R1,#0x2
        LJMP    ?Subroutine8 & 0xFFFF
//  304 }
          CFI EndBlock cfiBlock2
//  305 
//  306 /*********************************************************************
//  307  * Address Requests
//  308  */
//  309 
//  310 /*********************************************************************
//  311  * @fn          ZDP_NwkAddrReq
//  312  *
//  313  * @brief       This builds and send a NWK_addr_req message.  This
//  314  *              function sends a broadcast message looking for a 16
//  315  *              bit address with a 64 bit address as bait.
//  316  *
//  317  * @param       IEEEAddress - looking for this device
//  318  * @param       SecurityEnable - Security Options
//  319  *
//  320  * @return      afStatus_t
//  321  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  322 afStatus_t ZDP_NwkAddrReq( uint8 *IEEEAddress, byte ReqType,
ZDP_NwkAddrReq:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
        CODE
//  323                            byte StartIndex, byte SecurityEnable )
//  324 {
        FUNCALL ZDP_NwkAddrReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_NwkAddrReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_NwkAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 9
        MOV     A,#-0x9
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V2,R1
        MOV     ?V3,R4
//  325   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ?Subroutine42 & 0xFFFF
//  326   byte len = Z_EXTADDR_LEN + 1 + 1;  // IEEEAddress + ReqType + StartIndex.
//  327   zAddrType_t dstAddr;
//  328 
//  329   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  330 
//  331   if ( osal_ExtAddrEqual( saveExtAddr, IEEEAddress ) == FALSE )
??CrossCallReturnLabel_164:
        ; Setup parameters for call to function sAddrExtCmp
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,#saveExtAddr & 0xff
        MOV     R3,#(saveExtAddr >> 8) & 0xff
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        JNZ     ??ZDP_NwkAddrReq_0
//  332   {
//  333     dstAddr.addrMode = AddrBroadcast;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine83 & 0xFFFF
//  334     dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  335   }
??CrossCallReturnLabel_136:
        SJMP    ??ZDP_NwkAddrReq_1
//  336   else
//  337   {
//  338     dstAddr.addrMode = Addr16Bit;
??ZDP_NwkAddrReq_0:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  339     dstAddr.addr.shortAddr = ZDAppNwkAddr.addr.shortAddr;
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?Subroutine51 & 0xFFFF
//  340   }
??CrossCallReturnLabel_77:
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
??ZDP_NwkAddrReq_1:
        MOVX    @DPTR,A
//  341 
//  342   pBuf = osal_cpyExtAddr( pBuf, IEEEAddress );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,R2
        MOV     DPH,R3
//  343 
//  344   *pBuf++ = ReqType;
        MOV     A,?V2
        MOVX    @DPTR,A
//  345   *pBuf++ = StartIndex;
        INC     DPTR
        MOV     A,?V3
        MOVX    @DPTR,A
//  346 
//  347   return fillAndSend( &ZDP_TransID, &dstAddr, NWK_addr_req, len );
        ; Setup parameters for call to function fillAndSend
        CLR     A
        MOV     ?V0,A
        MOV     ?V1,A
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R1,#0xa
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP102_8
          CFI EndBlock cfiBlock3
        REQUIRE ?Subroutine9
        ; // Fall through to label ?Subroutine9
//  348 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 23)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,#0x9
        SJMP    ??Subroutine96_0
          CFI EndBlock cfiBlock4

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond5 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_76
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond6 Using cfiCommon0
          CFI (cfiCond6) Function ZDP_NwkAddrReq
          CFI (cfiCond6) Conditional ??CrossCallReturnLabel_77
          CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond6) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond6) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond6) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond6) CFA_SP SP+-2
          CFI (cfiCond6) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker7 Using cfiCommon1
          CFI (cfiPicker7) NoFunction
          CFI (cfiPicker7) Picker
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_252:
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        RET
          CFI EndBlock cfiCond5
          CFI EndBlock cfiCond6
          CFI EndBlock cfiPicker7

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     R1,#0x9
          CFI EndBlock cfiBlock8
        REQUIRE ??Subroutine95_0
        ; // Fall through to label ??Subroutine95_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine95_0:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
          CFI EndBlock cfiBlock9
        REQUIRE ??Subroutine96_0
        ; // Fall through to label ??Subroutine96_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine96_0:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock10
        REQUIRE ??Subroutine97_0
        ; // Fall through to label ??Subroutine97_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine97_0:
          CFI Block cfiBlock11 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x4
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock11
//  349 
//  350 /*********************************************************************
//  351  * @fn          ZDP_IEEEAddrReq
//  352  *
//  353  * @brief       This builds and send a IEEE_addr_req message.  This
//  354  *              function sends a unicast message looking for a 64
//  355  *              bit IEEE address with a 16 bit address as bait.
//  356  *
//  357  * @param       ReqType - ZDP_IEEEADDR_REQTYPE_SINGLE or
//  358  *                        ZDP_IEEEADDR_REQTYPE_EXTENDED
//  359  * @param       SecurityEnable - Security Options
//  360  *
//  361  * @return      afStatus_t
//  362  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  363 afStatus_t ZDP_IEEEAddrReq( uint16 shortAddr, byte ReqType,
ZDP_IEEEAddrReq:
          CFI Block cfiBlock12 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
        CODE
//  364                             byte StartIndex, byte SecurityEnable )
//  365 {
        FUNCALL ZDP_IEEEAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV     A,#-0x9
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     R6,A
        MOV     A,R4
        MOV     R7,A
//  366   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ??Subroutine121_0 & 0xFFFF
//  367   byte len = 2 + 1 + 1;  // shortAddr + ReqType + StartIndex.
//  368   zAddrType_t dstAddr;
//  369 
//  370   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  371 
//  372   dstAddr.addrMode = (afAddrMode_t)Addr16Bit;
??CrossCallReturnLabel_250:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
//  373   dstAddr.addr.shortAddr = shortAddr;
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
//  374 
//  375   *pBuf++ = LO_UINT16( shortAddr );
        MOV     A,R2
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
//  376   *pBuf++ = HI_UINT16( shortAddr );
        MOV     A,R3
        LCALL   ?Subroutine37 & 0xFFFF
//  377 
//  378   *pBuf++ = ReqType;
??CrossCallReturnLabel_48:
        MOVX    @DPTR,A
//  379   *pBuf++ = StartIndex;
        MOV     A,R7
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
//  380 
//  381   return fillAndSend( &ZDP_TransID, &dstAddr, IEEE_addr_req, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x1
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,#0x4
        LJMP    ?Subroutine2 & 0xFFFF
//  382 }
          CFI EndBlock cfiBlock12
//  383 
//  384 /*********************************************************************
//  385  * @fn          ZDP_MatchDescReq
//  386  *
//  387  * @brief       This builds and send a Match_Desc_req message.  This
//  388  *              function sends a broadcast or unicast message
//  389  *              requesting the list of endpoint/interfaces that
//  390  *              match profile ID and cluster IDs.
//  391  *
//  392  * @param       dstAddr - destination address
//  393  * @param       nwkAddr - network address of interest
//  394  * @param       ProfileID - Profile ID
//  395  * @param       NumInClusters - number of input clusters
//  396  * @param       InClusterList - input cluster ID list
//  397  * @param       NumOutClusters - number of output clusters
//  398  * @param       OutClusterList - output cluster ID list
//  399  * @param       SecurityEnable - Security Options
//  400  *
//  401  * @return      afStatus_t
//  402  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  403 afStatus_t ZDP_MatchDescReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_MatchDescReq:
          CFI Block cfiBlock13 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
        CODE
//  404                                 uint16 ProfileID,
//  405                                 byte NumInClusters, cId_t *InClusterList,
//  406                                 byte NumOutClusters, cId_t *OutClusterList,
//  407                                 byte SecurityEnable )
//  408 {
        FUNCALL ZDP_MatchDescReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        LCALL   ?Subroutine58 & 0xFFFF
//  409   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_239:
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V0,A
//  410   // nwkAddr+ProfileID+NumInClusters+NumOutClusters.
//  411   byte i, len = 2 + 2 + 1 + 1;  // nwkAddr+ProfileID+NumInClusters+NumOutClusters.
//  412 
//  413   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  414 
//  415   len += (NumInClusters + NumOutClusters) * sizeof(uint16);
        MOV     A,R6
        ADD     A,?V0
        CLR     C
        RLC     A
        ADD     A,#0x6
        MOV     R7,A
//  416 
//  417   if ( len >= ZDP_BUF_SZ-1 )
        CLR     C
        SUBB    A,#0x4f
        JC      ??ZDP_MatchDescReq_0
//  418   {
//  419     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??ZDP_MatchDescReq_1 & 0xFFFF
//  420   }
//  421 
//  422   // The spec changed in Zigbee 2007 (2.4.3.1.7.1) to not allow sending
//  423   // this command to 0xFFFF.  So, here we will filter this and replace
//  424   // with 0xFFFD to only send to devices with RX ON.  This includes the
//  425   // network address of interest.
//  426   if ( ((dstAddr->addrMode == AddrBroadcast) || (dstAddr->addrMode == Addr16Bit))
//  427       && (dstAddr->addr.shortAddr == NWK_BROADCAST_SHORTADDR_DEVALL) )
??ZDP_MatchDescReq_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
        MOV     A,#0xf
        XRL     A,?V1
        JZ      ??ZDP_MatchDescReq_2
        MOV     A,#0x2
        XRL     A,?V1
        JNZ     ??ZDP_MatchDescReq_3
??ZDP_MatchDescReq_2:
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        CPL     A
        JNZ     ??ZDP_MatchDescReq_4
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
??ZDP_MatchDescReq_4:
        JNZ     ??ZDP_MatchDescReq_3
//  428   {
//  429     dstAddr->addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,#-0x3
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
//  430   }
//  431   if ( nwkAddr == NWK_BROADCAST_SHORTADDR_DEVALL )
??ZDP_MatchDescReq_3:
        MOV     A,#-0x1
        XRL     A,R4
        JNZ     ??ZDP_MatchDescReq_5
        MOV     A,#-0x1
        XRL     A,R5
??ZDP_MatchDescReq_5:
        JNZ     ??ZDP_MatchDescReq_6
//  432   {
//  433     nwkAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
        MOV     R4,#-0x3
        MOV     R5,#-0x1
//  434   }
//  435 
//  436   *pBuf++ = LO_UINT16( nwkAddr );   // NWKAddrOfInterest
??ZDP_MatchDescReq_6:
        MOV     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
//  437   *pBuf++ = HI_UINT16( nwkAddr );
        MOV     A,R5
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine60 & 0xFFFF
//  438 
//  439   *pBuf++ = LO_UINT16( ProfileID );   // Profile ID
??CrossCallReturnLabel_93:
        MOV     A,R4
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
//  440   *pBuf++ = HI_UINT16( ProfileID );
        MOV     A,R5
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine37 & 0xFFFF
//  441 
//  442   *pBuf++ = NumInClusters; // Input cluster list
??CrossCallReturnLabel_49:
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#0x5
        MOV     R0,A
        JNC     ??ZDP_MatchDescReq_7
        INC     R1
//  443   if ( NumInClusters )
??ZDP_MatchDescReq_7:
        MOV     A,R6
        JZ      ??ZDP_MatchDescReq_8
//  444   {
//  445     for (i=0; i<NumInClusters; ++i)  {
        MOV     ?V1,#0x0
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine59 & 0xFFFF
//  446       *pBuf++ = LO_UINT16( InClusterList[i] );
??CrossCallReturnLabel_91:
        LCALL   ?Subroutine12 & 0xFFFF
//  447       *pBuf++ = HI_UINT16( InClusterList[i] );
//  448     }
??CrossCallReturnLabel_4:
        JNC     ??ZDP_MatchDescReq_9
        INC     R1
??ZDP_MatchDescReq_9:
        INC     ?V1
        MOV     A,?V1
        CLR     C
        SUBB    A,R6
        JC      ??CrossCallReturnLabel_91
//  449   }
//  450 
//  451   *pBuf++ = NumOutClusters; // Output cluster list
??ZDP_MatchDescReq_8:
        MOV     DPL,R0
        MOV     DPH,R1
        MOV     A,?V0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
//  452   if ( NumOutClusters )
        JZ      ??ZDP_MatchDescReq_10
//  453   {
//  454     for (i=0; i<NumOutClusters; ++i)  {
        MOV     ?V1,#0x0
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine59 & 0xFFFF
//  455       *pBuf++ = LO_UINT16( OutClusterList[i] );
??CrossCallReturnLabel_92:
        LCALL   ?Subroutine12 & 0xFFFF
//  456       *pBuf++ = HI_UINT16( OutClusterList[i] );
//  457     }
??CrossCallReturnLabel_5:
        JNC     ??ZDP_MatchDescReq_11
        INC     R1
??ZDP_MatchDescReq_11:
        INC     ?V1
        MOV     A,?V1
        CLR     C
        SUBB    A,?V0
        JC      ??CrossCallReturnLabel_92
//  458   }
//  459 
//  460   return fillAndSend( &ZDP_TransID, dstAddr, Match_Desc_req, len );
??ZDP_MatchDescReq_10:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x6
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R7
        MOV     R1,A
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
??ZDP_MatchDescReq_1:
        SJMP    ??Subroutine98_0
//  461 }
          CFI EndBlock cfiBlock13

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond14 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_91
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function ZDP_MatchDescReq
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond15) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond15) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond15) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond15) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond15) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond15) CFA_SP SP+-2
          CFI (cfiCond15) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker16 Using cfiCommon1
          CFI (cfiPicker16) NoFunction
          CFI (cfiPicker16) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        MOV     ?V2,R4
        MOV     ?V3,R5
        RET
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiPicker16

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond17 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_48
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond18 Using cfiCommon0
          CFI (cfiCond18) Function ZDP_MatchDescReq
          CFI (cfiCond18) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond18) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond18) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond18) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond18) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond18) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond18) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond18) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond18) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond18) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond18) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond18) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond18) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond18) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond18) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond18) CFA_SP SP+-2
          CFI (cfiCond18) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker19 Using cfiCommon1
          CFI (cfiPicker19) NoFunction
          CFI (cfiPicker19) Picker
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R6
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond17
          CFI EndBlock cfiCond18
          CFI EndBlock cfiPicker19

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond20 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function ZDP_MatchDescReq
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond21) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond21) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond21) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond21) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond21) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond21) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond21) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond21) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond21) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond21) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond21) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond21) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond21) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond21) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond21) CFA_SP SP+-2
          CFI (cfiCond21) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker22 Using cfiCommon1
          CFI (cfiPicker22) NoFunction
          CFI (cfiPicker22) Picker
        MOV     R4,?V1
        MOV     A,R4
        ADD     A,R4
        MOV     R4,A
        CLR     A
        RLC     A
        MOV     R5,A
        MOV     A,?V2
        ADD     A,R4
        MOV     R4,A
        MOV     A,?V3
        ADDC    A,R5
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_213:
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_170:
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_215:
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#0x2
        MOV     R0,A
        RET
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiPicker22

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock23 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 26)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock23
        REQUIRE ??Subroutine98_0
        ; // Fall through to label ??Subroutine98_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine98_0:
          CFI Block cfiBlock24 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x6
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock24
//  462 
//  463 /*********************************************************************
//  464  * @fn          ZDP_SimpleDescReq
//  465  *
//  466  * @brief       This builds and send a NWK_Simple_Desc_req
//  467  *              message.  This function sends unicast message to the
//  468  *              destination device.
//  469  *
//  470  * @param       dstAddr - destination address
//  471  * @param       nwkAddr - 16 bit address
//  472  * @param       epIntf - endpoint/interface
//  473  * @param       SecurityEnable - Security Options
//  474  *
//  475  * @return      afStatus_t
//  476  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  477 afStatus_t ZDP_SimpleDescReq( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_SimpleDescReq:
          CFI Block cfiBlock25 Using cfiCommon0
          CFI Function ZDP_SimpleDescReq
        CODE
//  478                                     byte endPoint, byte SecurityEnable )
//  479 
//  480 {
        FUNCALL ZDP_SimpleDescReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  481   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  482 
//  483   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
        LCALL   ?Subroutine19 & 0xFFFF
//  484   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_17:
        LCALL   ?Subroutine13 & 0xFFFF
//  485   ZDP_TmpBuf[2] = endPoint;
//  486 
//  487   return fillAndSend( &ZDP_TransID, dstAddr, Simple_Desc_req, 3 );
??CrossCallReturnLabel_6:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x4
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     R1,#0x3
        LJMP    ?Subroutine8 & 0xFFFF
//  488 }
          CFI EndBlock cfiBlock25

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond26 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond27 Using cfiCommon0
          CFI (cfiCond27) Function ZDP_SimpleDescReq
          CFI (cfiCond27) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond27) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond27) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond27) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond27) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond27) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond27) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond27) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond27) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond27) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond27) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond27) CFA_SP SP+-2
          CFI (cfiCond27) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker28 Using cfiCommon1
          CFI (cfiPicker28) NoFunction
          CFI (cfiPicker28) Picker
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_146:
        MOV     A,R4
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_117:
        MOV     A,R5
        RET
          CFI EndBlock cfiCond26
          CFI EndBlock cfiCond27
          CFI EndBlock cfiPicker28

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock29 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP102_8
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock29
        REQUIRE ??Subroutine99_0
        ; // Fall through to label ??Subroutine99_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine99_0:
          CFI Block cfiBlock30 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x9
          CFI EndBlock cfiBlock30
        REQUIRE ??Subroutine100_0
        ; // Fall through to label ??Subroutine100_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine100_0:
          CFI Block cfiBlock31 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Valid
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock31
//  489 
//  490 /*********************************************************************
//  491  * @fn          ZDP_UserDescSet
//  492  *
//  493  * @brief       This builds and send a User_Desc_set message to set
//  494  *              the user descriptor.  This function sends unicast
//  495  *              message to the destination device.
//  496  *
//  497  * @param       dstAddr - destination address
//  498  * @param       nwkAddr - 16 bit address
//  499  * @param       UserDescriptor - user descriptor
//  500  * @param       SecurityEnable - Security Options
//  501  *
//  502  * @return      afStatus_t
//  503  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  504 afStatus_t ZDP_UserDescSet( zAddrType_t *dstAddr, uint16 nwkAddr,
ZDP_UserDescSet:
          CFI Block cfiBlock32 Using cfiCommon0
          CFI Function ZDP_UserDescSet
        CODE
//  505                           UserDescriptorFormat_t *UserDescriptor,
//  506                           byte SecurityEnable )
//  507 {
        FUNCALL ZDP_UserDescSet, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescSet, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 15, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 15, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescSet, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 0
        LCALL   ?Subroutine54 & 0xFFFF
//  508   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_82:
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine44 & 0xFFFF
//  509   byte len = (UserDescriptor->len < AF_MAX_USER_DESCRIPTOR_LEN) ?
//  510               UserDescriptor->len : AF_MAX_USER_DESCRIPTOR_LEN;
??CrossCallReturnLabel_60:
        MOV     R2,A
        CLR     C
        SUBB    A,#0x10
        JNC     ??ZDP_UserDescSet_0
        MOV     ?V2,R2
        SJMP    ??ZDP_UserDescSet_1
??ZDP_UserDescSet_0:
        MOV     ?V2,#0x10
//  511   byte addrLen = 2;
//  512 
//  513   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  514 
//  515   *pBuf++ = LO_UINT16( nwkAddr );
??ZDP_UserDescSet_1:
        MOV     A,R4
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    @DPTR,A
//  516   *pBuf++ = HI_UINT16( nwkAddr );
        MOV     A,R5
        LCALL   ?Subroutine32 & 0xFFFF
//  517 
//  518   *pBuf++ = len;
??CrossCallReturnLabel_42:
        MOV     A,?V2
        LCALL   ?Subroutine10 & 0xFFFF
//  519   addrLen = 3;
//  520 
//  521   pBuf = osal_memcpy( pBuf, UserDescriptor->desc, len );
??CrossCallReturnLabel_0:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R4,?V2
        MOV     R5,#0x0
        MOV     A,?V0
        ADD     A,#0x3
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
//  522   osal_memset( pBuf, AF_USER_DESCRIPTOR_FILL, AF_MAX_USER_DESCRIPTOR_LEN-len );
        ; Setup parameters for call to function osal_memset
        MOV     R0,?V2
        MOV     A,#0x10
        CLR     C
        SUBB    A,R0
        MOV     R4,A
        SUBB    A,0xE0 /* A   */
        MOV     R5,A
        MOV     R1,#0x20
        LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
//  523 
//  524   return fillAndSend( &ZDP_TransID, dstAddr, User_Desc_set, (AF_MAX_USER_DESCRIPTOR_LEN + addrLen) );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x14
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV     R1,#0x13
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
          CFI EndBlock cfiBlock32
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3
//  525 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock33 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Valid
        MOV     R7,#0x7
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock33
//  526 
//  527 /*********************************************************************
//  528  * @fn          ZDP_ServerDiscReq
//  529  *
//  530  * @brief       Build and send a Server_Discovery_req request message.
//  531  *
//  532  * @param       serverMask - 16-bit bit-mask of server services being sought.
//  533  * @param       SecurityEnable - Security Options
//  534  *
//  535  * @return      afStatus_t
//  536  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  537 afStatus_t ZDP_ServerDiscReq( uint16 serverMask, byte SecurityEnable )
ZDP_ServerDiscReq:
          CFI Block cfiBlock34 Using cfiCommon0
          CFI Function ZDP_ServerDiscReq
        CODE
//  538 {
        FUNCALL ZDP_ServerDiscReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV     A,#-0x9
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        LCALL   ?Subroutine58 & 0xFFFF
//  539   uint8 *pBuf = ZDP_TmpBuf;
//  540   zAddrType_t dstAddr;
//  541 
//  542   dstAddr.addrMode = AddrBroadcast;
??CrossCallReturnLabel_240:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine20 & 0xFFFF
//  543   dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  544 
//  545   *pBuf++ = LO_UINT16( serverMask );
??CrossCallReturnLabel_18:
        MOV     A,R2
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    @DPTR,A
//  546   *pBuf = HI_UINT16( serverMask );
        MOV     A,R3
        INC     DPTR
        MOVX    @DPTR,A
//  547 
//  548   FillAndSendTxOptions( &ZDP_TransID, &dstAddr, Server_Discovery_req, 2,
//  549              ((SecurityEnable) ? AF_EN_SECURITY : AF_TX_OPTIONS_NONE) );
        MOV     A,R6
        MOV     DPTR,#ZDP_TxOptions
        JZ      ??ZDP_ServerDiscReq_0
        MOV     A,#0x40
        SJMP    ??ZDP_ServerDiscReq_1
??ZDP_ServerDiscReq_0:
        CLR     A
??ZDP_ServerDiscReq_1:
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x15
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,#0x2
        MOV     A,R1
        LCALL   ?XSTACK_DISP102_8
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     R1,A
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
        LJMP    ??Subroutine99_0 & 0xFFFF
//  550 }
          CFI EndBlock cfiBlock34
//  551 
//  552 /*********************************************************************
//  553  * @fn          ZDP_DeviceAnnce
//  554  *
//  555  * @brief       This builds and send a Device_Annce message.  This
//  556  *              function sends a broadcast message.
//  557  *
//  558  * @param       nwkAddr - 16 bit address of the device
//  559  * @param       IEEEAddr - 64 bit address of the device
//  560  * @param       capabilities - device capabilities.  This field is only
//  561  *                 sent for v1.1 networks.
//  562  * @param       SecurityEnable - Security Options
//  563  *
//  564  * @return      afStatus_t
//  565  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  566 afStatus_t ZDP_DeviceAnnce( uint16 nwkAddr, uint8 *IEEEAddr,
ZDP_DeviceAnnce:
          CFI Block cfiBlock35 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
        CODE
//  567                               byte capabilities, byte SecurityEnable )
//  568 {
        FUNCALL ZDP_DeviceAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_DeviceAnnce, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 9
        MOV     A,#-0x9
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     R6,A
//  569   zAddrType_t dstAddr;
//  570   uint8 len;
//  571 
//  572   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  573 
//  574   dstAddr.addrMode = (afAddrMode_t)AddrBroadcast;
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine20 & 0xFFFF
//  575   dstAddr.addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVRXON;
//  576 
//  577   ZDP_TmpBuf[0] = LO_UINT16( nwkAddr );
??CrossCallReturnLabel_19:
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_183:
        MOV     A,R2
        LCALL   ?Subroutine23 & 0xFFFF
//  578   ZDP_TmpBuf[1] = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_24:
        MOV     A,R3
        MOVX    @DPTR,A
//  579   osal_cpyExtAddr( &ZDP_TmpBuf[2], IEEEAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        ADD     A,#0x2
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  580   len = 2 + Z_EXTADDR_LEN;
//  581 
//  582   ZDP_TmpBuf[10] = capabilities;
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_258:
        XCH     A,R0
        ADD     A,#0xa
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOV     A,R6
        MOVX    @DPTR,A
//  583   len++;
//  584 
//  585   return fillAndSend( &ZDP_TransID, &dstAddr, Device_annce, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x13
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,#0xb
        LJMP    ?Subroutine2 & 0xFFFF
//  586 }
          CFI EndBlock cfiBlock35

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond36 Using cfiCommon0
          CFI Function ZDP_ServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_18
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond37 Using cfiCommon0
          CFI (cfiCond37) Function ZDP_DeviceAnnce
          CFI (cfiCond37) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond37) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond37) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond37) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond37) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond37) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond37) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond37) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond37) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond37) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond37) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond37) CFA_SP SP+-2
          CFI (cfiCond37) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker38 Using cfiCommon1
          CFI (cfiPicker38) NoFunction
          CFI (cfiPicker38) Picker
        LCALL   ?Subroutine83 & 0xFFFF
??CrossCallReturnLabel_137:
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond36
          CFI EndBlock cfiCond37
          CFI EndBlock cfiPicker38

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond39 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_136
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond40 Using cfiCommon0
          CFI (cfiCond40) Function ZDP_ServerDiscReq
          CFI (cfiCond40) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_18
          CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond40) CFA_SP SP+-4
          CFI (cfiCond40) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond41 Using cfiCommon0
          CFI (cfiCond41) Function ZDP_DeviceAnnce
          CFI (cfiCond41) Conditional ??CrossCallReturnLabel_137, ??CrossCallReturnLabel_19
          CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond41) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond41) CFA_SP SP+-4
          CFI (cfiCond41) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker42 Using cfiCommon1
          CFI (cfiPicker42) NoFunction
          CFI (cfiPicker42) Picker
        MOV     A,#0xf
        MOVX    @DPTR,A
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,#-0x3
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x1
        RET
          CFI EndBlock cfiCond39
          CFI EndBlock cfiCond40
          CFI EndBlock cfiCond41
          CFI EndBlock cfiPicker42
//  587 
//  588 /*********************************************************************
//  589  * @fn          ZDP_ParentAnnce
//  590  *
//  591  * @brief       This builds and send a Parent_Annce and Parent_Annce_Rsp
//  592  *              messages, it will depend on the clusterID parameter.
//  593  *
//  594  * @param       TransSeq - ZDP Transaction Sequence Number
//  595  * @param       dstAddr - destination address
//  596  * @param       numberOfChildren - 8 bit number of children
//  597  * @param       childInfo - list of children information (ExtAddr and Age)
//  598  * @param       clusterID - Parent_annce or Parent_annce_rsp
//  599  * @param       SecurityEnable - Security Options
//  600  *
//  601  * @return      afStatus_t
//  602  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  603 afStatus_t ZDP_ParentAnnce( uint8 *TransSeq,
ZDP_ParentAnnce:
          CFI Block cfiBlock43 Using cfiCommon0
          CFI Function ZDP_ParentAnnce
        CODE
//  604                             zAddrType_t *dstAddr,
//  605                             uint8 numberOfChildren,
//  606                             uint8 *childInfo,
//  607                             cId_t clusterID,
//  608                             uint8 SecurityEnable )
//  609 {
        FUNCALL ZDP_ParentAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_ParentAnnce, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_ParentAnnce, ZDApp_SetParentAnnceTimer
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_ParentAnnce, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_ParentAnnce, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 0
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
        MOV     ?V8,R1
//  610   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ??Subroutine112_0 & 0xFFFF
//  611   ZDO_ChildInfo_t *pChildInfo;
//  612   uint8 i, len;
//  613   uint8 *numOfChild;
//  614 
//  615   (void)SecurityEnable;  // Intentionally unreferenced parameter
//  616 
//  617   pChildInfo = (ZDO_ChildInfo_t *)childInfo;
//  618 
//  619   if ( dstAddr->addrMode == AddrBroadcast )
??CrossCallReturnLabel_203:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0xf
        JNZ     ??ZDP_ParentAnnce_0
//  620   {
//  621     // Make sure is sent to 0xFFFC
//  622     dstAddr->addr.shortAddr = NWK_BROADCAST_SHORTADDR_DEVZCZR;
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#-0x4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
//  623   }
//  624   len = 1;
??ZDP_ParentAnnce_0:
        MOV     ?V6,#0x1
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine45 & 0xFFFF
//  625   if ( clusterID == Parent_annce_rsp )
??CrossCallReturnLabel_64:
        MOV     A,#0x1f
        XRL     A,?V2
        JNZ     ??ZDP_ParentAnnce_1
        MOV     A,#-0x80
        XRL     A,?V3
??ZDP_ParentAnnce_1:
        JNZ     ??CrossCallReturnLabel_151
//  626   {
//  627     // + Status Byte
//  628     len += 1;
        MOV     ?V6,#0x2
//  629     // Set the status bit to success
//  630     *pBuf++ = 0;
        MOV     DPL,R2
        MOV     DPH,R3
        CLR     A
        LCALL   ??Subroutine101_0 & 0xFFFF
//  631   }
//  632   
//  633   numOfChild = pBuf;
??CrossCallReturnLabel_151:
        MOV     ?V0,R2
        MOV     ?V1,R3
//  634   *pBuf++ = numberOfChildren;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,R1
        LCALL   ??Subroutine101_0 & 0xFFFF
//  635 
//  636   for ( i = 0; i < MAX_PARENT_ANNCE_CHILD; i++ )
??CrossCallReturnLabel_152:
        MOV     ?V7,#0x0
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V12,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V13,A
//  637   {
//  638     pBuf = osal_cpyExtAddr( pBuf, pChildInfo[childIndex].extAddr );
??ZDP_ParentAnnce_2:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     DPTR,#childIndex
        MOVX    A,@DPTR
        MOV     B,#0xc
        MUL     AB
        MOV     R0,A
        MOV     R1,B
        MOV     A,?V12
        ADD     A,R0
        MOV     R4,A
        MOV     A,?V13
        ADDC    A,R1
        MOV     R5,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  639     childIndex++;
        MOV     DPTR,#childIndex
        MOVX    A,@DPTR
        INC     A
        MOVX    @DPTR,A
//  640     
//  641     len += Z_EXTADDR_LEN;
        MOV     A,#0x8
        ADD     A,?V6
        MOV     ?V6,A
//  642     
//  643     if ( childIndex == numberOfChildren )
        MOVX    A,@DPTR
        XRL     A,?V8
        JNZ     ??ZDP_ParentAnnce_3
//  644     {
//  645       pBuf = numOfChild;
//  646       *pBuf = i + 1;
        MOV     A,#0x1
        ADD     A,?V7
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    @DPTR,A
//  647       // All childs are taken, restart index and go out
//  648       childIndex = 0;
        MOV     DPTR,#childIndex
        CLR     A
        MOVX    @DPTR,A
//  649       return fillAndSend( TransSeq, dstAddr, clusterID, len );
        ; Setup parameters for call to function fillAndSend
        SJMP    ??ZDP_ParentAnnce_4
//  650     }
//  651   }
??ZDP_ParentAnnce_3:
        INC     ?V7
        MOV     A,?V7
        CLR     C
        SUBB    A,#0xa
        JC      ??ZDP_ParentAnnce_2
//  652   
//  653   pBuf = numOfChild;
//  654   *pBuf = MAX_PARENT_ANNCE_CHILD;
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOV     A,#0xa
        MOVX    @DPTR,A
//  655   if ( childIndex < numberOfChildren )
        MOV     DPTR,#childIndex
        MOVX    A,@DPTR
        CLR     C
        SUBB    A,?V8
        JNC     ??ZDP_ParentAnnce_4
//  656   {
//  657     if ( clusterID == Parent_annce )
        MOV     A,#0x1f
        XRL     A,?V2
        ORL     A,?V3
        JNZ     ??ZDP_ParentAnnce_5
//  658     {
//  659       ZDApp_SetParentAnnceTimer();
        ; Setup parameters for call to function ZDApp_SetParentAnnceTimer
        LCALL   `??ZDApp_SetParentAnnceTimer::?relay`; Banked call to: ZDApp_SetParentAnnceTimer
        SJMP    ??ZDP_ParentAnnce_4
//  660     }
//  661     if ( clusterID == Parent_annce_rsp )
??ZDP_ParentAnnce_5:
        MOV     A,#0x1f
        XRL     A,?V2
        JNZ     ??ZDP_ParentAnnce_6
        MOV     A,#-0x80
        XRL     A,?V3
??ZDP_ParentAnnce_6:
        JNZ     ??ZDP_ParentAnnce_4
//  662     {
//  663       osal_start_timerEx( ZDAppTaskID, ZDO_PARENT_ANNCE_EVT, 10 );
        ; Setup parameters for call to function osal_start_timerEx
        MOV     DPTR,#__Constant_a
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 26)
        MOV     R2,#0x0
        MOV     R3,#0x40
        MOV     DPTR,#ZDAppTaskID
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??osal_start_timerEx::?relay`; Banked call to: osal_start_timerEx
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
//  664     }
//  665   }
//  666 
//  667   return fillAndSend( TransSeq, dstAddr, clusterID, len );
??ZDP_ParentAnnce_4:
        ; Setup parameters for call to function fillAndSend
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R1,?V6
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     R2,?V4
        MOV     R3,?V5
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LJMP    ??Subroutine114_0 & 0xFFFF
//  668 }
          CFI EndBlock cfiBlock43

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond44 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_63
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function ZDP_ParentAnnce
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond45) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond45) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond45) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond45) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond45) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond45) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond45) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond45) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond45) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+-2
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond46) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond46) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond46) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond46) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond46) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond46) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond46) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond46) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond46) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond46) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_SP SP+-2
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond47 Using cfiCommon0
          CFI (cfiCond47) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond47) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond47) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond47) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond47) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond47) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond47) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond47) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond47) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond47) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond47) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond47) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond47) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond47) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond47) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond47) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond47) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond47) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond47) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond47) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond47) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond47) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond47) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond47) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond47) CFA_SP SP+-2
          CFI (cfiCond47) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker48 Using cfiCommon1
          CFI (cfiPicker48) NoFunction
          CFI (cfiPicker48) Picker
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V3,A
        RET
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiCond47
          CFI EndBlock cfiPicker48
//  669 
//  670 /*********************************************************************
//  671  * Address Responses
//  672  */
//  673 
//  674 /*********************************************************************
//  675  * @fn      zdpProcessAddrReq
//  676  *
//  677  * @brief   Process an incoming NWK_addr_req or IEEE_addr_req message and then
//  678  *          build and send a corresponding NWK_addr_rsp or IEEE_addr_rsp msg.
//  679  *
//  680  * @param   inMsg - incoming message
//  681  *
//  682  * @return  none
//  683  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  684 void zdpProcessAddrReq( zdoIncomingMsg_t *inMsg )
zdpProcessAddrReq:
          CFI Block cfiBlock49 Using cfiCommon0
          CFI Function zdpProcessAddrReq
        CODE
//  685 {
        FUNCALL zdpProcessAddrReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdpProcessAddrReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        MOV     A,#-0x11
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
        ; Saved register size: 17
        ; Auto size: 0
        MOV     ?V0,R2
        MOV     ?V1,R3
//  686   associated_devices_t *pAssoc;
//  687   uint8 reqType;
//  688   uint16 aoi = INVALID_NODE_ADDR;
        MOV     R6,#-0x2
        MOV     R7,#-0x1
//  689   uint8 *ieee = NULL;
        MOV     ?V2,#0x0
        MOV     ?V3,#0x0
//  690 
//  691   reqType = inMsg->asdu[(inMsg->clusterID == NWK_addr_req) ? Z_EXTADDR_LEN : sizeof( uint16 ) ];
        MOV     A,R2
        ADD     A,#0xc
        MOV     ?V4,A
        CLR     A
        ADDC    A,?V1
        MOV     ?V5,A
        MOV     DPL,?V4
        MOV     DPH,A
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_199:
        MOV     A,R2
        ORL     A,R3
        JNZ     ??zdpProcessAddrReq_0
        MOV     R4,#0x8
        SJMP    ??zdpProcessAddrReq_1
??zdpProcessAddrReq_0:
        MOV     R4,#0x2
??zdpProcessAddrReq_1:
        MOV     A,?V0
        ADD     A,#0x13
        MOV     DPL,A
        CLR     A
        ADDC    A,?V1
        MOV     DPH,A
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_89:
        ADD     A,R4
        MOV     DPL,A
        CLR     A
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V8,A
//  692 
//  693   if ( inMsg->clusterID == NWK_addr_req )
        MOV     A,?V0
        ADD     A,#0xb
        MOV     ?V6,A
        CLR     A
        ADDC    A,?V1
        MOV     ?V7,A
        MOV     A,R2
        ORL     A,R3
        JNZ     ??zdpProcessAddrReq_2
//  694 
//  695   {
//  696     ieee = inMsg->asdu;
        MOV     ?V2,R0
        MOV     ?V3,R1
//  697 
//  698     if ( osal_ExtAddrEqual( saveExtAddr, ieee ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV     R4,?V2
        MOV     R5,?V3
        MOV     R2,#saveExtAddr & 0xff
        MOV     R3,#(saveExtAddr >> 8) & 0xff
        LCALL   `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV     A,R1
        JZ      ??zdpProcessAddrReq_3
//  699     {
//  700       aoi = ZDAppNwkAddr.addr.shortAddr;
        LCALL   ?Subroutine49 & 0xFFFF
//  701     }
//  702     // Handle response for sleeping end devices
//  703     else if ( (ZSTACK_ROUTER_BUILD)
//  704       && (((pAssoc = AssocGetWithExt( ieee )) != NULL)
//  705              && ((pAssoc->nodeRelation == CHILD_RFD) || (pAssoc->nodeRelation == CHILD_RFD_RX_IDLE)) ) )
//  706     {
//  707       aoi = pAssoc->shortAddr;
//  708       if ( reqType != ZDP_ADDR_REQTYPE_SINGLE )
//  709         reqType = 0xFF; // Force Invalid
//  710     }
//  711   }
??CrossCallReturnLabel_221:
        SJMP    ??zdpProcessAddrReq_4
//  712   else  // if ( inMsg->clusterID == IEEE_addr_req )
//  713   {
//  714     aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
??zdpProcessAddrReq_2:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        CLR     A
        XCH     A,R0
        MOV     R1,A
        MOV     A,R2
        ADD     A,R0
        MOV     R6,A
        CLR     A
        ADDC    A,R1
        MOV     R7,A
//  715 
//  716     if ( aoi == ZDAppNwkAddr.addr.shortAddr )
        MOV     DPTR,#ZDAppNwkAddr
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??zdpProcessAddrReq_5
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R7
??zdpProcessAddrReq_5:
        JNZ     ??zdpProcessAddrReq_3
//  717     {
//  718       ieee = saveExtAddr;
        MOV     ?V2,#saveExtAddr & 0xff
        MOV     ?V3,#(saveExtAddr >> 8) & 0xff
//  719     }
//  720     else if ( (ZSTACK_ROUTER_BUILD)
//  721       && (((pAssoc = AssocGetWithShort( aoi )) != NULL)
//  722              && (pAssoc->nodeRelation == CHILD_RFD)) )
//  723     {
//  724       AddrMgrEntry_t addrEntry;
//  725       addrEntry.user = ADDRMGR_USER_DEFAULT;
//  726       addrEntry.index = pAssoc->addrIdx;
//  727       if ( AddrMgrEntryGet( &addrEntry ) )
//  728       {
//  729         ieee = addrEntry.extAddr;
//  730       }
//  731 
//  732       if ( reqType != ZDP_ADDR_REQTYPE_SINGLE )
//  733         reqType = 0xFF; // Force Invalid
//  734     }
//  735   }
//  736 
//  737   if ( ((aoi != INVALID_NODE_ADDR) && (ieee != NULL)) || (inMsg->wasBroadcast == FALSE) )
??zdpProcessAddrReq_4:
        MOV     A,#-0x2
        XRL     A,R6
        JNZ     ??zdpProcessAddrReq_6
        MOV     A,#-0x1
        XRL     A,R7
??zdpProcessAddrReq_6:
        JZ      ??zdpProcessAddrReq_3
        MOV     A,?V2
        ORL     A,?V3
        JNZ     ??zdpProcessAddrReq_7
??zdpProcessAddrReq_3:
        MOV     DPL,?V6
        MOV     DPH,?V7
        MOVX    A,@DPTR
        JZ      $+5
        LJMP    ??zdpProcessAddrReq_8 & 0xFFFF
//  738   {
//  739     uint8 stat;
//  740     uint8 *pBuf = ZDP_TmpBuf;
??zdpProcessAddrReq_7:
        LCALL   ??Subroutine112_0 & 0xFFFF
//  741     // Status + IEEE-Addr + Nwk-Addr.
//  742     uint8 len = 1 + Z_EXTADDR_LEN + 2;
//  743 
//  744     // If aoi and iee are both setup, we found results
//  745     if ( (aoi != INVALID_NODE_ADDR) && (ieee != NULL) )
??CrossCallReturnLabel_204:
        MOV     A,#-0x2
        XRL     A,R6
        JNZ     ??zdpProcessAddrReq_9
        MOV     A,#-0x1
        XRL     A,R7
??zdpProcessAddrReq_9:
        JZ      ??zdpProcessAddrReq_10
        MOV     A,?V2
        ORL     A,?V3
        JZ      ??zdpProcessAddrReq_10
//  746     {
//  747       stat = ((reqType == ZDP_ADDR_REQTYPE_SINGLE) || (reqType == ZDP_ADDR_REQTYPE_EXTENDED))
//  748                     ? ZDP_SUCCESS : ZDP_INVALID_REQTYPE;
        MOV     A,?V8
        JZ      ??zdpProcessAddrReq_11
        MOV     A,#0x1
        XRL     A,?V8
        JNZ     ??zdpProcessAddrReq_12
??zdpProcessAddrReq_11:
        MOV     R0,#0x0
        SJMP    ??zdpProcessAddrReq_13
??zdpProcessAddrReq_12:
        MOV     R0,#-0x80
//  749               
//  750       if(stat == ZDP_INVALID_REQTYPE)
//  751       {
//  752         //R21 Errata update CCB 2111 
//  753         if(inMsg->wasBroadcast == TRUE)
        MOV     DPL,?V6
        MOV     DPH,?V7
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??zdpProcessAddrReq_13
//  754         {
//  755           return;
        SJMP    ??zdpProcessAddrReq_8
//  756         }
//  757         
//  758         stat = ZDP_INVALID_REQTYPE;
//  759       }
//  760     }
//  761     else
//  762     {
//  763       // not found and the req was unicast to this device
//  764       stat = ZDP_DEVICE_NOT_FOUND;
??zdpProcessAddrReq_10:
        MOV     R0,#-0x7f
//  765 
//  766       // Fill in the missing field with this device's address
//  767       if ( inMsg->clusterID == NWK_addr_req )
        MOV     DPL,?V4
        MOV     DPH,?V5
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_94:
        MOV     A,R4
        ORL     A,R5
        JNZ     ??zdpProcessAddrReq_14
//  768       {
//  769         aoi = ZDAppNwkAddr.addr.shortAddr;
        LCALL   ?Subroutine49 & 0xFFFF
//  770       }
??CrossCallReturnLabel_222:
        SJMP    ??zdpProcessAddrReq_13
//  771       else
//  772       {
//  773         ieee = saveExtAddr;
??zdpProcessAddrReq_14:
        MOV     ?V2,#saveExtAddr & 0xff
        MOV     ?V3,#(saveExtAddr >> 8) & 0xff
//  774       }
//  775     }
//  776 
//  777     *pBuf++ = stat;
??zdpProcessAddrReq_13:
        MOV     A,R0
        LCALL   ?Subroutine15 & 0xFFFF
//  778 
//  779     pBuf = osal_cpyExtAddr( pBuf, ieee );
??CrossCallReturnLabel_154:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     R4,?V2
        MOV     R5,?V3
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,R2
        MOV     DPH,R3
//  780 
//  781     *pBuf++ = LO_UINT16( aoi );
        MOV     A,R6
        MOVX    @DPTR,A
//  782     *pBuf++ = HI_UINT16( aoi );
        MOV     A,R7
        INC     DPTR
        MOVX    @DPTR,A
//  783 
//  784     if ( ZSTACK_ROUTER_BUILD )
//  785     {
//  786       if ( (reqType == ZDP_ADDR_REQTYPE_EXTENDED) && (aoi == ZDAppNwkAddr.addr.shortAddr)
//  787            && (stat == ZDP_SUCCESS) )
//  788       {
//  789         uint8  cnt = 0;
//  790         
//  791         //Updated to only search for ZED devices as per R21 spec (2.4.3.1.1.2)
//  792         uint16 *list = AssocMakeList( &cnt );
//  793 
//  794         if ( list != NULL )
//  795         {
//  796           byte idx = inMsg->asdu[(((inMsg->clusterID == NWK_addr_req) ? Z_EXTADDR_LEN : sizeof( uint16 )) + 1)];
//  797           uint16 *pList = list + idx;
//  798 
//  799           // NumAssocDev field is only present on success.
//  800           if ( cnt > idx )
//  801           {
//  802             cnt -= idx;
//  803             len += (cnt * sizeof( uint16 ));
//  804           }
//  805           else
//  806           {
//  807             cnt = 0;
//  808           }
//  809           *pBuf++ = cnt;
//  810           len++;
//  811 
//  812           // StartIndex field is only present if NumAssocDev field is non-zero.
//  813           *pBuf++ = idx;
//  814           len++;
//  815 
//  816           while ( cnt != 0 )
//  817           {
//  818             *pBuf++ = LO_UINT16( *pList );
//  819             *pBuf++ = HI_UINT16( *pList );
//  820             pList++;
//  821             cnt--;
//  822           }
//  823 
//  824           osal_mem_free( (uint8 *)list );
//  825         }
//  826         else
//  827         {
//  828           // NumAssocDev field is only present on success.
//  829           *pBuf++ = 0;
//  830           len++;
//  831         }
//  832       }
//  833     }
//  834 
//  835     ZDP_TxOptions = AF_MSG_ACK_REQUEST;
        MOV     DPTR,#ZDP_TxOptions
        MOV     A,#0x10
        MOVX    @DPTR,A
//  836     fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), (cId_t)(inMsg->clusterID | ZDO_RESPONSE_BIT), len );
        ; Setup parameters for call to function fillAndSend
        MOV     DPL,?V4
        MOV     DPH,?V5
        MOVX    A,@DPTR
        MOV     ?V2,A
        INC     DPTR
        MOVX    A,@DPTR
        ORL     A,#0x80
        MOV     ?V3,A
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     R1,#0xb
        MOV     A,?V0
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,?V1
        MOV     R5,A
        MOV     A,?V0
        ADD     A,#0xf
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
//  837     ZDP_TxOptions = AF_TX_OPTIONS_NONE;
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
//  838   }
//  839 }
??zdpProcessAddrReq_8:
        MOV     R7,#0x9
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock49

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond50 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_154
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond51 Using cfiCommon0
          CFI (cfiCond51) Function ZDP_MgmtBindRsp
          CFI (cfiCond51) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond51) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond51) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond51) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond51) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond51) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond51) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond51) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond51) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond51) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond51) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond51) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond51) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond51) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond51) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond51) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond51) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond51) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond51) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond51) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond51) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond51) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond51) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond51) CFA_SP SP+-2
          CFI (cfiCond51) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker52 Using cfiCommon1
          CFI (cfiPicker52) NoFunction
          CFI (cfiPicker52) Picker
        MOV     DPL,R2
        MOV     DPH,R3
          CFI EndBlock cfiCond50
          CFI EndBlock cfiCond51
          CFI EndBlock cfiPicker52
        REQUIRE ??Subroutine101_0
        ; // Fall through to label ??Subroutine101_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine101_0:
          CFI Block cfiCond53 Using cfiCommon0
          CFI Function ZDP_ParentAnnce
          CFI Conditional ??CrossCallReturnLabel_151
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond54 Using cfiCommon0
          CFI (cfiCond54) Function ZDP_ParentAnnce
          CFI (cfiCond54) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond54) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond54) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond54) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond54) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond54) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond54) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond54) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond54) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond54) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond54) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond54) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond54) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond54) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond54) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond54) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond54) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond54) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond54) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond54) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond54) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond54) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond54) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond54) CFA_SP SP+-2
          CFI (cfiCond54) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond55 Using cfiCommon0
          CFI (cfiCond55) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond55) Conditional ??CrossCallReturnLabel_153
          CFI (cfiCond55) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond55) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond55) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond55) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond55) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond55) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond55) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond55) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond55) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond55) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond55) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond55) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond55) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond55) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond55) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond55) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond55) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond55) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond55) CFA_SP SP+-2
          CFI (cfiCond55) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond56 Using cfiCommon0
          CFI (cfiCond56) Function zdpProcessAddrReq
          CFI (cfiCond56) Conditional ??CrossCallReturnLabel_154
          CFI (cfiCond56) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond56) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond56) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond56) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond56) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond56) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond56) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond56) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond56) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond56) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond56) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond56) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond56) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond56) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond56) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond56) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond56) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond56) CFA_SP SP+-2
          CFI (cfiCond56) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond57 Using cfiCommon0
          CFI (cfiCond57) Function ZDP_MgmtBindRsp
          CFI (cfiCond57) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond57) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond57) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond57) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond57) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond57) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond57) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond57) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond57) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond57) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond57) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond57) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond57) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond57) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond57) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond57) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond57) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond57) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond57) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond57) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond57) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond57) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond57) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond57) CFA_SP SP+-2
          CFI (cfiCond57) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker58 Using cfiCommon1
          CFI (cfiPicker58) NoFunction
          CFI (cfiPicker58) Picker
        MOVX    @DPTR,A
        INC     DPTR
        MOV     R2,DPL
        MOV     R3,DPH
        RET
          CFI EndBlock cfiCond53
          CFI EndBlock cfiCond54
          CFI EndBlock cfiCond55
          CFI EndBlock cfiCond56
          CFI EndBlock cfiCond57
          CFI EndBlock cfiPicker58
//  840 
//  841 /*********************************************************************
//  842  * @fn          ZDP_NodeDescMsg
//  843  *
//  844  * @brief       Builds and sends a Node Descriptor message, unicast to the
//  845  *              specified device.
//  846  *
//  847  * @param       inMsg - incoming message
//  848  * @param       nwkAddr - 16 bit network address for device
//  849  * @param       pNodeDesc - pointer to the node descriptor
//  850  *
//  851  * @return      afStatus_t
//  852  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  853 afStatus_t ZDP_NodeDescMsg( zdoIncomingMsg_t *inMsg,
ZDP_NodeDescMsg:
          CFI Block cfiBlock59 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
        CODE
//  854                            uint16 nwkAddr, NodeDescriptorFormat_t *pNodeDesc )
//  855 {
        FUNCALL ZDP_NodeDescMsg, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  856   uint8 *pBuf = ZDP_TmpBuf;
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        LCALL   ?Subroutine21 & 0xFFFF
//  857   byte len;
//  858 
//  859   len = 1 + 2 + 13;  // Status + nwkAddr + Node descriptor
//  860 
//  861   *pBuf++ = ZDP_SUCCESS;
//  862 
//  863   *pBuf++ = LO_UINT16( nwkAddr );
//  864   *pBuf++ = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_20:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine44 & 0xFFFF
//  865 
//  866   *pBuf++ = (byte)((pNodeDesc->ComplexDescAvail << 3) |
//  867                      (pNodeDesc->UserDescAvail << 4) |
//  868                      (pNodeDesc->LogicalType & 0x07));
??CrossCallReturnLabel_61:
        ANL     A,#0x1f
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine29 & 0xFFFF
//  869 
//  870   *pBuf++ = (byte)((pNodeDesc->FrequencyBand << 3) | (pNodeDesc->APSFlags & 0x07));
??CrossCallReturnLabel_227:
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_69:
        LCALL   ?Subroutine29 & 0xFFFF
//  871   *pBuf++ = pNodeDesc->CapabilityFlags;
??CrossCallReturnLabel_228:
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_210:
        LCALL   ?Subroutine28 & 0xFFFF
//  872   *pBuf++ = pNodeDesc->ManufacturerCode[0];
??CrossCallReturnLabel_156:
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_70:
        LCALL   ?Subroutine28 & 0xFFFF
//  873   *pBuf++ = pNodeDesc->ManufacturerCode[1];
??CrossCallReturnLabel_157:
        LCALL   ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_211:
        LCALL   ?Subroutine27 & 0xFFFF
//  874   *pBuf++ = pNodeDesc->MaxBufferSize;
??CrossCallReturnLabel_33:
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_71:
        LCALL   ?Subroutine27 & 0xFFFF
//  875   *pBuf++ = pNodeDesc->MaxInTransferSize[0];
??CrossCallReturnLabel_34:
        INC     DPTR
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_67:
        LCALL   ?Subroutine24 & 0xFFFF
//  876   *pBuf++ = pNodeDesc->MaxInTransferSize[1];
??CrossCallReturnLabel_26:
        LCALL   ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_68:
        INC     DPTR
        MOVX    @DPTR,A
//  877 
//  878   *pBuf++ = LO_UINT16( pNodeDesc->ServerMask );
        MOV     A,R0
        ADD     A,#0x8
        MOV     R4,A
        CLR     A
        ADDC    A,R1
        MOV     R5,A
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    A,@DPTR
        MOV     ?V0,A
        MOV     A,R6
        ADD     A,#0xb
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,?V0
        LCALL   ??Subroutine106_0 & 0xFFFF
//  879   *pBuf++ = HI_UINT16( pNodeDesc->ServerMask );
??CrossCallReturnLabel_169:
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0xc
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine24 & 0xFFFF
//  880   *pBuf++ = pNodeDesc->MaxOutTransferSize[0];
??CrossCallReturnLabel_27:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0xd
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  881   *pBuf++ = pNodeDesc->MaxOutTransferSize[1];
        MOV     A,R0
        ADD     A,#0xb
        MOV     DPL,A
        CLR     A
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0xe
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  882   *pBuf = pNodeDesc->DescriptorCapability;
        MOV     A,R0
        ADD     A,#0xc
        MOV     DPL,A
        CLR     A
        ADDC    A,R1
        MOV     DPH,A
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,R6
        ADD     A,#0xf
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
//  883 
//  884   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Node_Desc_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x2
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     R1,#0x10
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_113:
        JNC     ??ZDP_NodeDescMsg_0
        INC     R3
??ZDP_NodeDescMsg_0:
        SJMP    ??Subroutine103_0
//  885 }
          CFI EndBlock cfiBlock59

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond60 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_67
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function ZDP_NodeDescMsg
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond61) CFA_SP SP+-2
          CFI (cfiCond61) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker62 Using cfiCommon1
          CFI (cfiPicker62) NoFunction
          CFI (cfiPicker62) Picker
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_208:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiPicker62

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond63 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_60
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function ZDP_NodeDescMsg
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond64) CFA_SP SP+-2
          CFI (cfiCond64) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond65 Using cfiCommon0
          CFI (cfiCond65) Function ZDP_PowerDescMsg
          CFI (cfiCond65) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond65) CFA_SP SP+-2
          CFI (cfiCond65) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker66 Using cfiCommon1
          CFI (cfiPicker66) NoFunction
          CFI (cfiPicker66) Picker
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_251:
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiCond65
          CFI EndBlock cfiPicker66

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond67 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_156
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function ZDP_NodeDescMsg
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond68) CFA_SP SP+-2
          CFI (cfiCond68) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker69 Using cfiCommon1
          CFI (cfiPicker69) NoFunction
          CFI (cfiPicker69) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiPicker69
        REQUIRE ??Subroutine102_0
        ; // Fall through to label ??Subroutine102_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine102_0:
          CFI Block cfiCond70 Using cfiCommon0
          CFI Function ZDO_RegisterForZDOMsg
          CFI Conditional ??CrossCallReturnLabel_158
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function ZDP_NodeDescMsg
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_156
          CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond71) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond71) CFA_SP SP+-2
          CFI (cfiCond71) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond72 Using cfiCommon0
          CFI (cfiCond72) Function ZDP_NodeDescMsg
          CFI (cfiCond72) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond72) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond72) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond72) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond72) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond72) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond72) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond72) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond72) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond72) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond72) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond72) CFA_SP SP+-2
          CFI (cfiCond72) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker73 Using cfiCommon1
          CFI (cfiPicker73) NoFunction
          CFI (cfiPicker73) Picker
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_231:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiCond72
          CFI EndBlock cfiPicker73

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond74 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond75 Using cfiCommon0
          CFI (cfiCond75) Function ZDP_NodeDescMsg
          CFI (cfiCond75) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond75) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond75) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond75) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond75) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond75) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond75) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond75) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond75) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond75) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond75) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond75) CFA_SP SP+-2
          CFI (cfiCond75) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker76 Using cfiCommon1
          CFI (cfiPicker76) NoFunction
          CFI (cfiPicker76) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_138:
        RET
          CFI EndBlock cfiCond74
          CFI EndBlock cfiCond75
          CFI EndBlock cfiPicker76

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond77 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond78 Using cfiCommon0
          CFI (cfiCond78) Function ZDP_NodeDescMsg
          CFI (cfiCond78) Conditional ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_34
          CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond78) CFA_SP SP+-4
          CFI (cfiCond78) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function ZDP_NodeDescMsg
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_26
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+-4
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function ZDP_NodeDescMsg
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_27
          CFI (cfiCond80) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond80) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond80) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond80) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond80) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond80) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond80) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond80) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond80) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond80) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond80) CFA_SP SP+-4
          CFI (cfiCond80) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker81 Using cfiCommon1
          CFI (cfiPicker81) NoFunction
          CFI (cfiPicker81) Picker
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_235:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond77
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiPicker81

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond82 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_26
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function ZDP_NodeDescMsg
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+-2
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker84 Using cfiCommon1
          CFI (cfiPicker84) NoFunction
          CFI (cfiPicker84) Picker
        LCALL   ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_139:
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiPicker84

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiBlock85 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
          CFI EndBlock cfiBlock85
        REQUIRE ??Subroutine103_0
        ; // Fall through to label ??Subroutine103_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine103_0:
          CFI Block cfiBlock86 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LJMP    ??Subroutine100_0 & 0xFFFF
          CFI EndBlock cfiBlock86
//  886 
//  887 /*********************************************************************
//  888  * @fn          ZDP_PowerDescMsg
//  889  *
//  890  * @brief       Builds and sends a Power Descriptor message, unicast to the
//  891  *              specified device.
//  892  *
//  893  * @param       inMsg - incoming message (request)
//  894  * @param       nwkAddr - 16 bit network address for device
//  895  * @param       pPowerDesc - pointer to the node descriptor
//  896  *
//  897  * @return      afStatus_t
//  898  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  899 afStatus_t ZDP_PowerDescMsg( zdoIncomingMsg_t *inMsg,
ZDP_PowerDescMsg:
          CFI Block cfiBlock87 Using cfiCommon0
          CFI Function ZDP_PowerDescMsg
        CODE
//  900                      uint16 nwkAddr, NodePowerDescriptorFormat_t *pPowerDesc )
//  901 {
        FUNCALL ZDP_PowerDescMsg, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
//  902   uint8 *pBuf = ZDP_TmpBuf;
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_90:
        MOV     R6,A
        MOV     A,R1
        LCALL   ?Subroutine21 & 0xFFFF
//  903   byte len = 1 + 2 + 2;  // Status + nwkAddr + Node Power descriptor.
//  904 
//  905   *pBuf++ = ZDP_SUCCESS;
//  906 
//  907   *pBuf++ = LO_UINT16( nwkAddr );
//  908   *pBuf++ = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_21:
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine44 & 0xFFFF
//  909 
//  910   *pBuf++ = (byte)((pPowerDesc->AvailablePowerSources << 4)
//  911                     | (pPowerDesc->PowerMode & 0x0F));
??CrossCallReturnLabel_62:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        LCALL   ?Subroutine34 & 0xFFFF
//  912   *pBuf++ = (byte)((pPowerDesc->CurrentPowerSourceLevel << 4)
//  913                     | (pPowerDesc->CurrentPowerSource & 0x0F));
??CrossCallReturnLabel_159:
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
        ANL     A,#0xf
        MOV     R1,A
        MOV     A,#0xc
        MOV     R0,#?V0
        LCALL   ?US_SHR
        MOV     A,?V0
        SWAP    A
        ORL     A,R1
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
//  914 
//  915   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Power_Desc_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x3
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     R1,#0x5
        LCALL   ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_114:
        JNC     ??ZDP_PowerDescMsg_0
        INC     R3
??ZDP_PowerDescMsg_0:
        SJMP    ??Subroutine103_0
//  916 }
          CFI EndBlock cfiBlock87

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond88 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_113
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond89 Using cfiCommon0
          CFI (cfiCond89) Function ZDP_PowerDescMsg
          CFI (cfiCond89) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond89) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond89) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond89) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond89) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond89) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond89) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond89) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond89) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond89) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond89) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond89) CFA_SP SP+-2
          CFI (cfiCond89) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker90 Using cfiCommon1
          CFI (cfiPicker90) NoFunction
          CFI (cfiPicker90) Picker
        MOV     A,R2
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,R3
        MOV     R5,A
        MOV     A,R2
        ADD     A,#0xf
        MOV     R2,A
        RET
          CFI EndBlock cfiCond88
          CFI EndBlock cfiCond89
          CFI EndBlock cfiPicker90

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond91 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_89
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function ZDP_PowerDescMsg
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond92) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond92) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond92) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond92) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond92) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond92) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond92) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond92) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond92) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond92) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond92) CFA_SP SP+-2
          CFI (cfiCond92) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond93) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond93) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond93) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond93) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond93) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond93) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond93) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond93) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond93) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond93) CFA_SP SP+-2
          CFI (cfiCond93) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker94 Using cfiCommon1
          CFI (cfiPicker94) NoFunction
          CFI (cfiPicker94) Picker
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_122:
        RET
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiPicker94

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond95 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_89
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond96 Using cfiCommon0
          CFI (cfiCond96) Function ZDP_PowerDescMsg
          CFI (cfiCond96) Conditional ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_90
          CFI (cfiCond96) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond96) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond96) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond96) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond96) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond96) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond96) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond96) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond96) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond96) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond96) CFA_SP SP+-4
          CFI (cfiCond96) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond97 Using cfiCommon0
          CFI (cfiCond97) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond97) Conditional ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_88
          CFI (cfiCond97) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond97) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond97) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond97) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond97) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond97) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond97) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond97) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond97) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond97) CFA_SP SP+-4
          CFI (cfiCond97) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond98 Using cfiCommon0
          CFI (cfiCond98) Function ZDP_ServerDiscRsp
          CFI (cfiCond98) Conditional ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_86
          CFI (cfiCond98) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond98) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond98) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond98) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond98) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond98) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond98) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond98) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond98) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond98) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond98) CFA_SP SP+-4
          CFI (cfiCond98) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond99 Using cfiCommon0
          CFI (cfiCond99) Function ZDP_EndDeviceBindReq
          CFI (cfiCond99) Conditional ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_87
          CFI (cfiCond99) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond99) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond99) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond99) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond99) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond99) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond99) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond99) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond99) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond99) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond99) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond99) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond99) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond99) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond99) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond99) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond99) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond99) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond99) CFA_SP SP+-4
          CFI (cfiCond99) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond100 Using cfiCommon0
          CFI (cfiCond100) Function ZDP_EPRsp
          CFI (cfiCond100) Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_84
          CFI (cfiCond100) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond100) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond100) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond100) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond100) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond100) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond100) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond100) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond100) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond100) CFA_SP SP+-4
          CFI (cfiCond100) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function ZDP_EndDeviceBindReq
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_85
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond101) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond101) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond101) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond101) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond101) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+-4
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond102 Using cfiCommon0
          CFI (cfiCond102) Function ZDP_ServerDiscRsp
          CFI (cfiCond102) Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_78
          CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond102) CFA_SP SP+-4
          CFI (cfiCond102) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond103 Using cfiCommon0
          CFI (cfiCond103) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond103) Conditional ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_79
          CFI (cfiCond103) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond103) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond103) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond103) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond103) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond103) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond103) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond103) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond103) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond103) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond103) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond103) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond103) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond103) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond103) CFA_SP SP+-4
          CFI (cfiCond103) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker104 Using cfiCommon1
          CFI (cfiPicker104) NoFunction
          CFI (cfiPicker104) Picker
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_257:
        MOV     R1,A
        MOV     A,R0
        RET
          CFI EndBlock cfiCond95
          CFI EndBlock cfiCond96
          CFI EndBlock cfiCond97
          CFI EndBlock cfiCond98
          CFI EndBlock cfiCond99
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiCond102
          CFI EndBlock cfiCond103
          CFI EndBlock cfiPicker104

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond105 Using cfiCommon0
          CFI Function ZDP_PowerDescMsg
          CFI Conditional ??CrossCallReturnLabel_159
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function ZDP_UserDescRsp
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_160
          CFI (cfiCond106) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond106) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond106) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond106) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond106) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond106) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond106) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond106) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond106) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond106) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond106) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond106) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond106) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond106) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond106) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond106) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond106) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond106) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond106) CFA_SP SP+-2
          CFI (cfiCond106) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker107 Using cfiCommon1
          CFI (cfiPicker107) NoFunction
          CFI (cfiPicker107) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiPicker107
        REQUIRE ??Subroutine104_0
        ; // Fall through to label ??Subroutine104_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine104_0:
          CFI Block cfiCond108 Using cfiCommon0
          CFI Function ZDP_IncomingData
          CFI Conditional ??CrossCallReturnLabel_161
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function ZDP_PowerDescMsg
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_159
          CFI (cfiCond109) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond109) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond109) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond109) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond109) CFA_SP SP+-2
          CFI (cfiCond109) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function ZDP_UserDescRsp
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_160
          CFI (cfiCond110) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond110) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond110) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond110) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond110) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond110) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond110) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond110) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond110) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond110) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond110) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond110) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond110) CFA_SP SP+-2
          CFI (cfiCond110) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker111 Using cfiCommon1
          CFI (cfiPicker111) NoFunction
          CFI (cfiPicker111) Picker
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_236:
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiPicker111

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond112 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_20
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function ZDP_PowerDescMsg
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_21
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+-2
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker114 Using cfiCommon1
          CFI (cfiPicker114) NoFunction
          CFI (cfiPicker114) Picker
        MOV     R7,A
        MOV     DPL,R6
        MOV     DPH,R7
        CLR     A
        MOVX    @DPTR,A
        MOV     A,R4
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R5
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,#0xa
        RET
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiPicker114
//  917 
//  918 /*********************************************************************
//  919  * @fn          ZDP_SimpleDescMsg
//  920  *
//  921  * @brief       Builds and sends a Simple Descriptor message, unicast to the
//  922  *              specified device.
//  923  *
//  924  * @param       inMsg - incoming message (request)
//  925  * @param       Status - message status (ZDP_SUCCESS or other)
//  926  * @param       pSimpleDesc - pointer to the node descriptor
//  927  *
//  928  * @return      afStatus_t
//  929  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  930 afStatus_t ZDP_SimpleDescMsg( zdoIncomingMsg_t *inMsg, byte Status,
ZDP_SimpleDescMsg:
          CFI Block cfiBlock115 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
        CODE
//  931                               SimpleDescriptionFormat_t *pSimpleDesc )
//  932 {
        FUNCALL ZDP_SimpleDescMsg, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 0
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     A,R1
        MOV     R6,A
//  933   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ?Subroutine42 & 0xFFFF
//  934   uint8 i, len;
//  935 
//  936   if ( Status == ZDP_SUCCESS && pSimpleDesc )
??CrossCallReturnLabel_165:
        MOV     A,R4
        ADD     A,#0x9
        MOV     R0,A
        CLR     A
        ADDC    A,R5
        MOV     R1,A
        MOV     ?V4,R0
        MOV     ?V5,R1
        MOV     A,R4
        ADD     A,#0x6
        MOV     R0,A
        CLR     A
        ADDC    A,R5
        MOV     R1,A
        MOV     ?V6,R0
        MOV     ?V7,R1
        MOV     A,R6
        JNZ     ??ZDP_SimpleDescMsg_0
        MOV     A,R4
        ORL     A,R5
        JZ      ??ZDP_SimpleDescMsg_0
//  937   {
//  938     // Status + NWKAddrOfInterest + desc length + empty simple descriptor.
//  939     len = 1 + 2 + 1 + 8;
//  940     len += (pSimpleDesc->AppNumInClusters + pSimpleDesc->AppNumOutClusters) * sizeof ( uint16 );
        MOV     DPL,?V4
        MOV     DPH,?V5
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     DPL,?V6
        MOV     DPH,R1
        MOVX    A,@DPTR
        ADD     A,R0
        CLR     C
        RLC     A
        ADD     A,#0xc
        MOV     R2,A
//  941   }
//  942   else
//  943   {
//  944     len = 1 + 2 + 1; // Status + desc length
//  945   }
//  946   if ( len >= ZDP_BUF_SZ-1 )
        CLR     C
        SUBB    A,#0x4f
        JC      ??ZDP_SimpleDescMsg_1
//  947   {
//  948     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??ZDP_SimpleDescMsg_2 & 0xFFFF
//  949   }
??ZDP_SimpleDescMsg_0:
        MOV     R2,#0x4
//  950 
//  951   *pBuf++ = Status;
??ZDP_SimpleDescMsg_1:
        MOV     A,R6
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    @DPTR,A
//  952 
//  953   *pBuf++ = LO_UINT16( ZDAppNwkAddr.addr.shortAddr );
        MOV     DPTR,#ZDAppNwkAddr
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_102:
        MOVX    @DPTR,A
//  954   *pBuf++ = HI_UINT16( ZDAppNwkAddr.addr.shortAddr );
        MOV     DPTR,#ZDAppNwkAddr + 1
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_54:
        MOVX    @DPTR,A
//  955 
//  956   if ( len > 4 )
        MOV     A,?V0
        ADD     A,#0x3
        MOV     DPL,A
        CLR     A
        ADDC    A,?V1
        MOV     DPH,A
        MOV     A,R2
        CLR     C
        SUBB    A,#0x5
        JNC     $+5
        LJMP    ??ZDP_SimpleDescMsg_3 & 0xFFFF
//  957   {
//  958     *pBuf++ = len - 4;   // Simple descriptor length
        MOV     A,#-0x4
        ADD     A,R2
        LCALL   ?Subroutine86 & 0xFFFF
//  959 
//  960     *pBuf++ = pSimpleDesc->EndPoint;
??CrossCallReturnLabel_171:
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_55:
        LCALL   ?Subroutine33 & 0xFFFF
//  961     *pBuf++ = LO_UINT16( pSimpleDesc->AppProfId );
??CrossCallReturnLabel_167:
        MOV     R0,DPL
        MOV     R1,DPH
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_148:
        LCALL   ?Subroutine11 & 0xFFFF
//  962     *pBuf++ = HI_UINT16( pSimpleDesc->AppProfId );
??CrossCallReturnLabel_2:
        MOVX    @DPTR,A
//  963     *pBuf++ = LO_UINT16( pSimpleDesc->AppDeviceId );
        MOV     A,R4
        ADD     A,#0x3
        MOV     R0,A
        CLR     A
        ADDC    A,R5
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_56:
        LCALL   ?Subroutine11 & 0xFFFF
//  964     *pBuf++ = HI_UINT16( pSimpleDesc->AppDeviceId );
??CrossCallReturnLabel_3:
        LCALL   ?Subroutine33 & 0xFFFF
//  965 
//  966     *pBuf++ = (byte)(pSimpleDesc->AppDevVer & 0x0F);
??CrossCallReturnLabel_168:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0xf
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
//  967 
//  968     *pBuf++ = pSimpleDesc->AppNumInClusters;
        MOV     DPL,?V6
        MOV     DPH,?V7
        LCALL   ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_57:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,?V0
        ADD     A,#0xb
        MOV     ?V0,A
        JNC     ??ZDP_SimpleDescMsg_4
        INC     ?V1
//  969     if ( pSimpleDesc->AppNumInClusters )
??ZDP_SimpleDescMsg_4:
        MOV     DPL,?V6
        MOV     DPH,?V7
        MOVX    A,@DPTR
        JZ      ??ZDP_SimpleDescMsg_5
//  970     {
//  971       for (i=0; i<pSimpleDesc->AppNumInClusters; ++i)
        MOV     R3,#0x0
        MOV     A,R4
        ADD     A,#0x7
        MOV     R0,A
        CLR     A
        ADDC    A,R5
        MOV     R1,A
        MOV     ?V8,R0
        MOV     ?V9,R1
        SJMP    ??ZDP_SimpleDescMsg_6
//  972       {
//  973         *pBuf++ = LO_UINT16( pSimpleDesc->pAppInClusterList[i] );
??ZDP_SimpleDescMsg_7:
        MOV     A,R3
        ADD     A,0xE0 /* A   */
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     DPL,?V8
        MOV     DPH,?V9
        LCALL   ?Subroutine43 & 0xFFFF
//  974         *pBuf++ = HI_UINT16( pSimpleDesc->pAppInClusterList[i] );
??CrossCallReturnLabel_58:
        MOV     DPL,?V8
        MOV     DPH,?V9
        LCALL   ?Subroutine16 & 0xFFFF
//  975       }
??CrossCallReturnLabel_180:
        JNC     ??ZDP_SimpleDescMsg_8
        INC     ?V1
??ZDP_SimpleDescMsg_8:
        INC     R3
??ZDP_SimpleDescMsg_6:
        MOV     DPL,?V6
        MOV     DPH,?V7
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R3
        CLR     C
        SUBB    A,R0
        JC      ??ZDP_SimpleDescMsg_7
//  976     }
//  977 
//  978     *pBuf++ = pSimpleDesc->AppNumOutClusters;
??ZDP_SimpleDescMsg_5:
        MOV     DPL,?V4
        MOV     DPH,?V5
        LCALL   ?Subroutine64 & 0xFFFF
??CrossCallReturnLabel_104:
        INC     DPTR
        MOV     ?V0,DPL
        MOV     ?V1,DPH
//  979     if ( pSimpleDesc->AppNumOutClusters )
        MOV     DPL,?V4
        MOV     DPH,?V5
        MOVX    A,@DPTR
        JZ      ??ZDP_SimpleDescMsg_9
//  980     {
//  981       for (i=0; i<pSimpleDesc->AppNumOutClusters; ++i)
        MOV     R3,#0x0
        MOV     A,R4
        ADD     A,#0xa
        MOV     R0,A
        CLR     A
        ADDC    A,R5
        MOV     R1,A
        MOV     A,R0
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
??ZDP_SimpleDescMsg_10:
        MOV     DPL,?V4
        MOV     DPH,?V5
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,R3
        CLR     C
        SUBB    A,R0
        JNC     ??ZDP_SimpleDescMsg_9
//  982       {
//  983         *pBuf++ = LO_UINT16( pSimpleDesc->pAppOutClusterList[i] );
        MOV     A,R3
        ADD     A,0xE0 /* A   */
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine43 & 0xFFFF
//  984         *pBuf++ = HI_UINT16( pSimpleDesc->pAppOutClusterList[i] );
??CrossCallReturnLabel_59:
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine16 & 0xFFFF
//  985       }
??CrossCallReturnLabel_181:
        JNC     ??ZDP_SimpleDescMsg_11
        INC     ?V1
??ZDP_SimpleDescMsg_11:
        INC     R3
        SJMP    ??ZDP_SimpleDescMsg_10
//  986     }
//  987   }
//  988 
//  989   else
//  990   {
//  991     *pBuf = 0; // Description Length = 0;
??ZDP_SimpleDescMsg_3:
        CLR     A
        MOVX    @DPTR,A
//  992   }
//  993 
//  994   return fillAndSend( &(inMsg->TransSeq), &(inMsg->srcAddr), Simple_Desc_rsp, len );
??ZDP_SimpleDescMsg_9:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x4
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R2
        MOV     R1,A
        MOV     A,?V2
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,?V3
        MOV     R5,A
        MOV     A,?V2
        ADD     A,#0xf
        MOV     R2,A
        CLR     A
        ADDC    A,?V3
        MOV     R3,A
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
??ZDP_SimpleDescMsg_2:
          CFI EndBlock cfiBlock115
        REQUIRE ?Subroutine5
        ; // Fall through to label ?Subroutine5
//  995 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock116 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xc
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock116

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond117 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function ZDP_SimpleDescMsg
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond118) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond118) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond118) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond118) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond118) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond118) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond118) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond118) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond118) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond118) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond118) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond118) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond118) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond118) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond118) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond118) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond118) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond118) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond118) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond118) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond118) CFA_SP SP+-2
          CFI (cfiCond118) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker119 Using cfiCommon1
          CFI (cfiPicker119) NoFunction
          CFI (cfiPicker119) Picker
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_127:
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_132:
        RET
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiPicker119

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond120 Using cfiCommon0
          CFI Function ZDP_NwkAddrReq
          CFI Conditional ??CrossCallReturnLabel_164
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond121 Using cfiCommon0
          CFI (cfiCond121) Function ZDP_SimpleDescMsg
          CFI (cfiCond121) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond121) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond121) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond121) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond121) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond121) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond121) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond121) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond121) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond121) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond121) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond121) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond121) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond121) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond121) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond121) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond121) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond121) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond121) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond121) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond121) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond121) CFA_SP SP+-2
          CFI (cfiCond121) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond122 Using cfiCommon0
          CFI (cfiCond122) Function ZDP_EndDeviceBindReq
          CFI (cfiCond122) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond122) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond122) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond122) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond122) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond122) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond122) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond122) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond122) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond122) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond122) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond122) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond122) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond122) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond122) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond122) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond122) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond122) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond122) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond122) CFA_SP SP+-2
          CFI (cfiCond122) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker123 Using cfiCommon1
          CFI (cfiPicker123) NoFunction
          CFI (cfiPicker123) Picker
        MOV     DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond120
          CFI EndBlock cfiCond121
          CFI EndBlock cfiCond122
          CFI EndBlock cfiPicker123
        REQUIRE ??Subroutine105_0
        ; // Fall through to label ??Subroutine105_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine105_0:
          CFI Block cfiCond124 Using cfiCommon0
          CFI Function ZDO_SendMsgCBs
          CFI Conditional ??CrossCallReturnLabel_162
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function ZDO_SendMsgCBs
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond125) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond125) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond125) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond125) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond125) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond125) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond125) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond125) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond125) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond125) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond125) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond125) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond125) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond125) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond125) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond125) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond125) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond125) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond125) CFA_SP SP+-2
          CFI (cfiCond125) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function ZDP_NwkAddrReq
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_164
          CFI (cfiCond126) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond126) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond126) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond126) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond126) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond126) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond126) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond126) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond126) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond126) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond126) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond126) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond126) CFA_SP SP+-2
          CFI (cfiCond126) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function ZDP_SimpleDescMsg
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond127) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond127) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond127) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond127) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond127) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond127) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond127) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_SP SP+-2
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function ZDP_EndDeviceBindReq
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond128) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond128) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond128) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond128) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond128) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond128) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond128) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond128) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond128) CFA_SP SP+-2
          CFI (cfiCond128) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker129 Using cfiCommon1
          CFI (cfiPicker129) NoFunction
          CFI (cfiPicker129) Picker
        MOVX    A,@DPTR
        MOV     ?V0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V1,A
        RET
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiPicker129

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond130 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_54
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond131 Using cfiCommon0
          CFI (cfiCond131) Function ZDP_SimpleDescMsg
          CFI (cfiCond131) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond131) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond131) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond131) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond131) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond131) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond131) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond131) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond131) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond131) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond131) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond131) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond131) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond131) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond131) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond131) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond131) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond131) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond131) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond131) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond131) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond131) CFA_SP SP+-2
          CFI (cfiCond131) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond132 Using cfiCommon0
          CFI (cfiCond132) Function ZDP_SimpleDescMsg
          CFI (cfiCond132) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond132) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond132) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond132) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond132) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond132) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond132) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond132) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond132) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond132) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond132) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond132) CFA_SP SP+-2
          CFI (cfiCond132) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function ZDP_SimpleDescMsg
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_57
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond133) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond133) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond133) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond133) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond133) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond133) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond133) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond133) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+-2
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker134 Using cfiCommon1
          CFI (cfiPicker134) NoFunction
          CFI (cfiPicker134) Picker
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_129:
        RET
          CFI EndBlock cfiCond130
          CFI EndBlock cfiCond131
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiPicker134

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond135 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_54
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond136 Using cfiCommon0
          CFI (cfiCond136) Function ZDP_SimpleDescMsg
          CFI (cfiCond136) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_55
          CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond136) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond136) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond136) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond136) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond136) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond136) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond136) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond136) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond136) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond136) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond136) CFA_SP SP+-4
          CFI (cfiCond136) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond137 Using cfiCommon0
          CFI (cfiCond137) Function ZDP_SimpleDescMsg
          CFI (cfiCond137) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_56
          CFI (cfiCond137) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond137) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond137) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond137) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond137) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond137) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond137) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond137) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond137) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond137) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond137) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond137) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond137) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond137) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond137) CFA_SP SP+-4
          CFI (cfiCond137) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond138 Using cfiCommon0
          CFI (cfiCond138) Function ZDP_SimpleDescMsg
          CFI (cfiCond138) Conditional ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_57
          CFI (cfiCond138) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond138) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond138) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond138) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond138) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond138) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond138) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond138) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond138) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond138) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond138) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond138) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond138) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond138) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond138) CFA_SP SP+-4
          CFI (cfiCond138) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond139 Using cfiCommon0
          CFI (cfiCond139) Function ZDP_SimpleDescMsg
          CFI (cfiCond139) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_2
          CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond139) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond139) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond139) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond139) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond139) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond139) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond139) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond139) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond139) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond139) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond139) CFA_SP SP+-4
          CFI (cfiCond139) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond140 Using cfiCommon0
          CFI (cfiCond140) Function ZDP_SimpleDescMsg
          CFI (cfiCond140) Conditional ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_3
          CFI (cfiCond140) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond140) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond140) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond140) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond140) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond140) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond140) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond140) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond140) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond140) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond140) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond140) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond140) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond140) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond140) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond140) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond140) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond140) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond140) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond140) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond140) CFA_SP SP+-4
          CFI (cfiCond140) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker141 Using cfiCommon1
          CFI (cfiPicker141) NoFunction
          CFI (cfiPicker141) Picker
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_176:
        INC     DPTR
        RET
          CFI EndBlock cfiCond135
          CFI EndBlock cfiCond136
          CFI EndBlock cfiCond137
          CFI EndBlock cfiCond138
          CFI EndBlock cfiCond139
          CFI EndBlock cfiCond140
          CFI EndBlock cfiPicker141

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond142 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_167
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond143 Using cfiCommon0
          CFI (cfiCond143) Function ZDP_SimpleDescMsg
          CFI (cfiCond143) Conditional ??CrossCallReturnLabel_168
          CFI (cfiCond143) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond143) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond143) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond143) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond143) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond143) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond143) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond143) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond143) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond143) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond143) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond143) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond143) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond143) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond143) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond143) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond143) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond143) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond143) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond143) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond143) CFA_SP SP+-2
          CFI (cfiCond143) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker144 Using cfiCommon1
          CFI (cfiPicker144) NoFunction
          CFI (cfiPicker144) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond142
          CFI EndBlock cfiCond143
          CFI EndBlock cfiPicker144
        REQUIRE ??Subroutine106_0
        ; // Fall through to label ??Subroutine106_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine106_0:
          CFI Block cfiCond145 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_169
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond146 Using cfiCommon0
          CFI (cfiCond146) Function ZDP_SimpleDescMsg
          CFI (cfiCond146) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond146) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond146) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond146) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond146) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond146) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond146) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond146) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond146) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond146) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond146) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond146) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond146) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond146) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond146) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond146) CFA_SP SP+-2
          CFI (cfiCond146) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function ZDP_SimpleDescMsg
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_168
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond147) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond147) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond147) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond147) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+-2
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker148 Using cfiCommon1
          CFI (cfiPicker148) NoFunction
          CFI (cfiPicker148) Picker
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_172:
        INC     DPTR
        RET
          CFI EndBlock cfiCond145
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiPicker148

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond149 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function ZDP_MatchDescReq
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_170, ??CrossCallReturnLabel_5
          CFI (cfiCond150) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond150) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond150) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond150) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond150) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond150) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond150) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond150) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond150) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond150) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond150) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond150) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond150) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond150) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond150) CFA_SP SP+-4
          CFI (cfiCond150) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function ZDP_SimpleDescMsg
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond151) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond151) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond151) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond151) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond151) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond151) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond151) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond151) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond151) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond151) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond151) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond151) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond151) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond151) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond151) CFA_SP SP+-2
          CFI (cfiCond151) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function ZDP_SimpleDescMsg
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_172, ??CrossCallReturnLabel_167
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond152) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond152) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond152) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond152) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond152) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond152) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond152) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_SP SP+-4
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond153 Using cfiCommon0
          CFI (cfiCond153) Function ZDP_SimpleDescMsg
          CFI (cfiCond153) Conditional ??CrossCallReturnLabel_172, ??CrossCallReturnLabel_168
          CFI (cfiCond153) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond153) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond153) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond153) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond153) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond153) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond153) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond153) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond153) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond153) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond153) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond153) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond153) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond153) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond153) CFA_SP SP+-4
          CFI (cfiCond153) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond154 Using cfiCommon0
          CFI (cfiCond154) Function ZDP_NodeDescMsg
          CFI (cfiCond154) Conditional ??CrossCallReturnLabel_172, ??CrossCallReturnLabel_169
          CFI (cfiCond154) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond154) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond154) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond154) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond154) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond154) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond154) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond154) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond154) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond154) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond154) CFA_SP SP+-4
          CFI (cfiCond154) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond155 Using cfiCommon0
          CFI (cfiCond155) Function ZDP_MgmtRtgRsp
          CFI (cfiCond155) Conditional ??CrossCallReturnLabel_173, ??CrossCallReturnLabel_8
          CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond155) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond155) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond155) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond155) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond155) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond155) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond155) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond155) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond155) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond155) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond155) CFA_SP SP+-4
          CFI (cfiCond155) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond156 Using cfiCommon0
          CFI (cfiCond156) Function ZDP_MgmtBindRsp
          CFI (cfiCond156) Conditional ??CrossCallReturnLabel_173, ??CrossCallReturnLabel_9
          CFI (cfiCond156) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond156) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond156) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond156) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond156) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond156) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond156) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond156) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond156) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond156) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond156) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond156) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond156) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond156) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond156) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond156) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond156) CFA_SP SP+-4
          CFI (cfiCond156) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker157 Using cfiCommon1
          CFI (cfiPicker157) NoFunction
          CFI (cfiPicker157) Picker
        MOVX    @DPTR,A
        MOV     DPL,R4
        MOV     DPH,R5
        RET
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiCond153
          CFI EndBlock cfiCond154
          CFI EndBlock cfiCond155
          CFI EndBlock cfiCond156
          CFI EndBlock cfiPicker157

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond158 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_180
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function ZDP_SimpleDescMsg
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond159) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond159) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond159) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond159) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond159) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond159) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond159) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond159) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond159) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond159) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond159) CFA_SP SP+-2
          CFI (cfiCond159) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker160 Using cfiCommon1
          CFI (cfiPicker160) NoFunction
          CFI (cfiPicker160) Picker
        LCALL   ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_126:
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiPicker160
        REQUIRE ??Subroutine107_0
        ; // Fall through to label ??Subroutine107_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine107_0:
          CFI Block cfiCond161 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_179
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond162 Using cfiCommon0
          CFI (cfiCond162) Function ZDP_SimpleDescMsg
          CFI (cfiCond162) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond162) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond162) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond162) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond162) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond162) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond162) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond162) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond162) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond162) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond162) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond162) CFA_SP SP+-2
          CFI (cfiCond162) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond163 Using cfiCommon0
          CFI (cfiCond163) Function ZDP_SimpleDescMsg
          CFI (cfiCond163) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond163) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond163) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond163) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond163) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond163) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond163) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond163) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond163) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond163) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond163) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond163) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond163) CFA_SP SP+-2
          CFI (cfiCond163) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker164 Using cfiCommon1
          CFI (cfiPicker164) NoFunction
          CFI (cfiPicker164) Picker
        INC     DPTR
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_175:
          CFI EndBlock cfiCond161
          CFI EndBlock cfiCond162
          CFI EndBlock cfiCond163
          CFI EndBlock cfiPicker164
        REQUIRE ??Subroutine108_0
        ; // Fall through to label ??Subroutine108_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine108_0:
          CFI Block cfiCond165 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_178
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond166 Using cfiCommon0
          CFI (cfiCond166) Function ZDP_EndDeviceBindReq
          CFI (cfiCond166) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond166) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond166) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond166) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond166) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond166) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond166) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond166) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond166) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond166) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond166) CFA_SP SP+-2
          CFI (cfiCond166) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function ZDP_SimpleDescMsg
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond167) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond167) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond167) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond167) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond167) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond167) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond167) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond167) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond167) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond167) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond167) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond167) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond167) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond167) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond167) CFA_SP SP+-2
          CFI (cfiCond167) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function ZDP_SimpleDescMsg
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond168) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond168) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond168) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond168) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond168) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond168) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond168) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond168) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond168) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond168) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond168) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond168) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond168) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond168) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond168) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond168) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond168) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond168) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond168) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond168) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond168) CFA_SP SP+-2
          CFI (cfiCond168) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker169 Using cfiCommon1
          CFI (cfiPicker169) NoFunction
          CFI (cfiPicker169) Picker
        MOVX    @DPTR,A
        MOV     A,?V0
        ADD     A,#0x2
        MOV     ?V0,A
        RET
          CFI EndBlock cfiCond165
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiPicker169

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond170 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function ZDP_SimpleDescMsg
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_127, ??CrossCallReturnLabel_59
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond171) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond171) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond171) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond171) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond171) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond171) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond171) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+-4
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function ZDP_SimpleDescMsg
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_126, ??CrossCallReturnLabel_180
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond172) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond172) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond172) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond172) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond172) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+-4
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function ZDP_SimpleDescMsg
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_126, ??CrossCallReturnLabel_181
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond173) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond173) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond173) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond173) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond173) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+-4
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker174 Using cfiCommon1
          CFI (cfiPicker174) NoFunction
          CFI (cfiPicker174) Picker
        MOVX    A,@DPTR
        ADD     A,R0
        MOV     R7,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,R1
        MOV     DPL,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiPicker174

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond175 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function ZDP_SimpleDescMsg
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond176) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond176) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond176) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond176) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond176) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond176) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond176) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+-2
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker177 Using cfiCommon1
          CFI (cfiPicker177) NoFunction
          CFI (cfiPicker177) Picker
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_232:
        LCALL   ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_128:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiPicker177
//  996 
//  997 /*********************************************************************
//  998  * @fn          ZDP_EPRsp
//  999  *
// 1000  * @brief       This builds and send an endpoint list. Used in
// 1001  *              Active_EP_rsp and Match_Desc_Rsp
// 1002  *              message.  This function sends unicast message to the
// 1003  *              requesting device.
// 1004  *
// 1005  * @param       MsgType - either Active_EP_rsp or Match_Desc_Rsp
// 1006  * @param       dstAddr - destination address
// 1007  * @param       Status - message status (ZDP_SUCCESS or other)
// 1008  * @param       nwkAddr - Device's short address that this response describes
// 1009  * @param       Count - number of endpoint/interfaces in list
// 1010  * @param       pEPIntfList - Array of Endpoint/Interfaces
// 1011  * @param       SecurityEnable - Security Options
// 1012  *
// 1013  * @return      afStatus_t
// 1014  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1015 afStatus_t ZDP_EPRsp( uint16 MsgType, byte TransSeq, zAddrType_t *dstAddr,
ZDP_EPRsp:
          CFI Block cfiBlock178 Using cfiCommon0
          CFI Function ZDP_EPRsp
        CODE
// 1016                         byte Status, uint16 nwkAddr, byte Count,
// 1017                         uint8 *pEPList,
// 1018                         byte SecurityEnable )
// 1019 {
        FUNCALL ZDP_EPRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EPRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV     A,#-0xf
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     A,R4
        MOV     R6,A
        MOV     A,R5
        MOV     R7,A
// 1020   uint8 *pBuf = ZDP_TmpBuf;
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ?Subroutine55 & 0xFFFF
// 1021   byte len = 1 + 2 + 1;  // Status + nwkAddr + endpoint/interface count.
??CrossCallReturnLabel_84:
        MOV     ?V0,#0x4
// 1022   byte txOptions;
// 1023 
// 1024   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1025 
// 1026   if ( MsgType == Match_Desc_rsp )
        MOV     A,#0x6
        XRL     A,?V2
        JNZ     ??ZDP_EPRsp_0
        MOV     A,#-0x80
        XRL     A,?V3
??ZDP_EPRsp_0:
        JNZ     ??ZDP_EPRsp_1
// 1027     txOptions = AF_MSG_ACK_REQUEST;
        MOV     ?V1,#0x10
        SJMP    ??ZDP_EPRsp_2
// 1028   else
// 1029     txOptions = 0;
??ZDP_EPRsp_1:
        MOV     ?V1,#0x0
// 1030 
// 1031     *pBuf++ = Status;
??ZDP_EPRsp_2:
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_97:
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine17 & 0xFFFF
// 1032   *pBuf++ = LO_UINT16( nwkAddr );
// 1033   *pBuf++ = HI_UINT16( nwkAddr );
??CrossCallReturnLabel_10:
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R4,A
// 1034 
// 1035   *pBuf++ = Count;   // Endpoint/Interface count
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 1036 
// 1037   if ( Count )
        JZ      ??ZDP_EPRsp_3
// 1038   {
// 1039     len += Count;
        MOV     A,#0x4
        ADD     A,R4
        MOV     ?V0,A
// 1040     osal_memcpy( pBuf, pEPList, Count );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine50 & 0xFFFF
// 1041   }
??CrossCallReturnLabel_74:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     R5,#0x0
        MOV     A,R2
        ADD     A,#0x4
        MOV     R2,A
        JNC     ??ZDP_EPRsp_4
        INC     R3
??ZDP_EPRsp_4:
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 1042 
// 1043   FillAndSendTxOptions( &TransSeq, dstAddr, MsgType, len, txOptions );
??ZDP_EPRsp_3:
        MOV     A,?V1
        MOV     DPTR,#ZDP_TxOptions
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     R1,?V0
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R1
        MOV     R1,A
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
        INC     A
        LJMP    ?Subroutine3 & 0xFFFF
// 1044 }
          CFI EndBlock cfiBlock178
// 1045 
// 1046 /*********************************************************************
// 1047  * @fn          ZDP_UserDescRsp
// 1048  *
// 1049  * @brief       Build and send the User Decriptor Response.
// 1050  *
// 1051  *
// 1052  * @param       dstAddr - destination address
// 1053  * @param       nwkAddrOfInterest -
// 1054  * @param       userDesc -
// 1055  * @param       SecurityEnable - Security Options
// 1056  *
// 1057  * @return      ZStatus_t
// 1058  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1059 ZStatus_t ZDP_UserDescRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_UserDescRsp:
          CFI Block cfiBlock179 Using cfiCommon0
          CFI Function ZDP_UserDescRsp
        CODE
// 1060                 uint16 nwkAddrOfInterest, UserDescriptorFormat_t *userDesc,
// 1061                 byte SecurityEnable )
// 1062 {
        FUNCALL ZDP_UserDescRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_UserDescRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        LCALL   ?Subroutine54 & 0xFFFF
// 1063   uint8 *pBuf = ZDP_TmpBuf;
??CrossCallReturnLabel_83:
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_242:
        MOV     ?V8,R0
        MOV     ?V9,R1
// 1064   byte len = 1 + 2 + 1;  // Status + nwkAddr + descriptor length.
// 1065 
// 1066   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1067 
// 1068   len += userDesc->len;
        MOV     DPL,R0
        MOV     DPH,A
        MOVX    A,@DPTR
        ADD     A,#0x4
        MOV     ?V2,A
// 1069 
// 1070   *pBuf++ = ZSUCCESS;
        MOV     DPL,?V0
        MOV     DPH,?V1
        CLR     A
        MOVX    @DPTR,A
// 1071 
// 1072   *pBuf++ = LO_UINT16( nwkAddrOfInterest );
        MOV     A,R4
        INC     DPTR
        MOVX    @DPTR,A
// 1073   *pBuf++ = HI_UINT16( nwkAddrOfInterest );
        MOV     A,R5
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?Subroutine34 & 0xFFFF
// 1074 
// 1075   *pBuf++ = userDesc->len;
??CrossCallReturnLabel_160:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine10 & 0xFFFF
// 1076   osal_memcpy( pBuf, userDesc->desc, userDesc->len );
??CrossCallReturnLabel_1:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     DPL,?V8
        MOV     DPH,?V9
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        MOV     A,?V0
        ADD     A,#0x4
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
// 1077 
// 1078   return (ZStatus_t)fillAndSend( &TransSeq, dstAddr, User_Desc_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x11
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,?V2
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        LJMP    ?Subroutine6 & 0xFFFF
// 1079 }
          CFI EndBlock cfiBlock179

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond180 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_82
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function ZDP_UserDescRsp
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_83
          CFI (cfiCond181) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond181) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond181) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond181) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond181) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond181) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond181) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond181) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond181) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond181) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond181) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond181) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond181) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond181) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond181) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond181) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond181) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond181) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond181) CFA_SP SP+-2
          CFI (cfiCond181) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker182 Using cfiCommon1
          CFI (cfiPicker182) NoFunction
          CFI (cfiPicker182) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_253:
        MOV     ?V0,R0
        MOV     ?V1,R1
        RET
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiPicker182

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond183 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function ZDP_UserDescRsp
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond184) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond184) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond184) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond184) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond184) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond184) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond184) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond184) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond184) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond184) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond184) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond184) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond184) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond184) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond184) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond184) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond184) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond184) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond184) CFA_SP SP+-2
          CFI (cfiCond184) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker185 Using cfiCommon1
          CFI (cfiPicker185) NoFunction
          CFI (cfiPicker185) Picker
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_233:
        MOV     R1,DPL
        MOV     R2,DPH
        MOV     ?V4,R1
        MOV     ?V5,R2
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        RET
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiPicker185
// 1080 
// 1081 /*********************************************************************
// 1082  * @fn          ZDP_ServerDiscRsp
// 1083  *
// 1084  * @brief       Build and send the Server_Discovery_rsp response.
// 1085  *
// 1086  * @param       transID - Transaction sequence number of request.
// 1087  * @param       dstAddr - Network Destination Address.
// 1088  * @param       status - Status of response to request.
// 1089  * @param       aoi - Network Address of Interest of request.
// 1090  * @param       serverMask - Bit map of service(s) being sought.
// 1091  * @param       SecurityEnable - Security Options
// 1092  *
// 1093  * @return      ZStatus_t
// 1094  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1095 ZStatus_t ZDP_ServerDiscRsp( byte transID, zAddrType_t *dstAddr, byte status,
ZDP_ServerDiscRsp:
          CFI Block cfiBlock186 Using cfiCommon0
          CFI Function ZDP_ServerDiscRsp
        CODE
// 1096                            uint16 aoi, uint16 serverMask, byte SecurityEnable )
// 1097 {
        FUNCALL ZDP_ServerDiscRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     A,R4
        MOV     R6,A
// 1098   const byte len = 1  + 2;  // status + aoi + mask.
// 1099   uint8 *pBuf = ZDP_TmpBuf;
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ?Subroutine56 & 0xFFFF
// 1100   ZStatus_t stat;
// 1101 
// 1102   // Intentionally unreferenced parameters
// 1103   (void)aoi;
// 1104   (void)SecurityEnable;
// 1105 
// 1106   *pBuf++ = status;
??CrossCallReturnLabel_86:
        MOV     A,R6
        MOV     DPL,R4
        MOV     DPH,R5
        MOVX    @DPTR,A
        MOV     A,#0xd
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine52 & 0xFFFF
// 1107 
// 1108   *pBuf++ = LO_UINT16( serverMask );
??CrossCallReturnLabel_78:
        INC     DPTR
        MOVX    @DPTR,A
// 1109   *pBuf++ = HI_UINT16( serverMask );
        MOV     A,R1
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
// 1110 
// 1111   ZDP_TxOptions = AF_MSG_ACK_REQUEST;
        MOV     DPTR,#ZDP_TxOptions
        MOV     A,#0x10
        MOVX    @DPTR,A
// 1112   stat = fillAndSend( &transID, dstAddr, Server_Discovery_rsp, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x15
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 13)
        MOV     R1,#0x3
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV     A,R1
        MOV     R1,A
// 1113   ZDP_TxOptions = AF_TX_OPTIONS_NONE;
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
// 1114 
// 1115   return ( stat );
        INC     A
        LJMP    ??Subroutine100_0 & 0xFFFF
// 1116 }
          CFI EndBlock cfiBlock186
// 1117 
// 1118 /*********************************************************************
// 1119  * @fn          ZDP_GenericRsp
// 1120  *
// 1121  * @brief       Sends a response message with only the parameter status
// 1122  *              byte and the addr of interest for data.
// 1123  *              This function sends unicast message to the
// 1124  *              requesting device.
// 1125  *
// 1126  * @param       dstAddr - destination address
// 1127  * @param       status  - generic status for response
// 1128  * @param       aoi     - address of interest
// 1129  * @param       dstAddr - destination address
// 1130  * @param       rspId   - response cluster ID
// 1131  * @param       SecurityEnable - Security Options
// 1132  *
// 1133  * @return      afStatus_t
// 1134  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1135 afStatus_t ZDP_GenericRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_GenericRsp:
          CFI Block cfiBlock187 Using cfiCommon0
          CFI Function ZDP_GenericRsp
        CODE
// 1136                      byte status, uint16 aoi, uint16 rspID, byte SecurityEnable )
// 1137 {
        FUNCALL ZDP_GenericRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
// 1138   uint8 len;
// 1139 
// 1140   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1141 
// 1142   ZDP_TmpBuf[0] = status;
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_184:
        MOV     A,R4
        MOVX    @DPTR,A
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine122_0 & 0xFFFF
// 1143   ZDP_TmpBuf[1] = LO_UINT16( aoi );
??CrossCallReturnLabel_243:
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R4
        INC     DPTR
        MOV     A,R0
        LCALL   ?Subroutine13 & 0xFFFF
// 1144   ZDP_TmpBuf[2] = HI_UINT16( aoi );
// 1145 
// 1146   // Length byte
// 1147   ZDP_TmpBuf[3] = 0;
??CrossCallReturnLabel_7:
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_185:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVX    @DPTR,A
// 1148   len = 4;
// 1149 
// 1150   return fillAndSend( &TransSeq, dstAddr, rspID, len );
        ; Setup parameters for call to function fillAndSend
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     R1,#0x4
        MOV     A,R2
        MOV     R4,A
        MOV     A,R3
        MOV     R5,A
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock187
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 1151 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock188 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock188

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond189 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_183
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond190 Using cfiCommon0
          CFI (cfiCond190) Function ZDP_GenericRsp
          CFI (cfiCond190) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond190) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond190) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond190) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond190) CFA_SP SP+-2
          CFI (cfiCond190) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function ZDP_GenericRsp
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_SP SP+-2
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_186
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+-2
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond193 Using cfiCommon0
          CFI (cfiCond193) Function ZDP_MgmtLqiRsp
          CFI (cfiCond193) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond193) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond193) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond193) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond193) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond193) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond193) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond193) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond193) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond193) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond193) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond193) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond193) CFA_SP SP+-2
          CFI (cfiCond193) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker194 Using cfiCommon1
          CFI (cfiPicker194) NoFunction
          CFI (cfiPicker194) Picker
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
          CFI EndBlock cfiCond189
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiCond193
          CFI EndBlock cfiPicker194
        REQUIRE ??Subroutine109_0
        ; // Fall through to label ??Subroutine109_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine109_0:
          CFI Block cfiCond195 Using cfiCommon0
          CFI Function ZDP_IncomingData
          CFI Conditional ??CrossCallReturnLabel_182
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function ZDP_DeviceAnnce
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_183
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+-2
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function ZDP_GenericRsp
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_184
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+-2
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function ZDP_GenericRsp
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond198) CFA_SP SP+-2
          CFI (cfiCond198) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_186
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+-2
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function ZDP_MgmtLqiRsp
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond200) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond200) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond200) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond200) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond200) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond200) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond200) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond200) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond200) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+-2
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker201 Using cfiCommon1
          CFI (cfiPicker201) NoFunction
          CFI (cfiPicker201) Picker
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiPicker201

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond202 Using cfiCommon0
          CFI Function ZDP_SimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function ZDP_GenericRsp
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond203) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond203) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond203) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond203) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond203) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond203) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond203) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond203) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond203) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond203) CFA_SP SP+-2
          CFI (cfiCond203) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker204 Using cfiCommon1
          CFI (cfiPicker204) NoFunction
          CFI (cfiPicker204) Picker
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_118:
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiPicker204
// 1152 
// 1153 /*********************************************************************
// 1154  * Binding
// 1155  */
// 1156 /*********************************************************************
// 1157  * @fn          ZDP_EndDeviceBindReq
// 1158  *
// 1159  * @brief       This builds and sends a End_Device_Bind_req message.
// 1160  *              This function sends a unicast message.
// 1161  *
// 1162  * @param       dstAddr - destination address
// 1163  * @param       LocalCoordinator - short address of local coordinator
// 1164  * @param       epIntf - Endpoint/Interface of Simple Desc
// 1165  * @param       ProfileID - Profile ID
// 1166  *
// 1167  *   The Input cluster list is the opposite of what you would think.
// 1168  *   This is the output cluster list of this device
// 1169  * @param       NumInClusters - number of input clusters
// 1170  * @param       InClusterList - input cluster ID list
// 1171  *
// 1172  *   The Output cluster list is the opposite of what you would think.
// 1173  *   This is the input cluster list of this device
// 1174  * @param       NumOutClusters - number of output clusters
// 1175  * @param       OutClusterList - output cluster ID list
// 1176  *
// 1177  * @param       SecurityEnable - Security Options
// 1178  *
// 1179  * @return      afStatus_t
// 1180  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1181 afStatus_t ZDP_EndDeviceBindReq( zAddrType_t *dstAddr,
ZDP_EndDeviceBindReq:
          CFI Block cfiBlock205 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
        CODE
// 1182                                  uint16 LocalCoordinator,
// 1183                                  byte endPoint,
// 1184                                  uint16 ProfileID,
// 1185                                  byte NumInClusters, cId_t *InClusterList,
// 1186                                  byte NumOutClusters, cId_t *OutClusterList,
// 1187                                  byte SecurityEnable )
// 1188 {
        FUNCALL ZDP_EndDeviceBindReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_EndDeviceBindReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V6,R2
        MOV     ?V7,R3
        MOV     ?V4,R4
        MOV     ?V5,R5
        MOV     ?V3,R1
// 1189   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_166:
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V2,A
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     R7,A
// 1190   uint8 i, len;
// 1191   uint8 *ieeeAddr;
// 1192 
// 1193   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1194 
// 1195   // LocalCoordinator + SrcExtAddr + ep + ProfileID +  NumInClusters + NumOutClusters.
// 1196   len = 2 + Z_EXTADDR_LEN + 1 + 2 + 1 + 1;
// 1197   len += (NumInClusters + NumOutClusters) * sizeof ( uint16 );
        MOV     A,?V2
        ADD     A,R7
        CLR     C
        RLC     A
        ADD     A,#0xf
        MOV     R6,A
// 1198 
// 1199   if ( len >= ZDP_BUF_SZ-1 )
        CLR     C
        SUBB    A,#0x4f
        JC      ??ZDP_EndDeviceBindReq_0
// 1200   {
// 1201     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??ZDP_EndDeviceBindReq_1 & 0xFFFF
// 1202   }
// 1203 
// 1204   if ( LocalCoordinator != NLME_GetShortAddr() )
??ZDP_EndDeviceBindReq_0:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV     A,R2
        XRL     A,?V4
        JNZ     ??ZDP_EndDeviceBindReq_2
        MOV     A,R3
        XRL     A,?V5
??ZDP_EndDeviceBindReq_2:
        JZ      ??ZDP_EndDeviceBindReq_3
// 1205   {
// 1206     return afStatus_INVALID_PARAMETER;
        MOV     R1,#0x2
        LJMP    ??ZDP_EndDeviceBindReq_1 & 0xFFFF
// 1207   }
// 1208 
// 1209   *pBuf++ = LO_UINT16( LocalCoordinator );
??ZDP_EndDeviceBindReq_3:
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOV     A,?V4
        MOVX    @DPTR,A
// 1210   *pBuf++ = HI_UINT16( LocalCoordinator );
        MOV     A,?V5
        INC     DPTR
        MOVX    @DPTR,A
// 1211 
// 1212   ieeeAddr = NLME_GetExtAddr();
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL   `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R4,?V4
        MOV     R5,?V5
// 1213   pBuf = osal_cpyExtAddr( pBuf, ieeeAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,?V0
        ADD     A,#0x2
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1214 
// 1215   *pBuf++ = endPoint;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V3
        MOVX    @DPTR,A
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine17 & 0xFFFF
// 1216 
// 1217   *pBuf++ = LO_UINT16( ProfileID );   // Profile ID
// 1218   *pBuf++ = HI_UINT16( ProfileID );
// 1219 
// 1220   *pBuf++ = NumInClusters; // Input cluster list
??CrossCallReturnLabel_11:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOV     A,?V2
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x4
        MOV     ?V0,A
        CLR     A
        ADDC    A,R3
        MOV     ?V1,A
// 1221   for ( i = 0; i < NumInClusters; ++i )
        MOV     ?V4,#0x0
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_87:
        SJMP    ??ZDP_EndDeviceBindReq_4
// 1222   {
// 1223     *pBuf++ = LO_UINT16(InClusterList[i]);
??ZDP_EndDeviceBindReq_5:
        MOV     R2,?V4
        MOV     A,R2
        ADD     A,R2
        MOV     R2,A
        CLR     A
        RLC     A
        MOV     R3,A
        MOV     A,R4
        ADD     A,R2
        MOV     R2,A
        MOV     A,R5
        ADDC    A,R3
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine93 & 0xFFFF
// 1224     *pBuf++ = HI_UINT16(InClusterList[i]);
// 1225   }
??CrossCallReturnLabel_149:
        LCALL   ?Subroutine26 & 0xFFFF
??CrossCallReturnLabel_31:
        LCALL   ??Subroutine108_0 & 0xFFFF
??CrossCallReturnLabel_178:
        JNC     ??ZDP_EndDeviceBindReq_6
        INC     ?V1
??ZDP_EndDeviceBindReq_6:
        INC     ?V4
??ZDP_EndDeviceBindReq_4:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,?V4
        CLR     C
        SUBB    A,?V2
        JC      ??ZDP_EndDeviceBindReq_5
// 1226 
// 1227   *pBuf++ = NumOutClusters; // Output cluster list
        MOV     A,R7
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    @DPTR,A
        MOV     ?V0,R0
        MOV     ?V1,R1
// 1228   for ( i = 0; i < NumOutClusters; ++i )
        MOV     ?V4,#0x0
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_85:
        SJMP    ??ZDP_EndDeviceBindReq_7
// 1229   {
// 1230     *pBuf++ = LO_UINT16(OutClusterList[i]);
??ZDP_EndDeviceBindReq_8:
        MOV     R0,?V4
        MOV     A,R0
        ADD     A,R0
        MOV     R0,A
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     A,R2
        ADD     A,R0
        MOV     R0,A
        MOV     A,R3
        ADDC    A,R1
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine64 & 0xFFFF
// 1231     *pBuf++ = HI_UINT16(OutClusterList[i]);
??CrossCallReturnLabel_105:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine107_0 & 0xFFFF
// 1232   }
??CrossCallReturnLabel_179:
        JNC     ??ZDP_EndDeviceBindReq_9
        INC     ?V1
??ZDP_EndDeviceBindReq_9:
        INC     ?V4
??ZDP_EndDeviceBindReq_7:
        MOV     A,?V4
        CLR     C
        SUBB    A,R7
        JC      ??ZDP_EndDeviceBindReq_8
// 1233 
// 1234   return fillAndSend( &ZDP_TransID, dstAddr, End_Device_Bind_req, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x20
        MOV     ?V1,#0x0
        MOV     R0,#?V0
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     A,R6
        MOV     R1,A
        MOV     R4,?V6
        MOV     R5,?V7
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
??ZDP_EndDeviceBindReq_1:
        SJMP    ??Subroutine110_0
// 1235 }
          CFI EndBlock cfiBlock205

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond206 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_148
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function ZDP_EndDeviceBindReq
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_149
          CFI (cfiCond207) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond207) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond207) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond207) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond207) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond207) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond207) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond207) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond207) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond207) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond207) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond207) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond207) CFA_SP SP+-2
          CFI (cfiCond207) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond208 Using cfiCommon0
          CFI (cfiCond208) Function ZDP_SimpleDescMsg
          CFI (cfiCond208) Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_58
          CFI (cfiCond208) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond208) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond208) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond208) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond208) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond208) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond208) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond208) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond208) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond208) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond208) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond208) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond208) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond208) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond208) CFA_SP SP+-6
          CFI (cfiCond208) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond209 Using cfiCommon0
          CFI (cfiCond209) Function ZDP_SimpleDescMsg
          CFI (cfiCond209) Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_59
          CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond209) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond209) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond209) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond209) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond209) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond209) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond209) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond209) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond209) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond209) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond209) CFA_SP SP+-6
          CFI (cfiCond209) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function ZDP_SimpleDescMsg
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_104
          CFI (cfiCond210) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond210) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond210) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond210) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond210) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond210) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond210) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond210) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond210) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond210) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond210) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond210) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond210) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond210) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond210) CFA_SP SP+-6
          CFI (cfiCond210) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function ZDP_EndDeviceBindReq
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_150, ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_105
          CFI (cfiCond211) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond211) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond211) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond211) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond211) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond211) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond211) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond211) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond211) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond211) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond211) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond211) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond211) CFA_SP SP+-6
          CFI (cfiCond211) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker212 Using cfiCommon1
          CFI (cfiPicker212) NoFunction
          CFI (cfiPicker212) Picker
        MOVX    A,@DPTR
        MOV     DPL,?V0
        MOV     DPH,?V1
        RET
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiCond208
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiPicker212

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond213 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_104
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function ZDP_EndDeviceBindReq
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_105
          CFI (cfiCond214) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond214) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond214) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond214) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond214) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond214) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond214) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond214) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond214) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond214) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond214) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond214) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond214) CFA_SP SP+-2
          CFI (cfiCond214) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker215 Using cfiCommon1
          CFI (cfiPicker215) NoFunction
          CFI (cfiPicker215) Picker
        LCALL   ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_133:
        RET
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiPicker215

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond216 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function ZDP_SimpleDescMsg
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_132, ??CrossCallReturnLabel_59
          CFI (cfiCond217) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond217) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond217) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond217) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond217) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond217) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond217) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond217) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond217) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond217) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond217) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond217) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond217) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond217) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond217) CFA_SP SP+-4
          CFI (cfiCond217) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function ZDP_SimpleDescMsg
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_104
          CFI (cfiCond218) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond218) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond218) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond218) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond218) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond218) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond218) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond218) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond218) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond218) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond218) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond218) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond218) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond218) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond218) CFA_SP SP+-4
          CFI (cfiCond218) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function ZDP_EndDeviceBindReq
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_133, ??CrossCallReturnLabel_105
          CFI (cfiCond219) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond219) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond219) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond219) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond219) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond219) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond219) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond219) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond219) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond219) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond219) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond219) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond219) CFA_SP SP+-4
          CFI (cfiCond219) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker220 Using cfiCommon1
          CFI (cfiPicker220) NoFunction
          CFI (cfiPicker220) Picker
        LCALL   ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_150:
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiPicker220

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond221 Using cfiCommon0
          CFI Function ZDP_ServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_86
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function ZDP_EndDeviceBindReq
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond222) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond222) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond222) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond222) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond222) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond222) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond222) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond222) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond222) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond222) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond222) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond222) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond222) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond222) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond222) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond222) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond222) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond222) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond222) CFA_SP SP+-2
          CFI (cfiCond222) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker223 Using cfiCommon1
          CFI (cfiPicker223) NoFunction
          CFI (cfiPicker223) Picker
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_125:
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
        RET
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiPicker223

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond224 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_84
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function ZDP_EndDeviceBindReq
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond225) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond225) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond225) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond225) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond225) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond225) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond225) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond225) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond225) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond225) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond225) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond225) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond225) CFA_SP SP+-2
          CFI (cfiCond225) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker226 Using cfiCommon1
          CFI (cfiPicker226) NoFunction
          CFI (cfiPicker226) Picker
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_124:
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        RET
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiPicker226

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond227 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_10
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function ZDP_EndDeviceBindReq
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond228) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond228) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond228) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond228) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond228) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+-2
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function ZDP_BindUnbindReq
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_12
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond229) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond229) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond229) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond229) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond229) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+-2
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiPicker230 Using cfiCommon1
          CFI (cfiPicker230) NoFunction
          CFI (cfiPicker230) Picker
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_120:
        INC     DPTR
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_142:
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiPicker230

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock231 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 19)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock231
        REQUIRE ??Subroutine110_0
        ; // Fall through to label ??Subroutine110_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine110_0:
          CFI Block cfiBlock232 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     R7,#0xa
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock232
// 1236 
// 1237 /*********************************************************************
// 1238  * @fn          ZDP_BindUnbindReq
// 1239  *
// 1240  * @brief       This builds and send a Bind_req or Unbind_req message
// 1241  *              Depending on the ClusterID. This function
// 1242  *              sends a unicast message to the local coordinator.
// 1243  *
// 1244  * @param       BindOrUnbind - either Bind_req or Unbind_req
// 1245  * @param       dstAddr - destination address of the message
// 1246  * @param       SourceAddr - source 64 bit address of the binding
// 1247  * @param       SrcEPIntf - Source endpoint/interface
// 1248  * @param       ClusterID - Binding cluster ID
// 1249  * @param       DestinationAddr - destination 64 bit addr of binding
// 1250  * @param       DstEPIntf - destination endpoint/interface
// 1251  * @param       SecurityEnable - Security Options
// 1252  *
// 1253  * @return      afStatus_t
// 1254  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1255 afStatus_t ZDP_BindUnbindReq( uint16 BindOrUnbind, zAddrType_t *dstAddr,
ZDP_BindUnbindReq:
          CFI Block cfiBlock233 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
        CODE
// 1256                               uint8 *SourceAddr, byte SrcEndPoint,
// 1257                               cId_t ClusterID,
// 1258                               zAddrType_t *destinationAddr, byte DstEndPoint,
// 1259                               byte SecurityEnable )
// 1260 {
        FUNCALL ZDP_BindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_BindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 1, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_BindUnbindReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V6,R2
        MOV     ?V7,R3
        MOV     ?V4,R4
        MOV     ?V5,R5
        MOV     ?V3,R1
// 1261   uint8 *pBuf = ZDP_TmpBuf;
        LCALL   ??Subroutine112_0 & 0xFFFF
// 1262   byte len;
// 1263 
// 1264   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1265 
// 1266   // SourceAddr + SrcEPIntf + ClusterID +  addrMode.
// 1267   len = Z_EXTADDR_LEN + 1 + sizeof( cId_t ) + sizeof( uint8 );
??CrossCallReturnLabel_205:
        MOV     ?V2,#0xc
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine117_0 & 0xFFFF
// 1268   if ( destinationAddr->addrMode == Addr64Bit )
??CrossCallReturnLabel_217:
        MOV     A,R6
        ADD     A,#0x8
        MOV     ?V0,A
        CLR     A
        ADDC    A,R7
        MOV     ?V1,A
        MOV     DPL,?V0
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDP_BindUnbindReq_0
// 1269     len += Z_EXTADDR_LEN + 1;     // +1 for DstEPIntf
        MOV     ?V2,#0x15
        SJMP    ??ZDP_BindUnbindReq_1
// 1270   else if ( destinationAddr->addrMode == AddrGroup )
??ZDP_BindUnbindReq_0:
        MOV     A,#0x1
        XRL     A,R0
        JNZ     ??ZDP_BindUnbindReq_1
// 1271     len += sizeof ( uint16 );
        MOV     ?V2,#0xe
// 1272 
// 1273   pBuf = osal_cpyExtAddr( pBuf, SourceAddr );
??ZDP_BindUnbindReq_1:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_95:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1274   *pBuf++ = SrcEndPoint;
        MOV     DPL,R2
        MOV     DPH,R3
        MOV     A,?V3
        MOVX    @DPTR,A
        MOV     A,#0x14
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine17 & 0xFFFF
// 1275 
// 1276   *pBuf++ = LO_UINT16( ClusterID );
// 1277 
// 1278   *pBuf++ = HI_UINT16( ClusterID );
// 1279   *pBuf++ = destinationAddr->addrMode;
??CrossCallReturnLabel_12:
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_225:
        JNC     ??ZDP_BindUnbindReq_2
        INC     R3
// 1280   if ( destinationAddr->addrMode == Addr64Bit )
??ZDP_BindUnbindReq_2:
        MOV     DPL,?V0
        MOV     DPH,?V1
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x3
        XRL     A,R0
        JNZ     ??ZDP_BindUnbindReq_3
// 1281   {
// 1282     pBuf = osal_cpyExtAddr( pBuf, destinationAddr->addr.extAddr );
// 1283     *pBuf = DstEndPoint;
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,R2
        MOV     DPH,R3
        POP     A
          CFI CFA_SP SP+0
        SJMP    ??ZDP_BindUnbindReq_4
// 1284   }
// 1285   else if ( destinationAddr->addrMode == AddrGroup )
??ZDP_BindUnbindReq_3:
        MOV     A,#0x1
        XRL     A,R0
        JNZ     ??ZDP_BindUnbindReq_5
// 1286   {
// 1287     *pBuf++ = LO_UINT16( destinationAddr->addr.shortAddr );
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine61 & 0xFFFF
// 1288     *pBuf++ = HI_UINT16( destinationAddr->addr.shortAddr );
??CrossCallReturnLabel_98:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ?Subroutine66 & 0xFFFF
// 1289   }
??CrossCallReturnLabel_190:
        INC     DPTR
??ZDP_BindUnbindReq_4:
        MOVX    @DPTR,A
// 1290 
// 1291   FillAndSendTxOptions( &ZDP_TransID, dstAddr, BindOrUnbind, len, AF_MSG_ACK_REQUEST );
??ZDP_BindUnbindReq_5:
        MOV     DPTR,#ZDP_TxOptions
        MOV     A,#0x10
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV     R1,?V2
        MOV     R4,?V4
        MOV     R5,?V5
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        MOV     A,R1
        MOV     R1,A
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
        LJMP    ??Subroutine110_0 & 0xFFFF
// 1292 }
          CFI EndBlock cfiBlock233

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond234 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_190
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond235 Using cfiCommon0
          CFI (cfiCond235) Function ZDP_MgmtBindRsp
          CFI (cfiCond235) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond235) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond235) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond235) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond235) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond235) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond235) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond235) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond235) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond235) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond235) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond235) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond235) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond235) CFA_SP SP+-2
          CFI (cfiCond235) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker236 Using cfiCommon1
          CFI (cfiPicker236) NoFunction
          CFI (cfiPicker236) Picker
        INC     DPTR
          CFI EndBlock cfiCond234
          CFI EndBlock cfiCond235
          CFI EndBlock cfiPicker236
        REQUIRE ??Subroutine111_0
        ; // Fall through to label ??Subroutine111_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine111_0:
          CFI Block cfiCond237 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_188
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond238 Using cfiCommon0
          CFI (cfiCond238) Function ZDP_MgmtBindRsp
          CFI (cfiCond238) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond238) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond238) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond238) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond238) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond238) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond238) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond238) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond238) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond238) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond238) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond238) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond238) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond238) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond238) CFA_SP SP+-2
          CFI (cfiCond238) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond239 Using cfiCommon0
          CFI (cfiCond239) Function ZDP_BindUnbindReq
          CFI (cfiCond239) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond239) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond239) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond239) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond239) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond239) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond239) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond239) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond239) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond239) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond239) CFA_SP SP+-2
          CFI (cfiCond239) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function ZDP_MgmtBindRsp
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond240) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond240) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond240) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond240) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+-2
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker241 Using cfiCommon1
          CFI (cfiPicker241) NoFunction
          CFI (cfiPicker241) Picker
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_196:
        RET
          CFI EndBlock cfiCond237
          CFI EndBlock cfiCond238
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiPicker241

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond242 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_190
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond243 Using cfiCommon0
          CFI (cfiCond243) Function ZDP_MgmtBindRsp
          CFI (cfiCond243) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_191
          CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond243) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond243) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond243) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond243) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond243) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond243) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond243) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond243) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond243) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond243) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond243) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond243) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond243) CFA_SP SP+-4
          CFI (cfiCond243) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond244 Using cfiCommon0
          CFI (cfiCond244) Function ZDP_MgmtBindRsp
          CFI (cfiCond244) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_188
          CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond244) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond244) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond244) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond244) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond244) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond244) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond244) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond244) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond244) CFA_SP SP+-4
          CFI (cfiCond244) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond245 Using cfiCommon0
          CFI (cfiCond245) Function ZDP_MgmtBindRsp
          CFI (cfiCond245) Conditional ??CrossCallReturnLabel_196, ??CrossCallReturnLabel_189
          CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond245) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond245) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond245) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond245) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond245) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond245) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond245) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond245) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond245) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond245) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond245) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond245) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond245) CFA_SP SP+-4
          CFI (cfiCond245) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function ZDP_EPRsp
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_97
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+-4
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function ZDP_BindUnbindReq
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_98
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond247) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond247) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond247) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond247) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond247) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond247) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_SP SP+-4
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function ZDP_MgmtLqiRsp
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_99
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond248) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond248) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond248) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond248) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond248) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond248) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond248) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond248) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond248) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_SP SP+-4
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond249 Using cfiCommon0
          CFI (cfiCond249) Function ZDP_MgmtRtgRsp
          CFI (cfiCond249) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_52
          CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond249) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond249) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond249) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond249) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond249) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond249) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond249) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond249) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond249) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond249) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond249) CFA_SP SP+-4
          CFI (cfiCond249) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond250 Using cfiCommon0
          CFI (cfiCond250) Function ZDP_MgmtBindRsp
          CFI (cfiCond250) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_53
          CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond250) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond250) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond250) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond250) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond250) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond250) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond250) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond250) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond250) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond250) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond250) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond250) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond250) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond250) CFA_SP SP+-4
          CFI (cfiCond250) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function ZDP_MgmtRtgRsp
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_8
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond251) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond251) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+-4
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function ZDP_MgmtBindRsp
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_9
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond252) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond252) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond252) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond252) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond252) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond252) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond252) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-4
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function ZDP_MgmtRtgRsp
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_8
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond253) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond253) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond253) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond253) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond253) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond253) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond253) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond253) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond253) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+-4
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function ZDP_MgmtBindRsp
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_9
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond254) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond254) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond254) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond254) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond254) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond254) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond254) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond254) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond254) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond254) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+-4
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker255 Using cfiCommon1
          CFI (cfiPicker255) NoFunction
          CFI (cfiPicker255) Picker
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond242
          CFI EndBlock cfiCond243
          CFI EndBlock cfiCond244
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiCond249
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiPicker255

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond256 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_97
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function ZDP_BindUnbindReq
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_98
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond257) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond257) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond257) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond257) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond257) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond257) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+-2
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function ZDP_MgmtLqiRsp
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_99
          CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond258) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond258) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond258) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond258) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond258) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond258) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond258) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond258) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond258) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond258) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond258) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond258) CFA_SP SP+-2
          CFI (cfiCond258) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker259 Using cfiCommon1
          CFI (cfiPicker259) NoFunction
          CFI (cfiPicker259) Picker
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_195:
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiPicker259

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond260 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_93
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond261 Using cfiCommon0
          CFI (cfiCond261) Function zdpProcessAddrReq
          CFI (cfiCond261) Conditional ??CrossCallReturnLabel_94
          CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond261) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond261) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond261) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond261) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond261) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond261) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond261) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond261) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond261) CFA_SP SP+-2
          CFI (cfiCond261) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond262 Using cfiCommon0
          CFI (cfiCond262) Function ZDP_BindUnbindReq
          CFI (cfiCond262) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond262) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond262) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond262) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond262) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond262) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond262) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond262) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond262) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond262) CFA_SP SP+-2
          CFI (cfiCond262) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond263 Using cfiCommon0
          CFI (cfiCond263) Function ZDP_MgmtRtgRsp
          CFI (cfiCond263) Conditional ??CrossCallReturnLabel_96
          CFI (cfiCond263) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond263) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond263) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond263) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond263) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond263) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond263) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond263) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond263) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond263) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond263) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond263) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond263) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond263) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond263) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond263) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond263) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond263) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond263) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond263) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond263) CFA_SP SP+-2
          CFI (cfiCond263) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker264 Using cfiCommon1
          CFI (cfiPicker264) NoFunction
          CFI (cfiPicker264) Picker
        MOVX    A,@DPTR
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R5,A
        RET
          CFI EndBlock cfiCond260
          CFI EndBlock cfiCond261
          CFI EndBlock cfiCond262
          CFI EndBlock cfiCond263
          CFI EndBlock cfiPicker264

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond265 Using cfiCommon0
          CFI Function ZDP_MgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_197
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function ZDP_MgmtLeaveReq
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond266) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond266) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond266) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond266) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond266) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond266) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond266) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond266) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond266) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond266) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond266) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond266) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond266) CFA_SP SP+-2
          CFI (cfiCond266) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker267 Using cfiCommon1
          CFI (cfiPicker267) NoFunction
          CFI (cfiPicker267) Picker
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0,R1
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiPicker267
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        REQUIRE ??Subroutine112_0
        ; // Fall through to label ??Subroutine112_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine112_0:
          CFI Block cfiCond268 Using cfiCommon0
          CFI Function ZDP_ParentAnnce
          CFI Conditional ??CrossCallReturnLabel_203
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function zdpProcessAddrReq
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond269) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond269) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond269) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond269) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond269) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond269) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond269) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond269) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond269) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond269) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond269) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond269) CFA_SP SP+-2
          CFI (cfiCond269) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function ZDP_BindUnbindReq
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond270) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond270) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond270) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond270) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond270) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond270) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond270) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond270) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond270) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond270) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond270) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond270) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond270) CFA_SP SP+-2
          CFI (cfiCond270) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond271) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond271) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond271) CFA_SP SP+-2
          CFI (cfiCond271) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond272) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond272) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond272) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond272) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond272) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond272) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond272) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond272) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond272) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond272) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond272) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond272) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond272) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond272) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond272) CFA_SP SP+-2
          CFI (cfiCond272) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond273 Using cfiCommon0
          CFI (cfiCond273) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond273) Conditional ??CrossCallReturnLabel_197
          CFI (cfiCond273) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond273) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond273) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond273) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond273) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond273) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond273) CFA_SP SP+-2
          CFI (cfiCond273) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function ZDP_MgmtLeaveReq
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+-2
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker275 Using cfiCommon1
          CFI (cfiPicker275) NoFunction
          CFI (cfiPicker275) Picker
        MOV     DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiPicker275
        REQUIRE ??Subroutine113_0
        ; // Fall through to label ??Subroutine113_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine113_0:
          CFI Block cfiCond276 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_199
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond277 Using cfiCommon0
          CFI (cfiCond277) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond277) Conditional ??CrossCallReturnLabel_200
          CFI (cfiCond277) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond277) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond277) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond277) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond277) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond277) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond277) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond277) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond277) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond277) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond277) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond277) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond277) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond277) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond277) CFA_SP SP+-2
          CFI (cfiCond277) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond278 Using cfiCommon0
          CFI (cfiCond278) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond278) Conditional ??CrossCallReturnLabel_201
          CFI (cfiCond278) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond278) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond278) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond278) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond278) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond278) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond278) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond278) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond278) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond278) CFA_SP SP+-2
          CFI (cfiCond278) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond279 Using cfiCommon0
          CFI (cfiCond279) Function ZDO_SendMsgCBs
          CFI (cfiCond279) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond279) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond279) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond279) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond279) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond279) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond279) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond279) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond279) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond279) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond279) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond279) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond279) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond279) CFA_SP SP+-2
          CFI (cfiCond279) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond280 Using cfiCommon0
          CFI (cfiCond280) Function ZDP_ParentAnnce
          CFI (cfiCond280) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond280) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond280) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond280) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond280) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond280) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond280) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond280) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond280) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond280) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond280) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond280) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond280) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond280) CFA_SP SP+-2
          CFI (cfiCond280) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function zdpProcessAddrReq
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond281) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond281) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond281) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond281) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond281) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond281) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond281) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond281) CFA_SP SP+-2
          CFI (cfiCond281) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function ZDP_BindUnbindReq
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+-2
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function ZDP_MgmtNwkDiscReq
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_206
          CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond283) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond283) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond283) CFA_SP SP+-2
          CFI (cfiCond283) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond284 Using cfiCommon0
          CFI (cfiCond284) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond284) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond284) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond284) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond284) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond284) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond284) CFA_SP SP+-2
          CFI (cfiCond284) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_197
          CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond285) CFA_SP SP+-2
          CFI (cfiCond285) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function ZDP_MgmtLeaveReq
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+-2
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker287 Using cfiCommon1
          CFI (cfiPicker287) NoFunction
          CFI (cfiPicker287) Picker
        MOVX    A,@DPTR
        MOV     R2,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R3,A
        RET
          CFI EndBlock cfiCond276
          CFI EndBlock cfiCond277
          CFI EndBlock cfiCond278
          CFI EndBlock cfiCond279
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiPicker287
// 1293 
// 1294 /*********************************************************************
// 1295  * Network Management
// 1296  */
// 1297 
// 1298 /*********************************************************************
// 1299  * @fn          ZDP_MgmtNwkDiscReq
// 1300  *
// 1301  * @brief       This builds and send a Mgmt_NWK_Disc_req message. This
// 1302  *              function sends a unicast message.
// 1303  *
// 1304  * @param       dstAddr - destination address of the message
// 1305  * @param       ScanChannels - 32 bit address bit map
// 1306  * @param       StartIndex - Starting index within the reporting network
// 1307  *                           list
// 1308  * @param       SecurityEnable - Security Options
// 1309  *
// 1310  * @return      afStatus_t
// 1311  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1312 afStatus_t ZDP_MgmtNwkDiscReq( zAddrType_t *dstAddr,
ZDP_MgmtNwkDiscReq:
          CFI Block cfiBlock288 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscReq
        CODE
// 1313                                uint32 ScanChannels,
// 1314                                byte ScanDuration,
// 1315                                byte StartIndex,
// 1316                                byte SecurityEnable )
// 1317 {
        FUNCALL ZDP_MgmtNwkDiscReq, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
        MOV     ?V0,R1
        MOV     ?V1,R4
// 1318   uint8 *pBuf = ZDP_TmpBuf;
// 1319   byte len = sizeof( uint32 )+1+1;  // ScanChannels + ScanDuration + StartIndex.
// 1320 
// 1321   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1322 
// 1323   pBuf = osal_buffer_uint32( pBuf, ScanChannels );
        ; Setup parameters for call to function osal_buffer_uint32
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 16)
        LCALL   ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_206:
        LCALL   `??osal_buffer_uint32::?relay`; Banked call to: osal_buffer_uint32
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV     DPL,R2
        MOV     DPH,R3
// 1324 
// 1325   *pBuf++ = ScanDuration;
        MOV     A,?V0
        MOVX    @DPTR,A
// 1326   *pBuf = StartIndex;
        INC     DPTR
        MOV     A,?V1
        MOVX    @DPTR,A
// 1327 
// 1328   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_NWK_Disc_req, len );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V2,#0x30
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV     R1,#0x6
        LJMP    ??Subroutine95_0 & 0xFFFF
// 1329 }
          CFI EndBlock cfiBlock288
// 1330 
// 1331 /*********************************************************************
// 1332  * @fn          ZDP_MgmtDirectJoinReq
// 1333  *
// 1334  * @brief       This builds and send a Mgmt_Direct_Join_req message. This
// 1335  *              function sends a unicast message.
// 1336  *
// 1337  * @param       dstAddr - destination address of the message
// 1338  * @param       deviceAddr - 64 bit IEEE Address
// 1339  * @param       SecurityEnable - Security Options
// 1340  *
// 1341  * @return      afStatus_t
// 1342  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1343 afStatus_t ZDP_MgmtDirectJoinReq( zAddrType_t *dstAddr,
ZDP_MgmtDirectJoinReq:
          CFI Block cfiBlock289 Using cfiCommon0
          CFI Function ZDP_MgmtDirectJoinReq
        CODE
// 1344                                uint8 *deviceAddr,
// 1345                                byte capInfo,
// 1346                                byte SecurityEnable )
// 1347 {
        FUNCALL ZDP_MgmtDirectJoinReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtDirectJoinReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        LCALL   ?Subroutine40 & 0xFFFF
// 1348   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1349 
// 1350   osal_cpyExtAddr( ZDP_TmpBuf, deviceAddr );
??CrossCallReturnLabel_197:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1351   ZDP_TmpBuf[Z_EXTADDR_LEN] = capInfo;
        LCALL   ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_259:
        XCH     A,R0
        ADD     A,#0x8
        MOV     DPL,A
        CLR     A
        ADDC    A,R0
        MOV     DPH,A
        MOV     A,?V0
        MOVX    @DPTR,A
// 1352 
// 1353   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Direct_Join_req, (Z_EXTADDR_LEN + 1) );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V2,#0x35
        LJMP    ?Subroutine1 & 0xFFFF
// 1354 }
          CFI EndBlock cfiBlock289
// 1355 
// 1356 /*********************************************************************
// 1357  * @fn          ZDP_MgmtPermitJoinReq
// 1358  *
// 1359  * @brief       This builds and send a Mgmt_Permit_Join_req message.
// 1360  *
// 1361  * @param       dstAddr - destination address of the message
// 1362  * @param       duration - Permit duration
// 1363  * @param       TcSignificance - Trust Center Significance
// 1364  *
// 1365  * @return      afStatus_t
// 1366  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1367 afStatus_t ZDP_MgmtPermitJoinReq( zAddrType_t *dstAddr, byte duration,
ZDP_MgmtPermitJoinReq:
          CFI Block cfiBlock290 Using cfiCommon0
          CFI Function ZDP_MgmtPermitJoinReq
        CODE
// 1368                                   byte TcSignificance, byte SecurityEnable )
// 1369 {
        FUNCALL ZDP_MgmtPermitJoinReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtPermitJoinReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtPermitJoinReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 9
        MOV     A,#-0x9
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R2
        MOV     R6,A
        MOV     A,R3
        MOV     R7,A
// 1370   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1371 
// 1372   // Build buffer
// 1373   ZDP_TmpBuf[ZDP_MGMT_PERMIT_JOIN_REQ_DURATION] = duration;
        LCALL   ?Subroutine48 & 0xFFFF
??CrossCallReturnLabel_186:
        MOV     A,R1
        LCALL   ?Subroutine23 & 0xFFFF
// 1374   ZDP_TmpBuf[ZDP_MGMT_PERMIT_JOIN_REQ_TC_SIG]   = TcSignificance;
??CrossCallReturnLabel_25:
        MOV     A,R4
        MOVX    @DPTR,A
// 1375 
// 1376   // Check of this is a broadcast message
// 1377   if ( (dstAddr) && ((dstAddr->addrMode == Addr16Bit) || (dstAddr->addrMode == AddrBroadcast))
// 1378       && ((dstAddr->addr.shortAddr == NWK_BROADCAST_SHORTADDR_DEVALL)
// 1379           || (dstAddr->addr.shortAddr == NWK_BROADCAST_SHORTADDR_DEVZCZR)
// 1380           || (dstAddr->addr.shortAddr == NWK_BROADCAST_SHORTADDR_DEVRXON)) )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDP_MgmtPermitJoinReq_0
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R0,A
        MOV     A,#0x2
        XRL     A,R0
        JZ      ??ZDP_MgmtPermitJoinReq_1
        MOV     A,#0xf
        XRL     A,R0
        JNZ     ??ZDP_MgmtPermitJoinReq_0
??ZDP_MgmtPermitJoinReq_1:
        MOV     DPL,R6
        MOV     DPH,R7
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_244:
        MOV     A,#-0x1
        XRL     A,R0
        JNZ     ??ZDP_MgmtPermitJoinReq_2
        MOV     A,#-0x1
        XRL     A,R1
??ZDP_MgmtPermitJoinReq_2:
        JZ      ??ZDP_MgmtPermitJoinReq_3
        MOV     A,#-0x4
        XRL     A,R0
        JNZ     ??ZDP_MgmtPermitJoinReq_4
        MOV     A,#-0x1
        XRL     A,R1
??ZDP_MgmtPermitJoinReq_4:
        JZ      ??ZDP_MgmtPermitJoinReq_3
        MOV     A,#-0x3
        XRL     A,R0
        JNZ     ??ZDP_MgmtPermitJoinReq_5
        MOV     A,#-0x1
        XRL     A,R1
??ZDP_MgmtPermitJoinReq_5:
        JNZ     ??ZDP_MgmtPermitJoinReq_0
// 1381   {
// 1382     // Send this to our self as well as broadcast to network
// 1383     zAddrType_t tmpAddr;
// 1384 
// 1385     tmpAddr.addrMode = Addr16Bit;
??ZDP_MgmtPermitJoinReq_3:
        MOV     A,#0x8
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        MOVX    @DPTR,A
// 1386     tmpAddr.addr.shortAddr = NLME_GetShortAddr();
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL   `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
// 1387 
// 1388     fillAndSend( &ZDP_TransID, &tmpAddr, Mgmt_Permit_Join_req,
// 1389                       ZDP_MGMT_PERMIT_JOIN_REQ_SIZE );
        ; Setup parameters for call to function fillAndSend
        MOV     ?V2,#0x36
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R1,#0x2
        MOV     A,R1
        LCALL   ?XSTACK_DISP102_8
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
// 1390   }
// 1391 
// 1392   // Send the message
// 1393   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Permit_Join_req,
// 1394                       ZDP_MGMT_PERMIT_JOIN_REQ_SIZE );
??ZDP_MgmtPermitJoinReq_0:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V2,#0x36
        MOV     ?V3,#0x0
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R1,#0x2
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        LJMP    ?Subroutine9 & 0xFFFF
// 1395 }
          CFI EndBlock cfiBlock290

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond291 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_24
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_25
          CFI (cfiCond292) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond292) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond292) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond292) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond292) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond292) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond292) CFA_SP SP+-2
          CFI (cfiCond292) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker293 Using cfiCommon1
          CFI (cfiPicker293) NoFunction
          CFI (cfiPicker293) Picker
        LCALL   ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_119:
        RET
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiPicker293

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond294 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function ZDP_SimpleDescReq
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_17
          CFI (cfiCond295) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond295) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond295) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond295) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond295) CFA_SP SP+-4
          CFI (cfiCond295) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function ZDP_SimpleDescReq
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_6
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+-4
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function ZDP_GenericRsp
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_7
          CFI (cfiCond297) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond297) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond297) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond297) CFA_SP SP+-4
          CFI (cfiCond297) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function ZDP_DeviceAnnce
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_24
          CFI (cfiCond298) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond298) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond298) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond298) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond298) CFA_SP SP+-4
          CFI (cfiCond298) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_25
          CFI (cfiCond299) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond299) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond299) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond299) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond299) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond299) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond299) CFA_SP SP+-4
          CFI (cfiCond299) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker300 Using cfiCommon1
          CFI (cfiPicker300) NoFunction
          CFI (cfiPicker300) Picker
        MOVX    @DPTR,A
        LCALL   ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_147:
        INC     DPTR
        RET
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiPicker300

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond301 Using cfiCommon0
          CFI Function ZDP_NWKAddrOfInterestReq
          CFI Conditional ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_16
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function ZDP_SimpleDescReq
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_146, ??CrossCallReturnLabel_17
          CFI (cfiCond302) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond302) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond302) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond302) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond302) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond302) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond302) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond302) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond302) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond302) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond302) CFA_SP SP+-4
          CFI (cfiCond302) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function ZDP_NWKAddrOfInterestReq
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_16
          CFI (cfiCond303) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond303) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond303) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond303) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond303) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond303) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond303) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond303) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond303) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond303) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond303) CFA_SP SP+-6
          CFI (cfiCond303) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond304 Using cfiCommon0
          CFI (cfiCond304) Function ZDP_SimpleDescReq
          CFI (cfiCond304) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_117, ??CrossCallReturnLabel_17
          CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond304) CFA_SP SP+-6
          CFI (cfiCond304) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function ZDP_SimpleDescReq
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_6
          CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond305) CFA_SP SP+-6
          CFI (cfiCond305) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function ZDP_GenericRsp
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_118, ??CrossCallReturnLabel_7
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+-6
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond307 Using cfiCommon0
          CFI (cfiCond307) Function ZDP_DeviceAnnce
          CFI (cfiCond307) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_24
          CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond307) CFA_SP SP+-6
          CFI (cfiCond307) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond308 Using cfiCommon0
          CFI (cfiCond308) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond308) Conditional ??CrossCallReturnLabel_147, ??CrossCallReturnLabel_119, ??CrossCallReturnLabel_25
          CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond308) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond308) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond308) CFA_SP SP+-6
          CFI (cfiCond308) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker309 Using cfiCommon1
          CFI (cfiPicker309) NoFunction
          CFI (cfiPicker309) Picker
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     DPH,A
        MOV     DPL,R0
        RET
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiCond307
          CFI EndBlock cfiCond308
          CFI EndBlock cfiPicker309
// 1396 
// 1397 /*********************************************************************
// 1398  * @fn          ZDP_MgmtLeaveReq
// 1399  *
// 1400  * @brief       This builds and send a Mgmt_Leave_req message.
// 1401  *
// 1402  * @param       dstAddr - destination address of the message
// 1403  *              IEEEAddr - IEEE adddress of device that is removed
// 1404  *              RemoveChildren - set to 1 to remove the children of the
// 1405  *                                device as well. 0 otherwise.
// 1406  *              Rejoin - set to 1 if the removed device should rejoin
// 1407                          afterwards. 0 otherwise.
// 1408  *
// 1409  * @return      afStatus_t
// 1410  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1411 afStatus_t ZDP_MgmtLeaveReq( zAddrType_t *dstAddr, uint8 *IEEEAddr, uint8 RemoveChildren,
ZDP_MgmtLeaveReq:
          CFI Block cfiBlock310 Using cfiCommon0
          CFI Function ZDP_MgmtLeaveReq
        CODE
// 1412                  uint8 Rejoin, uint8 SecurityEnable )
// 1413 
// 1414 {
        FUNCALL ZDP_MgmtLeaveReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLeaveReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V2
        REQUIRE ?V3
        MOV     A,#-0xc
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        LCALL   ?Subroutine40 & 0xFFFF
// 1415   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1416 
// 1417   osal_cpyExtAddr( ZDP_TmpBuf, IEEEAddr );
??CrossCallReturnLabel_198:
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1418   ZDP_TmpBuf[Z_EXTADDR_LEN] = 0;
        MOV     DPTR,#ZDP_TmpBuf
        MOVX    A,@DPTR
        ADD     A,#0x8
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        MOVX    @DPTR,A
// 1419 
// 1420   if ( RemoveChildren == TRUE )
        INC     A
        XRL     A,?V0
        JNZ     ??ZDP_MgmtLeaveReq_0
// 1421   {
// 1422     ZDP_TmpBuf[Z_EXTADDR_LEN] |= ZDP_MGMT_LEAVE_REQ_RC;
        MOV     A,#0x40
        MOVX    @DPTR,A
// 1423   }
// 1424   if ( Rejoin == TRUE )
??ZDP_MgmtLeaveReq_0:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        XRL     A,#0x1
        JNZ     ??ZDP_MgmtLeaveReq_1
// 1425   {
// 1426     ZDP_TmpBuf[Z_EXTADDR_LEN] |= ZDP_MGMT_LEAVE_REQ_REJOIN;
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        SETB    0xE0 /* A   */.7
        MOVX    @DPTR,A
// 1427   }
// 1428 
// 1429   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_Leave_req, (Z_EXTADDR_LEN + 1) );
??ZDP_MgmtLeaveReq_1:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V2,#0x34
        LJMP    ?Subroutine1 & 0xFFFF
// 1430 }
          CFI EndBlock cfiBlock310
// 1431 
// 1432 /*********************************************************************
// 1433  * @fn          ZDP_MgmtNwkUpdateReq
// 1434  *
// 1435  * @brief       This builds and send a Mgmt_NWK_Update_req message. This
// 1436  *              function sends a unicast or broadcast message.
// 1437  *
// 1438  * @param       dstAddr - destination address of the message
// 1439  * @param       ChannelMask - 32 bit address bit map
// 1440  * @param       ScanDuration - length of time to spend scanning each channel
// 1441  * @param       ScanCount - number of energy scans to be conducted
// 1442  * @param       NwkUpdateId - NWk Update Id value
// 1443  * @param       NwkManagerAddr - NWK address for device with Network Manager
// 1444  *                               bit set in its Node Descriptor
// 1445  *
// 1446  * @return      afStatus_t
// 1447  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1448 afStatus_t ZDP_MgmtNwkUpdateReq( zAddrType_t *dstAddr,
ZDP_MgmtNwkUpdateReq:
          CFI Block cfiBlock311 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateReq
        CODE
// 1449                                  uint32 ChannelMask,
// 1450                                  uint8 ScanDuration,
// 1451                                  uint8 ScanCount,
// 1452                                  uint8 NwkUpdateId,
// 1453                                  uint16 NwkManagerAddr )
// 1454 {
        FUNCALL ZDP_MgmtNwkUpdateReq, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateReq, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     A,R1
        MOV     R7,A
        MOV     ?V2,R4
        MOV     ?V3,R5
// 1455   uint8 *pBuf = ZDP_TmpBuf;
// 1456   byte len = sizeof( uint32 ) + 1;  // ChannelMask + ScanDuration
        MOV     R6,#0x5
// 1457 
// 1458   pBuf = osal_buffer_uint32( pBuf, ChannelMask );
        ; Setup parameters for call to function osal_buffer_uint32
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL   ??Subroutine112_0 & 0xFFFF
??CrossCallReturnLabel_207:
        LCALL   `??osal_buffer_uint32::?relay`; Banked call to: osal_buffer_uint32
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 14)
// 1459 
// 1460   *pBuf++ = ScanDuration;
        MOV     A,R7
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    @DPTR,A
// 1461 
// 1462   if ( ScanDuration <= 0x05 )
        MOV     A,R2
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,R3
        MOV     R5,A
        INC     DPTR
        MOV     A,R7
        CLR     C
        SUBB    A,#0x6
        JNC     ??ZDP_MgmtNwkUpdateReq_0
// 1463   {
// 1464     // Request is to scan over channelMask
// 1465     len += sizeof( uint8 );
        MOV     R6,#0x6
// 1466 
// 1467     *pBuf++ = ScanCount;
        MOV     A,?V2
        MOVX    @DPTR,A
        SJMP    ??ZDP_MgmtNwkUpdateReq_1
// 1468   }
// 1469   else if ( ( ScanDuration == 0xFE ) || ( ScanDuration == 0xFF ) )
??ZDP_MgmtNwkUpdateReq_0:
        MOV     A,#-0x2
        XRL     A,R7
        JZ      ??ZDP_MgmtNwkUpdateReq_2
        MOV     A,#-0x1
        XRL     A,R7
        JNZ     ??ZDP_MgmtNwkUpdateReq_1
// 1470   {
// 1471     // Request is to change Channel (0xFE) or apsChannelMask and NwkManagerAddr (0xFF)
// 1472     len += sizeof( uint8 );
??ZDP_MgmtNwkUpdateReq_2:
        MOV     R6,#0x6
// 1473 
// 1474     *pBuf++ = NwkUpdateId;
        MOV     A,?V3
        MOVX    @DPTR,A
// 1475 
// 1476     if ( ScanDuration == 0xFF )
        MOV     A,#-0x1
        XRL     A,R7
        JNZ     ??ZDP_MgmtNwkUpdateReq_1
// 1477     {
// 1478       len += sizeof( uint16 );
        MOV     R6,#0x8
        MOV     A,#0x12
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine52 & 0xFFFF
// 1479 
// 1480       *pBuf++  = LO_UINT16( NwkManagerAddr );
// 1481       *pBuf++  = HI_UINT16( NwkManagerAddr );
// 1482     }
// 1483   }
??CrossCallReturnLabel_79:
        LCALL   ?Subroutine35 & 0xFFFF
??CrossCallReturnLabel_44:
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x4
// 1484 
// 1485   return fillAndSend( &ZDP_TransID, dstAddr, Mgmt_NWK_Update_req, len );
??ZDP_MgmtNwkUpdateReq_1:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V4,#0x38
        MOV     ?V5,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV     A,R6
        MOV     R1,A
        MOV     R4,?V0
        MOV     R5,?V1
        MOV     R2,#ZDP_TransID & 0xff
        MOV     R3,#(ZDP_TransID >> 8) & 0xff
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LJMP    ?Subroutine0 & 0xFFFF
// 1486 }
          CFI EndBlock cfiBlock311

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond312 Using cfiCommon0
          CFI Function ZDP_ServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_78
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond313 Using cfiCommon0
          CFI (cfiCond313) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond313) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond313) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond313) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond313) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond313) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond313) CFA_SP SP+-2
          CFI (cfiCond313) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker314 Using cfiCommon1
          CFI (cfiPicker314) NoFunction
          CFI (cfiPicker314) Picker
        LCALL   ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_123:
        MOV     DPL,R4
        MOV     DPH,R5
        RET
          CFI EndBlock cfiCond312
          CFI EndBlock cfiCond313
          CFI EndBlock cfiPicker314
// 1487 
// 1488 
// 1489 /*********************************************************************
// 1490  * Network Management Responses
// 1491  */
// 1492 
// 1493 /*********************************************************************
// 1494  * @fn          ZDP_MgmtNwkDiscRsp
// 1495  *
// 1496  * @brief       This builds and send a Mgmt_NWK_Disc_rsp message. This
// 1497  *              function sends a unicast message.
// 1498  *
// 1499  * @param       dstAddr - destination address of the message
// 1500  * @param       Status - message status (ZDP_SUCCESS or other)
// 1501  * @param       NetworkCount - Total number of networks found
// 1502  * @param       StartIndex - Starting index within the reporting network
// 1503  *                           list
// 1504  * @param       NetworkListCount - number of network lists included
// 1505  *                                 in this message
// 1506  * @param       NetworkList - List of network descriptors
// 1507  * @param       SecurityEnable - Security Options
// 1508  *
// 1509  * @return      afStatus_t
// 1510  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1511 afStatus_t ZDP_MgmtNwkDiscRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtNwkDiscRsp:
          CFI Block cfiBlock315 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
        CODE
// 1512                             byte Status,
// 1513                             byte NetworkCount,
// 1514                             byte StartIndex,
// 1515                             byte NetworkListCount,
// 1516                             networkDesc_t *NetworkList,
// 1517                             byte SecurityEnable )
// 1518 {
        FUNCALL ZDP_MgmtNwkDiscRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkDiscRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V12,R2
        MOV     ?V13,R3
        MOV     ?V10,R4
        MOV     ?V7,R5
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V4,A
// 1519   uint8 *buf;
// 1520   uint8 *pBuf;
// 1521   byte len = 1+1+1+1;  // Status + NetworkCount + StartIndex + NetworkCountList.
// 1522   byte idx;
// 1523 
// 1524   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1525 
// 1526   len += (NetworkListCount * ( ZDP_NETWORK_EXTENDED_DISCRIPTOR_SIZE - 2 ));
        MOV     B,#0xc
        MUL     AB
        ADD     A,#0x4
        MOV     ?V5,A
// 1527 
// 1528   buf = osal_mem_alloc( len+1 );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_108:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V0,R2
        MOV     ?V1,R3
// 1529   if ( buf == NULL )
        MOV     A,R2
        ORL     A,?V1
        JNZ     ??ZDP_MgmtNwkDiscRsp_0
// 1530   {
// 1531     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??CrossCallReturnLabel_28 & 0xFFFF
// 1532   }
// 1533 
// 1534   pBuf = buf+1;
??ZDP_MgmtNwkDiscRsp_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     ?V8,DPL
        MOV     ?V9,DPH
        MOV     R6,?V8
        MOV     R7,?V9
// 1535 
// 1536   *pBuf++ = Status;
        MOV     A,?V10
        MOVX    @DPTR,A
// 1537   *pBuf++ = NetworkCount;
        INC     DPTR
        MOV     A,?V7
        MOVX    @DPTR,A
// 1538   *pBuf++ = StartIndex;
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_72:
        INC     DPTR
        LCALL   ?Subroutine87 & 0xFFFF
// 1539   *pBuf++ = NetworkListCount;
??CrossCallReturnLabel_140:
        MOV     A,?V4
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x4
        MOV     R6,A
        JNC     ??ZDP_MgmtNwkDiscRsp_1
        INC     R7
// 1540 
// 1541   for ( idx = 0; idx < NetworkListCount; idx++ )
??ZDP_MgmtNwkDiscRsp_1:
        MOV     ?V6,#0x0
        MOV     A,#0x19
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_65:
        SJMP    ??ZDP_MgmtNwkDiscRsp_2
// 1542   {
// 1543     osal_cpyExtAddr( pBuf, NetworkList->extendedPANID);
// 1544     pBuf += Z_EXTADDR_LEN;
// 1545 
// 1546     *pBuf++  = NetworkList->logicalChannel;                // LogicalChannel
// 1547     *pBuf    = NetworkList->stackProfile;                  // Stack profile
// 1548     *pBuf++ |= (byte)(NetworkList->version << 4);          // ZigBee Version
// 1549     *pBuf    = BEACON_ORDER_NO_BEACONS;                    // Beacon Order
// 1550     *pBuf++ |= (uint8)(BEACON_ORDER_NO_BEACONS << 4);      // Superframe Order
// 1551 
// 1552     if ( NetworkList->chosenRouter != INVALID_NODE_ADDR )
// 1553     {
// 1554       *pBuf++ = TRUE;                         // Permit Joining
// 1555     }
// 1556     else
// 1557     {
// 1558       *pBuf++ = FALSE;
??ZDP_MgmtNwkDiscRsp_3:
        CLR     A
??ZDP_MgmtNwkDiscRsp_4:
        MOVX    @DPTR,A
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
// 1559     }
// 1560 
// 1561     NetworkList = NetworkList->nextDesc;    // Move to next list entry
        MOV     A,?V2
        ADD     A,#0x14
        MOV     DPL,A
        CLR     A
        ADDC    A,?V3
        MOV     DPH,A
        LCALL   ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_66:
        INC     ?V6
??ZDP_MgmtNwkDiscRsp_2:
        MOV     A,?V6
        CLR     C
        SUBB    A,?V4
        JC      $+5
        LJMP    ??ZDP_MgmtNwkDiscRsp_5 & 0xFFFF
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,?V2
        ADD     A,#0xb
        MOV     R4,A
        CLR     A
        ADDC    A,?V3
        MOV     R5,A
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine47 & 0xFFFF
??CrossCallReturnLabel_73:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_50:
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_214:
        MOVX    @DPTR,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf0
        MOV     R2,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ORL     A,R2
        LCALL   ?Subroutine22 & 0xFFFF
??CrossCallReturnLabel_23:
        INC     DPTR
        INC     DPTR
        MOV     A,#-0x1
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0xc
        MOV     R0,A
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        MOV     A,R6
        ADD     A,#0xb
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        MOV     DPL,?V2
        MOV     DPH,?V3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,#0xfe
        JNZ     ??ZDP_MgmtNwkDiscRsp_6
        INC     DPTR
        MOVX    A,@DPTR
        CPL     A
??ZDP_MgmtNwkDiscRsp_6:
        MOV     DPL,R2
        MOV     DPH,R3
        JNZ     $+5
        LJMP    ??ZDP_MgmtNwkDiscRsp_3 & 0xFFFF
        MOV     A,#0x1
        LJMP    ??ZDP_MgmtNwkDiscRsp_4 & 0xFFFF
// 1562   }
// 1563 
// 1564   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_NWK_Disc_rsp, len, buf );
??ZDP_MgmtNwkDiscRsp_5:
        MOV     DPTR,#ZDP_TmpBuf
        MOV     A,?V8
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V9
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     ?V2,#0x30
        MOV     ?V3,#-0x80
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R1,?V5
        MOV     R4,?V12
        MOV     R5,?V13
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R1
        MOV     R6,A
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_28:
          CFI EndBlock cfiBlock315
        REQUIRE ?Subroutine4
        ; // Fall through to label ?Subroutine4
// 1565 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock316 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 23)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV     A,#0x1
          CFI EndBlock cfiBlock316
        REQUIRE ??Subroutine114_0
        ; // Fall through to label ??Subroutine114_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine114_0:
          CFI Block cfiBlock317 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 24)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Valid
        MOV     R7,#0xe
        LJMP    ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock317

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond318 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_69
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function ZDP_NodeDescMsg
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond319) CFA_SP SP+-2
          CFI (cfiCond319) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond320 Using cfiCommon0
          CFI (cfiCond320) Function ZDP_NodeDescMsg
          CFI (cfiCond320) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond320) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond320) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond320) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond320) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond320) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond320) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond320) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond320) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond320) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond320) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond320) CFA_SP SP+-2
          CFI (cfiCond320) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond321 Using cfiCommon0
          CFI (cfiCond321) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond321) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond321) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond321) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond321) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond321) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond321) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond321) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond321) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond321) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond321) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond321) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond321) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond321) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond321) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond321) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond321) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond321) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond321) CFA_SP SP+-2
          CFI (cfiCond321) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond322 Using cfiCommon0
          CFI (cfiCond322) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond322) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond322) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond322) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond322) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond322) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond322) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond322) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond322) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond322) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond322) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond322) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond322) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond322) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond322) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond322) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond322) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond322) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond322) CFA_SP SP+-2
          CFI (cfiCond322) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker323 Using cfiCommon1
          CFI (cfiPicker323) NoFunction
          CFI (cfiPicker323) Picker
        LCALL   ??Subroutine115_0 & 0xFFFF
??CrossCallReturnLabel_209:
        INC     DPTR
        RET
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiCond320
          CFI EndBlock cfiCond321
          CFI EndBlock cfiCond322
          CFI EndBlock cfiPicker323

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond324 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_210
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function ZDP_NodeDescMsg
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond325) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond325) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond325) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond325) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond325) CFA_SP SP+-2
          CFI (cfiCond325) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker326 Using cfiCommon1
          CFI (cfiPicker326) NoFunction
          CFI (cfiPicker326) Picker
        INC     DPTR
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiPicker326
        REQUIRE ??Subroutine115_0
        ; // Fall through to label ??Subroutine115_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine115_0:
          CFI Block cfiCond327 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_67
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond328 Using cfiCommon0
          CFI (cfiCond328) Function ZDP_NodeDescMsg
          CFI (cfiCond328) Conditional ??CrossCallReturnLabel_208, ??CrossCallReturnLabel_68
          CFI (cfiCond328) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond328) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond328) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond328) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond328) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond328) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond328) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond328) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond328) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond328) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond328) CFA_SP SP+-4
          CFI (cfiCond328) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond329 Using cfiCommon0
          CFI (cfiCond329) Function ZDP_NodeDescMsg
          CFI (cfiCond329) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_69
          CFI (cfiCond329) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond329) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond329) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond329) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond329) CFA_SP SP+-4
          CFI (cfiCond329) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond330 Using cfiCommon0
          CFI (cfiCond330) Function ZDP_NodeDescMsg
          CFI (cfiCond330) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_70
          CFI (cfiCond330) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond330) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond330) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond330) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond330) CFA_SP SP+-4
          CFI (cfiCond330) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function ZDP_NodeDescMsg
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_71
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+-4
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_72
          CFI (cfiCond332) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond332) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond332) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond332) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond332) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond332) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond332) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond332) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond332) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond332) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond332) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond332) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond332) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond332) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond332) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond332) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond332) CFA_SP SP+-4
          CFI (cfiCond332) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_209, ??CrossCallReturnLabel_73
          CFI (cfiCond333) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond333) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond333) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond333) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond333) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond333) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond333) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond333) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond333) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond333) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond333) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond333) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond333) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond333) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond333) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond333) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond333) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond333) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond333) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond333) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond333) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond333) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond333) CFA_SP SP+-4
          CFI (cfiCond333) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond334 Using cfiCommon0
          CFI (cfiCond334) Function ZDP_NodeDescMsg
          CFI (cfiCond334) Conditional ??CrossCallReturnLabel_210
          CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond334) CFA_SP SP+-2
          CFI (cfiCond334) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function ZDP_NodeDescMsg
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+-2
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker336 Using cfiCommon1
          CFI (cfiPicker336) NoFunction
          CFI (cfiPicker336) Picker
        MOVX    A,@DPTR
        MOV     DPL,R6
        MOV     DPH,R7
        RET
          CFI EndBlock cfiCond327
          CFI EndBlock cfiCond328
          CFI EndBlock cfiCond329
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiPicker336

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond337 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_22
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_23
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond338) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond338) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond338) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond338) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond338) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond338) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond338) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-2
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker339 Using cfiCommon1
          CFI (cfiPicker339) NoFunction
          CFI (cfiPicker339) Picker
        LCALL   ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_141:
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiPicker339

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond340 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_140
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function fillAndSend
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_22
          CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond341) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond341) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond341) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond341) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond341) CFA_SP SP+-4
          CFI (cfiCond341) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_141, ??CrossCallReturnLabel_23
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond342) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond342) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond342) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond342) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond342) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+-4
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker343 Using cfiCommon1
          CFI (cfiPicker343) NoFunction
          CFI (cfiPicker343) Picker
        MOVX    @DPTR,A
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiPicker343
// 1566 
// 1567 /*********************************************************************
// 1568  * @fn          ZDP_MgmtLqiRsp
// 1569  *
// 1570  * @brief       This builds and send a Mgmt_Lqi_rsp message. This
// 1571  *              function sends a unicast message.
// 1572  *
// 1573  * @param       dstAddr - destination address of the message
// 1574  * @param       Status - message status (ZDP_SUCCESS or other)
// 1575  * @param       NeighborLqiEntries - Total number of entries found
// 1576  * @param       StartIndex - Starting index within the reporting list
// 1577  * @param       NeighborLqiCount - number of lists included
// 1578  *                                 in this message
// 1579  * @param       NeighborLqiList - List of NeighborLqiItems.  This list
// 1580  *                is the list to be sent, not the entire list
// 1581  * @param       SecurityEnable - true if secure
// 1582  *
// 1583  * @return      ZStatus_t
// 1584  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1585 ZStatus_t ZDP_MgmtLqiRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtLqiRsp:
          CFI Block cfiBlock344 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
        CODE
// 1586                           byte Status,
// 1587                           byte NeighborLqiEntries,
// 1588                           byte StartIndex,
// 1589                           byte NeighborLqiCount,
// 1590                           ZDP_MgmtLqiItem_t* NeighborList,
// 1591                           byte SecurityEnable )
// 1592 {
        FUNCALL ZDP_MgmtLqiRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtLqiRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        REQUIRE ?V12
        MOV     A,#-0x15
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
        ; Saved register size: 21
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V10,R2
        MOV     ?V11,R3
        MOV     ?V12,R5
// 1593   ZDP_MgmtLqiItem_t* list = NeighborList;
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine117_0 & 0xFFFF
// 1594   uint8 *buf, *pBuf;
// 1595   byte len, x;
// 1596 
// 1597   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1598 
// 1599   if ( ZSuccess != Status )
??CrossCallReturnLabel_218:
        MOV     A,R4
        JZ      ??ZDP_MgmtLqiRsp_0
// 1600   {
// 1601     ZDP_TmpBuf[0] = Status;
        LCALL   ?Subroutine48 & 0xFFFF
// 1602     return fillAndSend( &TransSeq, dstAddr, Mgmt_Lqi_rsp, 1 );
// 1603   }
??CrossCallReturnLabel_187:
        MOV     A,R4
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_46:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R1,#0x1
        MOV     R4,?V10
        MOV     R5,?V11
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        LJMP    ??CrossCallReturnLabel_29 & 0xFFFF
??ZDP_MgmtLqiRsp_0:
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V5,A
// 1604 
// 1605   // (Status + NeighborLqiEntries + StartIndex + NeighborLqiCount) +
// 1606   //  neighbor LQI data.
// 1607   len = (1 + 1 + 1 + 1) + (NeighborLqiCount * ZDP_MGMTLQI_EXTENDED_SIZE);
        MOV     B,#0x16
        MUL     AB
        ADD     A,#0x4
        MOV     ?V6,A
// 1608 
// 1609   buf = osal_mem_alloc( len+1 );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_109:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
// 1610   if ( buf == NULL )
        MOV     A,R2
        ORL     A,?V3
        JNZ     ??ZDP_MgmtLqiRsp_1
// 1611   {
// 1612     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??CrossCallReturnLabel_29 & 0xFFFF
// 1613   }
// 1614 
// 1615   pBuf = buf+1;
??ZDP_MgmtLqiRsp_1:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     ?V8,DPL
        MOV     ?V9,DPH
        MOV     ?V0,?V8
        MOV     ?V1,?V9
// 1616 
// 1617   *pBuf++ = Status;
        CLR     A
        MOVX    @DPTR,A
// 1618   *pBuf++ = NeighborLqiEntries;
        INC     DPTR
        MOV     A,?V12
        MOVX    @DPTR,A
// 1619   *pBuf++ = StartIndex;
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_103:
        LCALL   ?Subroutine32 & 0xFFFF
// 1620   *pBuf++ = NeighborLqiCount;
??CrossCallReturnLabel_43:
        INC     DPTR
        MOV     A,?V5
        MOVX    @DPTR,A
        MOV     A,?V0
        ADD     A,#0x4
        MOV     ?V0,A
        JNC     ??ZDP_MgmtLqiRsp_2
        INC     ?V1
// 1621 
// 1622   for ( x = 0; x < NeighborLqiCount; x++ )
??ZDP_MgmtLqiRsp_2:
        MOV     ?V4,#0x0
        LJMP    ??ZDP_MgmtLqiRsp_3 & 0xFFFF
// 1623   {
// 1624     osal_cpyExtAddr( pBuf, list->extPanID);         // Extended PanID
??ZDP_MgmtLqiRsp_4:
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        ADD     A,#0x2
        MOV     R4,A
        CLR     A
        ADDC    A,R7
        MOV     R5,A
        MOV     R2,?V0
        MOV     R3,?V1
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1625     pBuf += Z_EXTADDR_LEN;
// 1626 
// 1627     // EXTADDR
// 1628     pBuf = osal_cpyExtAddr( pBuf, list->extAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        ADD     A,#0xa
        MOV     R4,A
        CLR     A
        ADDC    A,R7
        MOV     R5,A
        MOV     A,?V0
        ADD     A,#0x8
        MOV     R2,A
        CLR     A
        ADDC    A,?V1
        MOV     R3,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     ?V0,R2
        MOV     ?V1,R3
        MOV     R0,?V0
        MOV     R1,?V1
// 1629 
// 1630     // NWKADDR
// 1631     *pBuf++ = LO_UINT16( list->nwkAddr );
        MOV     A,R6
        ADD     A,#0x12
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ??Subroutine116_0 & 0xFFFF
??CrossCallReturnLabel_212:
        LCALL   ?Subroutine26 & 0xFFFF
// 1632     *pBuf++ = HI_UINT16( list->nwkAddr );
??CrossCallReturnLabel_32:
        INC     DPTR
        MOVX    @DPTR,A
// 1633 
// 1634     // DEVICETYPE
// 1635     *pBuf = list->devType;
        MOV     A,R0
        ADD     A,#0x2
        MOV     R2,A
        CLR     A
        ADDC    A,R1
        MOV     R3,A
        LCALL   ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_115:
        LCALL   ?Subroutine61 & 0xFFFF
// 1636 
// 1637     // RXONIDLE
// 1638     *pBuf |= (uint8)(list->rxOnIdle << 2);
??CrossCallReturnLabel_99:
        MOV     A,R6
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        RLC     A
        RLC     A
        ANL     A,#0xfc
        MOV     R4,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ORL     A,R4
        MOVX    @DPTR,A
// 1639 
// 1640     // RELATIONSHIP
// 1641     *pBuf++ |= (uint8)(list->relation << 4);
        MOV     A,R6
        ADD     A,#0x16
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        SWAP    A
        ANL     A,#0xf0
        MOV     R4,A
        MOV     DPL,R2
        MOV     DPH,R3
        MOVX    A,@DPTR
        ORL     A,R4
        MOVX    @DPTR,A
// 1642 
// 1643     // PERMITJOINING
// 1644     *pBuf++ = (uint8)(list->permit);
        MOV     A,R6
        ADD     A,#0x17
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_130:
        MOVX    @DPTR,A
// 1645 
// 1646     // DEPTH
// 1647     *pBuf++ = list->depth;
        MOV     A,R6
        ADD     A,#0x18
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_100:
        MOVX    @DPTR,A
// 1648 
// 1649     // LQI
// 1650     *pBuf++ = list->lqi;
        MOV     A,R6
        ADD     A,#0x19
        LCALL   ?Subroutine62 & 0xFFFF
??CrossCallReturnLabel_101:
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R0
        ADD     A,#0x6
        MOV     ?V0,A
        CLR     A
        ADDC    A,R1
        MOV     ?V1,A
// 1651 
// 1652     list++; // next list entry
        MOV     A,R6
        ADD     A,#0x1a
        MOV     R6,A
        JNC     ??ZDP_MgmtLqiRsp_5
        INC     R7
// 1653   }
??ZDP_MgmtLqiRsp_5:
        INC     ?V4
??ZDP_MgmtLqiRsp_3:
        MOV     A,?V4
        CLR     C
        SUBB    A,?V5
        JNC     $+5
        LJMP    ??ZDP_MgmtLqiRsp_4 & 0xFFFF
// 1654 
// 1655   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Lqi_rsp, len, buf );
        MOV     DPTR,#ZDP_TmpBuf
        MOV     A,?V8
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V9
        LCALL   ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_47:
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 24)
        MOV     R1,?V6
        MOV     R4,?V10
        MOV     R5,?V11
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     A,R1
        MOV     R6,A
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V2
        MOV     R3,?V3
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_29:
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R7,#0xd
        LJMP    ?BANKED_LEAVE_XDATA
// 1656 }
          CFI EndBlock cfiBlock344

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond345 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_102
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond346 Using cfiCommon0
          CFI (cfiCond346) Function ZDP_MgmtLqiRsp
          CFI (cfiCond346) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond346) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond346) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond346) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond346) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond346) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond346) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond346) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond346) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond346) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond346) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond346) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond346) CFA_SP SP+-2
          CFI (cfiCond346) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker347 Using cfiCommon1
          CFI (cfiPicker347) NoFunction
          CFI (cfiPicker347) Picker
        LCALL   ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_174:
        RET
          CFI EndBlock cfiCond345
          CFI EndBlock cfiCond346
          CFI EndBlock cfiPicker347

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond348 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_180
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function ZDP_SimpleDescMsg
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_181
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond349) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond349) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond349) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond349) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond349) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+-4
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function ZDP_EndDeviceBindReq
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_179
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond350) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond350) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond350) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond350) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond350) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond350) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+-4
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function ZDP_SimpleDescMsg
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_174, ??CrossCallReturnLabel_102
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond351) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond351) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond351) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond351) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond351) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+-4
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond352 Using cfiCommon0
          CFI (cfiCond352) Function ZDP_MgmtLqiRsp
          CFI (cfiCond352) Conditional ??CrossCallReturnLabel_174, ??CrossCallReturnLabel_103
          CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond352) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond352) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond352) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond352) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond352) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond352) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond352) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond352) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond352) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond352) CFA_SP SP+-4
          CFI (cfiCond352) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker353 Using cfiCommon1
          CFI (cfiPicker353) NoFunction
          CFI (cfiPicker353) Picker
        LCALL   ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_177:
        RET
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiCond352
          CFI EndBlock cfiPicker353

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond354 Using cfiCommon0
          CFI Function ZDP_SimpleDescMsg
          CFI Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_54
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function ZDP_SimpleDescMsg
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_55
          CFI (cfiCond355) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond355) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond355) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond355) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond355) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond355) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond355) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond355) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond355) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond355) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond355) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond355) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond355) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond355) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond355) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond355) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond355) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond355) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond355) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond355) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond355) CFA_SP SP+-6
          CFI (cfiCond355) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function ZDP_SimpleDescMsg
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_56
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond356) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond356) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond356) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+-6
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function ZDP_SimpleDescMsg
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_129, ??CrossCallReturnLabel_57
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond357) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond357) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond357) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond357) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond357) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+-6
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function ZDP_SimpleDescMsg
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_2
          CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond358) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond358) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond358) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond358) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond358) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond358) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond358) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond358) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond358) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond358) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond358) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond358) CFA_SP SP+-6
          CFI (cfiCond358) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function ZDP_SimpleDescMsg
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_176, ??CrossCallReturnLabel_128, ??CrossCallReturnLabel_3
          CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond359) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond359) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond359) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond359) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond359) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond359) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond359) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond359) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond359) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond359) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond359) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond359) CFA_SP SP+-6
          CFI (cfiCond359) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function ZDP_SimpleDescMsg
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_180
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond360) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond360) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond360) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond360) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond360) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond360) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond360) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond360) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond360) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+-6
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function ZDP_SimpleDescMsg
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_181
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond361) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond361) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond361) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond361) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond361) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond361) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond361) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+-6
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function ZDP_EndDeviceBindReq
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_175, ??CrossCallReturnLabel_179
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond362) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond362) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond362) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+-6
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond363 Using cfiCommon0
          CFI (cfiCond363) Function ZDP_SimpleDescMsg
          CFI (cfiCond363) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_174, ??CrossCallReturnLabel_102
          CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond363) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond363) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond363) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond363) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond363) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond363) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond363) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond363) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond363) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond363) CFA_SP SP+-6
          CFI (cfiCond363) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function ZDP_MgmtLqiRsp
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_177, ??CrossCallReturnLabel_174, ??CrossCallReturnLabel_103
          CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond364) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond364) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond364) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond364) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond364) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond364) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond364) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond364) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond364) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond364) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond364) CFA_SP SP+-6
          CFI (cfiCond364) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker365 Using cfiCommon1
          CFI (cfiPicker365) NoFunction
          CFI (cfiPicker365) Picker
        MOVX    A,@DPTR
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        RET
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiPicker365

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond366 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_100
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function ZDP_MgmtLqiRsp
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_101
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond367) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond367) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond367) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond367) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond367) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond367) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond367) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond367) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+-2
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker368 Using cfiCommon1
          CFI (cfiPicker368) NoFunction
          CFI (cfiPicker368) Picker
        LCALL   ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_131:
        INC     DPTR
        RET
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiPicker368

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond369 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_130
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function ZDP_MgmtLqiRsp
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_100
          CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond370) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond370) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond370) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond370) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond370) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond370) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond370) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond370) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond370) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond370) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond370) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond370) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond370) CFA_SP SP+-4
          CFI (cfiCond370) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function ZDP_MgmtLqiRsp
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_131, ??CrossCallReturnLabel_101
          CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond371) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond371) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond371) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond371) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond371) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond371) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond371) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond371) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond371) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond371) CFA_SP SP+-4
          CFI (cfiCond371) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker372 Using cfiCommon1
          CFI (cfiPicker372) NoFunction
          CFI (cfiPicker372) Picker
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiPicker372

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond373 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_46
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function ZDP_MgmtLqiRsp
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond374) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond374) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond374) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond374) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond374) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond374) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond374) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond374) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+-2
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker375 Using cfiCommon1
          CFI (cfiPicker375) NoFunction
          CFI (cfiPicker375) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        ; Setup parameters for call to function fillAndSend
        MOV     ?V0,#0x31
        MOV     ?V1,#-0x80
        MOV     R0,#?V0
        RET
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiPicker375

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond376 Using cfiCommon0
          CFI Function ZDP_UserDescSet
          CFI Conditional ??CrossCallReturnLabel_42
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function ZDP_MgmtLqiRsp
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond377) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond377) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond377) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond377) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond377) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond377) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond377) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond377) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond377) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond377) CFA_SP SP+-2
          CFI (cfiCond377) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker378 Using cfiCommon1
          CFI (cfiPicker378) NoFunction
          CFI (cfiPicker378) Picker
        INC     DPTR
        MOVX    @DPTR,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiPicker378

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond379 Using cfiCommon0
          CFI Function ZDP_EndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_31
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function ZDP_MgmtLqiRsp
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond380) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond380) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond380) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond380) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond380) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond380) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+-2
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker381 Using cfiCommon1
          CFI (cfiPicker381) NoFunction
          CFI (cfiPicker381) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        LCALL   ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_216:
        RET
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiPicker381

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond382 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond383 Using cfiCommon0
          CFI (cfiCond383) Function ZDP_MatchDescReq
          CFI (cfiCond383) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_5
          CFI (cfiCond383) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond383) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond383) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond383) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond383) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond383) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond383) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond383) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond383) CFA_SP SP+-4
          CFI (cfiCond383) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond384) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond384) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond384) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond384) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond384) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond384) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond384) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+-2
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function ZDP_EndDeviceBindReq
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_31
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond385) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond385) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond385) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond385) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+-4
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond386 Using cfiCommon0
          CFI (cfiCond386) Function ZDP_MgmtLqiRsp
          CFI (cfiCond386) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_32
          CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond386) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond386) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond386) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond386) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond386) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond386) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond386) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond386) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond386) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond386) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond386) CFA_SP SP+-4
          CFI (cfiCond386) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker387 Using cfiCommon1
          CFI (cfiPicker387) NoFunction
          CFI (cfiPicker387) Picker
        INC     DPTR
          CFI EndBlock cfiCond382
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiCond386
          CFI EndBlock cfiPicker387
        REQUIRE ??Subroutine116_0
        ; // Fall through to label ??Subroutine116_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine116_0:
          CFI Block cfiCond388 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function ZDP_MatchDescReq
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_213, ??CrossCallReturnLabel_5
          CFI (cfiCond389) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond389) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond389) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond389) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond389) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond389) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond389) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond389) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond389) CFA_SP SP+-4
          CFI (cfiCond389) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond390 Using cfiCommon0
          CFI (cfiCond390) Function ZDP_MgmtLqiRsp
          CFI (cfiCond390) Conditional ??CrossCallReturnLabel_212
          CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond390) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond390) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond390) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond390) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond390) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond390) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond390) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond390) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond390) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond390) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond390) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond390) CFA_SP SP+-2
          CFI (cfiCond390) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond391 Using cfiCommon0
          CFI (cfiCond391) Function ZDP_MatchDescReq
          CFI (cfiCond391) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_4
          CFI (cfiCond391) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond391) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond391) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond391) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond391) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond391) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond391) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond391) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond391) CFA_SP SP+-4
          CFI (cfiCond391) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond392 Using cfiCommon0
          CFI (cfiCond392) Function ZDP_MatchDescReq
          CFI (cfiCond392) Conditional ??CrossCallReturnLabel_215, ??CrossCallReturnLabel_5
          CFI (cfiCond392) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond392) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond392) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond392) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond392) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond392) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond392) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond392) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond392) CFA_SP SP+-4
          CFI (cfiCond392) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond393 Using cfiCommon0
          CFI (cfiCond393) Function ZDP_MgmtNwkDiscRsp
          CFI (cfiCond393) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond393) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond393) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond393) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond393) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond393) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond393) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond393) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond393) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond393) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond393) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond393) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond393) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond393) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond393) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond393) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond393) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond393) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond393) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond393) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond393) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond393) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond393) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond393) CFA_SP SP+-2
          CFI (cfiCond393) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond394 Using cfiCommon0
          CFI (cfiCond394) Function ZDP_EndDeviceBindReq
          CFI (cfiCond394) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_31
          CFI (cfiCond394) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond394) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond394) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond394) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond394) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond394) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond394) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond394) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond394) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond394) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond394) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond394) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond394) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond394) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond394) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond394) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond394) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond394) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond394) CFA_SP SP+-4
          CFI (cfiCond394) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond395 Using cfiCommon0
          CFI (cfiCond395) Function ZDP_MgmtLqiRsp
          CFI (cfiCond395) Conditional ??CrossCallReturnLabel_216, ??CrossCallReturnLabel_32
          CFI (cfiCond395) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond395) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond395) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond395) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond395) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond395) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond395) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond395) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond395) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond395) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond395) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond395) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond395) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond395) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond395) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond395) CFA_SP SP+-4
          CFI (cfiCond395) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker396 Using cfiCommon1
          CFI (cfiPicker396) NoFunction
          CFI (cfiPicker396) Picker
        MOVX    A,@DPTR
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiCond390
          CFI EndBlock cfiCond391
          CFI EndBlock cfiCond392
          CFI EndBlock cfiCond393
          CFI EndBlock cfiCond394
          CFI EndBlock cfiCond395
          CFI EndBlock cfiPicker396

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond397 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_28
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function ZDP_MgmtLqiRsp
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond398) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond398) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond398) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond398) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond398) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond398) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond398) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+-2
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function ZDP_MgmtBindRsp
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_30
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond399) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond399) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond399) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond399) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond399) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond399) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond399) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond399) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond399) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+-2
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker400 Using cfiCommon1
          CFI (cfiPicker400) NoFunction
          CFI (cfiPicker400) Picker
        MOV     DPTR,#ZDP_TmpBuf
        MOV     A,#(ZDP_Buf + 1) & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((ZDP_Buf + 1) >> 8) & 0xff
        MOVX    @DPTR,A
        MOV     A,R6
        MOV     R1,A
        RET
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiPicker400
// 1657 
// 1658 /*********************************************************************
// 1659  * @fn          ZDP_MgmtRtgRsp
// 1660  *
// 1661  * @brief       This builds and send a Mgmt_Rtg_rsp message. This
// 1662  *              function sends a unicast message.
// 1663  *
// 1664  * @param       dstAddr - destination address of the message
// 1665  * @param       Status - message status (ZDP_SUCCESS or other)
// 1666  * @param       RoutingTableEntries - Total number of entries
// 1667  * @param       StartIndex - Starting index within the reporting list
// 1668  * @param       RoutingTableListCount - number of entries included
// 1669  *                                      in this message
// 1670  * @param       RoutingTableList - List of Routing Table entries
// 1671  * @param       SecurityEnable - true to enable security for this message
// 1672  *
// 1673  * @return      ZStatus_t
// 1674  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1675 ZStatus_t ZDP_MgmtRtgRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtRtgRsp:
          CFI Block cfiBlock401 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
        CODE
// 1676                             byte Status,
// 1677                             byte RoutingTableEntries,
// 1678                             byte StartIndex,
// 1679                             byte RoutingListCount,
// 1680                             rtgItem_t *RoutingTableList,
// 1681                             byte SecurityEnable )
// 1682 {
        FUNCALL ZDP_MgmtRtgRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtRtgRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtRtgRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V11
        MOV     A,#-0x14
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 20)
        ; Saved register size: 20
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     ?V1,R4
        MOV     ?V0,R5
        MOV     A,#0x16
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V5,A
// 1683   uint8 *buf;
// 1684   uint8 *pBuf;
// 1685   // Status + RoutingTableEntries + StartIndex + RoutingListCount.
// 1686   byte len = 1 + 1 + 1 + 1;
// 1687   byte x;
// 1688 
// 1689   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1690 
// 1691   // Add an array for Routing List data
// 1692   len += (RoutingListCount * ZDP_ROUTINGENTRY_SIZE);
        MOV     B,#0x5
        MUL     AB
        ADD     A,#0x4
        MOV     ?V4,A
// 1693 
// 1694   buf = osal_mem_alloc( (short)(len+1) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_110:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V6,R2
        MOV     ?V7,R3
        MOV     R6,?V6
        MOV     R7,?V7
// 1695   if ( buf == NULL )
        MOV     A,R6
        ORL     A,R7
        JNZ     ??ZDP_MgmtRtgRsp_0
// 1696   {
// 1697     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??ZDP_MgmtRtgRsp_1 & 0xFFFF
// 1698   }
// 1699 
// 1700   pBuf = buf+1;
??ZDP_MgmtRtgRsp_0:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOV     R0,DPL
        MOV     R1,DPH
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
// 1701 
// 1702   *pBuf++ = Status;
        MOV     A,?V1
        MOVX    @DPTR,A
// 1703   *pBuf++ = RoutingTableEntries;
        INC     DPTR
        MOV     A,?V0
        MOVX    @DPTR,A
// 1704   *pBuf++ = StartIndex;
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine39 & 0xFFFF
// 1705   *pBuf++ = RoutingListCount;
??CrossCallReturnLabel_52:
        MOV     A,?V5
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_223:
        JNC     ??ZDP_MgmtRtgRsp_2
        INC     R3
// 1706 
// 1707   for ( x = 0; x < RoutingListCount; x++ )
??ZDP_MgmtRtgRsp_2:
        MOV     ?V6,#0x0
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine60 & 0xFFFF
??CrossCallReturnLabel_96:
        LJMP    ??ZDP_MgmtRtgRsp_3 & 0xFFFF
// 1708   {
// 1709     *pBuf++ = LO_UINT16( RoutingTableList->dstAddress );  // Destination Address
??ZDP_MgmtRtgRsp_4:
        LCALL   ?Subroutine14 & 0xFFFF
// 1710     *pBuf++ = HI_UINT16( RoutingTableList->dstAddress );
// 1711 
// 1712     *pBuf = (RoutingTableList->status & 0x07);
??CrossCallReturnLabel_8:
        MOV     ?V8,A
        CLR     A
        ADDC    A,R3
        MOV     ?V9,A
        MOV     DPL,R4
        MOV     DPH,R5
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        ANL     A,#0x7
        MOV     DPL,?V8
        MOV     DPH,?V9
        MOVX    @DPTR,A
// 1713     if ( RoutingTableList->options & (ZP_MTO_ROUTE_RC | ZP_MTO_ROUTE_NRC) )
        MOV     A,R4
        ADD     A,#0x6
        MOV     DPL,A
        CLR     A
        ADDC    A,R5
        MOV     DPH,A
        MOVX    A,@DPTR
        ANL     A,#0x18
        JZ      ??ZDP_MgmtRtgRsp_5
// 1714     {
// 1715       uint8 options = 0;
// 1716       options |= ZDO_MGMT_RTG_ENTRY_MANYTOONE;
        MOV     ?V7,#0x2
// 1717 
// 1718       if ( RoutingTableList->options & ZP_RTG_RECORD )
        MOVX    A,@DPTR
        MOV     C,0xE0 /* A   */.2
        JNC     ??ZDP_MgmtRtgRsp_6
// 1719       {
// 1720         options |= ZDO_MGMT_RTG_ENTRY_ROUTE_RECORD_REQUIRED;
        MOV     ?V7,#0x6
// 1721       }
// 1722 
// 1723       if ( RoutingTableList->options & ZP_MTO_ROUTE_NRC )
??ZDP_MgmtRtgRsp_6:
        MOV     C,0xE0 /* A   */.4
        JNC     ??ZDP_MgmtRtgRsp_7
// 1724       {
// 1725         options |= ZDO_MGMT_RTG_ENTRY_MEMORY_CONSTRAINED;
        SETB    C
        MOV     A,?V7
        SETB    0xE0 /* A   */.0
        MOV     ?V7,A
// 1726       }
// 1727 
// 1728       *pBuf |= (options << 3);
??ZDP_MgmtRtgRsp_7:
        MOV     A,?V7
        RLC     A
        RLC     A
        RLC     A
        ANL     A,#0xf8
        MOV     ?V7,A
        MOV     DPL,?V8
        MOV     DPH,?V9
        MOVX    A,@DPTR
        ORL     A,?V7
        MOVX    @DPTR,A
// 1729     }
// 1730     pBuf++;
// 1731 
// 1732     *pBuf++ = LO_UINT16( RoutingTableList->nextHopAddress );  // Next hop
??ZDP_MgmtRtgRsp_5:
        MOV     A,R4
        ADD     A,#0x2
        MOV     ?V8,A
        CLR     A
        ADDC    A,R5
        MOV     ?V9,A
        MOV     DPL,?V8
        MOV     DPH,A
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_106:
        MOVX    @DPTR,A
// 1733     *pBuf++ = HI_UINT16( RoutingTableList->nextHopAddress );
        MOV     DPL,?V8
        MOV     DPH,?V9
        INC     DPTR
        LCALL   ?Subroutine65 & 0xFFFF
??CrossCallReturnLabel_107:
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x5
        MOV     R2,A
        JNC     ??ZDP_MgmtRtgRsp_8
        INC     R3
// 1734     RoutingTableList++;    // Move to next list entry
??ZDP_MgmtRtgRsp_8:
        MOV     A,R4
        ADD     A,#0x7
        MOV     R4,A
        JNC     ??ZDP_MgmtRtgRsp_9
        INC     R5
// 1735   }
??ZDP_MgmtRtgRsp_9:
        INC     ?V6
??ZDP_MgmtRtgRsp_3:
        MOV     A,?V6
        CLR     C
        SUBB    A,?V5
        JNC     $+5
        LJMP    ??ZDP_MgmtRtgRsp_4 & 0xFFFF
// 1736 
// 1737   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Rtg_rsp, len, buf );
        MOV     DPTR,#ZDP_TmpBuf
        LCALL   ?Subroutine30 & 0xFFFF
??CrossCallReturnLabel_36:
        ; Setup parameters for call to function fillAndSend
        MOV     ?V6,#0x32
        MOV     ?V7,#-0x80
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     R1,?V4
        MOV     R4,?V2
        MOV     R5,?V3
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     A,R1
        MOV     ?V2,A
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV     DPTR,#ZDP_TmpBuf
        MOV     A,#(ZDP_Buf + 1) & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((ZDP_Buf + 1) >> 8) & 0xff
        MOVX    @DPTR,A
        MOV     R1,?V2
??ZDP_MgmtRtgRsp_1:
        MOV     A,#0x1
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
        LJMP    ?Subroutine5 & 0xFFFF
// 1738 }
          CFI EndBlock cfiBlock401

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond402 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_108
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function ZDP_MgmtLqiRsp
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond403) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond403) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond403) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond403) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond403) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond403) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond403) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond403) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond403) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond403) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond403) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond403) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond403) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond403) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond403) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond403) CFA_SP SP+-2
          CFI (cfiCond403) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond404 Using cfiCommon0
          CFI (cfiCond404) Function ZDP_MgmtRtgRsp
          CFI (cfiCond404) Conditional ??CrossCallReturnLabel_110
          CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond404) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond404) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond404) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond404) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond404) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond404) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond404) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond404) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond404) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond404) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond404) CFA_SP SP+-2
          CFI (cfiCond404) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond405 Using cfiCommon0
          CFI (cfiCond405) Function ZDP_MgmtBindRsp
          CFI (cfiCond405) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond405) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond405) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond405) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond405) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond405) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond405) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond405) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond405) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond405) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond405) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond405) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond405) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond405) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond405) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond405) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond405) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond405) CFA_SP SP+-2
          CFI (cfiCond405) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond406 Using cfiCommon0
          CFI (cfiCond406) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond406) Conditional ??CrossCallReturnLabel_112
          CFI (cfiCond406) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond406) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond406) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond406) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond406) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond406) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond406) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond406) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond406) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond406) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond406) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond406) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond406) CFA_SP SP+-2
          CFI (cfiCond406) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker407 Using cfiCommon1
          CFI (cfiPicker407) NoFunction
          CFI (cfiPicker407) Picker
        ADD     A,#0x1
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        RET
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiCond404
          CFI EndBlock cfiCond405
          CFI EndBlock cfiCond406
          CFI EndBlock cfiPicker407

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond408 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_106
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond409 Using cfiCommon0
          CFI (cfiCond409) Function ZDP_MgmtRtgRsp
          CFI (cfiCond409) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond409) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond409) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond409) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond409) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond409) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond409) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond409) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond409) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond409) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond409) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond409) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond409) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond409) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond409) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond409) CFA_SP SP+-2
          CFI (cfiCond409) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiPicker410 Using cfiCommon1
          CFI (cfiPicker410) NoFunction
          CFI (cfiPicker410) Picker
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_135:
        RET
          CFI EndBlock cfiCond408
          CFI EndBlock cfiCond409
          CFI EndBlock cfiPicker410

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond411 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_106
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond412 Using cfiCommon0
          CFI (cfiCond412) Function ZDP_MgmtRtgRsp
          CFI (cfiCond412) Conditional ??CrossCallReturnLabel_135, ??CrossCallReturnLabel_107
          CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond412) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond412) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond412) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond412) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond412) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond412) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond412) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond412) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond412) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond412) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond412) CFA_SP SP+-4
          CFI (cfiCond412) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function ZDP_BindUnbindReq
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_225
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond413) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond413) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond413) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond413) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond413) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond413) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+-4
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function ZDP_MgmtBindRsp
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_134, ??CrossCallReturnLabel_226
          CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond414) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond414) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond414) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond414) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond414) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond414) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond414) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond414) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond414) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond414) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond414) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond414) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond414) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond414) CFA_SP SP+-4
          CFI (cfiCond414) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker415 Using cfiCommon1
          CFI (cfiPicker415) NoFunction
          CFI (cfiPicker415) Picker
        MOVX    A,@DPTR
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond411
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiPicker415
// 1739 
// 1740 /*********************************************************************
// 1741  * @fn          ZDP_MgmtBindRsp
// 1742  *
// 1743  * @brief       This builds and send a Mgmt_Bind_rsp message. This
// 1744  *              function sends a unicast message.
// 1745  *
// 1746  * @param       dstAddr - destination address of the message
// 1747  * @param       Status - message status (ZDP_SUCCESS or other)
// 1748  * @param       BindingTableEntries - Total number of entries
// 1749  * @param       StartIndex - Starting index within the reporting list
// 1750  * @param       BindingTableListCount - number of entries included
// 1751  *                                 in this message
// 1752  * @param       BindingTableList - List of Binding Table entries
// 1753  * @param       SecurityEnable - Security Options
// 1754  *
// 1755  * @return      ZStatus_t
// 1756  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1757 ZStatus_t ZDP_MgmtBindRsp( byte TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtBindRsp:
          CFI Block cfiBlock416 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
        CODE
// 1758                             byte Status,
// 1759                             byte BindingTableEntries,
// 1760                             byte StartIndex,
// 1761                             byte BindingTableListCount,
// 1762                             apsBindingItem_t *BindingTableList,
// 1763                             byte SecurityEnable )
// 1764 {
        FUNCALL ZDP_MgmtBindRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtBindRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        REQUIRE ?V10
        REQUIRE ?V12
        REQUIRE ?V13
        MOV     A,#-0x16
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 22)
        ; Saved register size: 22
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V12,R2
        MOV     ?V13,R3
        MOV     ?V10,R4
        MOV     ?V5,R5
        MOV     A,#0x18
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     ?V4,A
// 1765   uint8 *buf;
// 1766   uint8 *pBuf;
// 1767   uint8 maxLen; // maxLen is the maximum packet length to allocate enough memory space
// 1768   uint8 len;    // Actual length varies due to different addrMode
// 1769   uint8 x;
// 1770   byte extZdpBindEntrySize = ZDP_BINDINGENTRY_SIZE + 1 + 1; // One more byte for cluserID and DstAddrMode
// 1771   byte shortZdpBindEntrySize = ZDP_BINDINGENTRY_SIZE + 1 + 1 + 2 - 8 - 1; // clusterID + DstAddrMode + shortAddr - ExtAddr - DstEndpoint
// 1772 
// 1773   (void)SecurityEnable;  // Intentionally unreferenced parameter
// 1774 
// 1775   // Status + BindingTableEntries + StartIndex + BindingTableListCount.
// 1776   maxLen = 1 + 1 + 1 + 1;
// 1777   maxLen += (BindingTableListCount * extZdpBindEntrySize );  //max length
// 1778   buf = osal_mem_alloc( maxLen + 1 );  // +1 for transaction ID
        ; Setup parameters for call to function osal_mem_alloc
        MOV     B,#0x15
        MUL     AB
        ADD     A,#0x4
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_111:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
// 1779 
// 1780   if ( buf == NULL )
        MOV     A,R2
        ORL     A,?V3
        JNZ     ??ZDP_MgmtBindRsp_0
// 1781   {
// 1782     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??CrossCallReturnLabel_30 & 0xFFFF
// 1783   }
// 1784 
// 1785   pBuf = buf+1;
??ZDP_MgmtBindRsp_0:
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        MOV     ?V6,DPL
        MOV     ?V7,DPH
        MOV     R2,?V6
        MOV     R3,?V7
// 1786 
// 1787   *pBuf++ = Status;
        MOV     A,?V10
        MOVX    @DPTR,A
// 1788   *pBuf++ = BindingTableEntries;
        INC     DPTR
        MOV     A,?V5
        MOVX    @DPTR,A
// 1789   *pBuf++ = StartIndex;
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine39 & 0xFFFF
// 1790   *pBuf++ = BindingTableListCount;
??CrossCallReturnLabel_53:
        MOV     A,?V4
        LCALL   ??Subroutine118_0 & 0xFFFF
??CrossCallReturnLabel_224:
        JNC     ??ZDP_MgmtBindRsp_1
        INC     R3
// 1791 
// 1792   // Initial length = Status + BindingTableEntries + StartIndex + BindingTableListCount.
// 1793   // length += ZDP_BINDINGENTRY_SIZE   -- Version 1.0
// 1794   //           extZdpBindEntrySize     -- Version 1.1 extended address mode
// 1795   //           shortZdpBindEntrySize   -- Version 1.1 group address mode
// 1796 
// 1797   len = 1 + 1 + 1 + 1;
??ZDP_MgmtBindRsp_1:
        MOV     ?V0,#0x4
// 1798   for ( x = 0; x < BindingTableListCount; x++ )
        MOV     ?V1,#0x0
        MOV     A,#0x19
        LCALL   ?XSTACK_DISP0_8
        LCALL   ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_219:
        SJMP    ??ZDP_MgmtBindRsp_2
// 1799   {
// 1800     pBuf = osal_cpyExtAddr( pBuf, BindingTableList->srcAddr );
// 1801     *pBuf++ = BindingTableList->srcEP;
// 1802 
// 1803     // Cluster ID
// 1804     *pBuf++ = LO_UINT16( BindingTableList->clusterID );
// 1805     *pBuf++ = HI_UINT16( BindingTableList->clusterID );
// 1806 
// 1807     *pBuf++ = BindingTableList->dstAddr.addrMode;
// 1808     if ( BindingTableList->dstAddr.addrMode == Addr64Bit )
// 1809     {
// 1810       len += extZdpBindEntrySize;
// 1811       pBuf = osal_cpyExtAddr( pBuf, BindingTableList->dstAddr.addr.extAddr );
// 1812       *pBuf++ = BindingTableList->dstEP;
// 1813     }
// 1814     else
// 1815     {
// 1816       len += shortZdpBindEntrySize;
??ZDP_MgmtBindRsp_3:
        MOV     A,#0xe
        ADD     A,?V0
        MOV     ?V0,A
// 1817       *pBuf++ = LO_UINT16( BindingTableList->dstAddr.addr.shortAddr );
        LCALL   ?Subroutine14 & 0xFFFF
// 1818       *pBuf++ = HI_UINT16( BindingTableList->dstAddr.addr.shortAddr );
// 1819     }
??CrossCallReturnLabel_9:
        MOV     R2,A
        JNC     ??ZDP_MgmtBindRsp_4
        INC     R3
// 1820     BindingTableList++;    // Move to next list entry
??ZDP_MgmtBindRsp_4:
        MOV     A,R6
        ADD     A,#0x15
        MOV     R6,A
        JNC     ??ZDP_MgmtBindRsp_5
        INC     R7
??ZDP_MgmtBindRsp_5:
        INC     ?V1
??ZDP_MgmtBindRsp_2:
        MOV     A,?V1
        CLR     C
        SUBB    A,?V4
        JNC     ??ZDP_MgmtBindRsp_6
        ; Setup parameters for call to function sAddrExtCpy
        MOV     A,R6
        MOV     R4,A
        MOV     A,R7
        MOV     R5,A
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_191:
        LCALL   ?Subroutine38 & 0xFFFF
??CrossCallReturnLabel_51:
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine111_0 & 0xFFFF
??CrossCallReturnLabel_188:
        LCALL   ??Subroutine119_0 & 0xFFFF
??CrossCallReturnLabel_229:
        LCALL   ??Subroutine111_0 & 0xFFFF
??CrossCallReturnLabel_189:
        INC     DPTR
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x13
        MOV     R0,A
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ?Subroutine31 & 0xFFFF
??CrossCallReturnLabel_226:
        JNC     ??ZDP_MgmtBindRsp_7
        INC     R3
??ZDP_MgmtBindRsp_7:
        MOV     A,R6
        ADD     A,#0xb
        MOV     R4,A
        CLR     A
        ADDC    A,R7
        MOV     R5,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        XRL     A,#0x3
        JNZ     ??ZDP_MgmtBindRsp_3
        MOV     A,#0x15
        ADD     A,?V0
        MOV     ?V0,A
        ; Setup parameters for call to function sAddrExtCpy
        LCALL   `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        LCALL   ?Subroutine69 & 0xFFFF
// 1821   }
??CrossCallReturnLabel_116:
        MOVX    A,@DPTR
        LCALL   ?Subroutine15 & 0xFFFF
??CrossCallReturnLabel_155:
        SJMP    ??ZDP_MgmtBindRsp_4
// 1822 
// 1823   FillAndSendBuffer( &TransSeq, dstAddr, Mgmt_Bind_rsp, len, buf );
??ZDP_MgmtBindRsp_6:
        MOV     DPTR,#ZDP_TmpBuf
        MOV     A,?V6
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V7
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     ?V6,#0x33
        MOV     ?V7,#-0x80
        MOV     R0,#?V6
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 25)
        MOV     R1,?V0
        MOV     R4,?V12
        MOV     R5,?V13
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 23)
        MOV     A,R1
        MOV     R6,A
        ; Setup parameters for call to function osal_mem_free
        MOV     R2,?V2
        MOV     R3,?V3
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        LCALL   ?Subroutine25 & 0xFFFF
??CrossCallReturnLabel_30:
        LJMP    ?Subroutine4 & 0xFFFF
// 1824 }
          CFI EndBlock cfiBlock416

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond417 Using cfiCommon0
          CFI Function ZDP_MgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_115
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond418 Using cfiCommon0
          CFI (cfiCond418) Function ZDP_MgmtBindRsp
          CFI (cfiCond418) Conditional ??CrossCallReturnLabel_116
          CFI (cfiCond418) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond418) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond418) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond418) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond418) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond418) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond418) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond418) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond418) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond418) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond418) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond418) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond418) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond418) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond418) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond418) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond418) CFA_SP SP+-2
          CFI (cfiCond418) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker419 Using cfiCommon1
          CFI (cfiPicker419) NoFunction
          CFI (cfiPicker419) Picker
        MOV     A,R6
        ADD     A,#0x14
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        RET
          CFI EndBlock cfiCond417
          CFI EndBlock cfiCond418
          CFI EndBlock cfiPicker419

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond420 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_221
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function zdpProcessAddrReq
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_222
          CFI (cfiCond421) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond421) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond421) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond421) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond421) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond421) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond421) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond421) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond421) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond421) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond421) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond421) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond421) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond421) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond421) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond421) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond421) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond421) CFA_SP SP+-2
          CFI (cfiCond421) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker422 Using cfiCommon1
          CFI (cfiPicker422) NoFunction
          CFI (cfiPicker422) Picker
        MOV     DPTR,#ZDAppNwkAddr
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiPicker422
        REQUIRE ??Subroutine117_0
        ; // Fall through to label ??Subroutine117_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine117_0:
          CFI Block cfiCond423 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_217
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function ZDP_MgmtLqiRsp
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_218
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond424) V2 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond424) V3 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond424) V4 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond424) V5 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond424) V6 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond424) V7 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond424) V8 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond424) V9 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond424) V10 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) V11 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V12 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+-2
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond425 Using cfiCommon0
          CFI (cfiCond425) Function ZDP_MgmtBindRsp
          CFI (cfiCond425) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond425) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond425) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond425) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond425) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond425) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond425) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond425) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond425) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond425) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond425) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond425) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond425) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond425) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond425) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond425) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond425) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond425) CFA_SP SP+-2
          CFI (cfiCond425) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond426) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond426) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond426) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond426) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond426) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond426) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond426) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond426) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond426) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond426) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond426) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond426) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond426) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond426) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond426) CFA_SP SP+-2
          CFI (cfiCond426) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function zdpProcessAddrReq
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_221
          CFI (cfiCond427) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond427) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond427) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond427) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond427) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond427) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond427) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond427) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond427) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond427) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond427) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond427) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond427) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond427) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond427) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond427) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond427) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond427) CFA_SP SP+-2
          CFI (cfiCond427) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function zdpProcessAddrReq
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_222
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond428) V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond428) V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond428) V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond428) V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond428) V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+-2
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiPicker429 Using cfiCommon1
          CFI (cfiPicker429) NoFunction
          CFI (cfiPicker429) Picker
        MOVX    A,@DPTR
        MOV     R6,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R7,A
        RET
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiPicker429

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond430 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_52
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function ZDP_MgmtBindRsp
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond431) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond431) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond431) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond431) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond431) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond431) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond431) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond431) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond431) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-2
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker432 Using cfiCommon1
          CFI (cfiPicker432) NoFunction
          CFI (cfiPicker432) Picker
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_194:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_144:
        RET
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiPicker432

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond433 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_52
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function ZDP_MgmtBindRsp
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_144, ??CrossCallReturnLabel_53
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond434) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond434) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond434) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond434) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond434) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond434) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond434) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond434) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond434) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+-4
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond435 Using cfiCommon0
          CFI (cfiCond435) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond435) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_13
          CFI (cfiCond435) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond435) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond435) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond435) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond435) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond435) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond435) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond435) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond435) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond435) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond435) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond435) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond435) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond435) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond435) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond435) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond435) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond435) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond435) CFA_SP SP+-4
          CFI (cfiCond435) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond436 Using cfiCommon0
          CFI (cfiCond436) Function ZDP_IncomingData
          CFI (cfiCond436) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_14
          CFI (cfiCond436) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond436) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond436) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond436) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond436) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond436) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond436) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond436) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond436) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond436) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond436) CFA_SP SP+-4
          CFI (cfiCond436) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond437 Using cfiCommon0
          CFI (cfiCond437) Function ZDP_IncomingData
          CFI (cfiCond437) Conditional ??CrossCallReturnLabel_145, ??CrossCallReturnLabel_15
          CFI (cfiCond437) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond437) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond437) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond437) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond437) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond437) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond437) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond437) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond437) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond437) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond437) CFA_SP SP+-4
          CFI (cfiCond437) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker438 Using cfiCommon1
          CFI (cfiPicker438) NoFunction
          CFI (cfiPicker438) Picker
        MOVX    @DPTR,A
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiCond435
          CFI EndBlock cfiCond436
          CFI EndBlock cfiCond437
          CFI EndBlock cfiPicker438

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond439 Using cfiCommon0
          CFI Function ZDP_MgmtNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond440 Using cfiCommon0
          CFI (cfiCond440) Function ZDP_MgmtBindRsp
          CFI (cfiCond440) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond440) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond440) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond440) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond440) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond440) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond440) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond440) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond440) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond440) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond440) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond440) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond440) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond440) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond440) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond440) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond440) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond440) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond440) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond440) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond440) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond440) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond440) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond440) CFA_SP SP+-2
          CFI (cfiCond440) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker441 Using cfiCommon1
          CFI (cfiPicker441) NoFunction
          CFI (cfiPicker441) Picker
        MOVX    @DPTR,A
        MOV     A,R6
        ADD     A,#0x9
        MOV     R0,A
        CLR     A
        ADDC    A,R7
        MOV     R1,A
        RET
          CFI EndBlock cfiCond439
          CFI EndBlock cfiCond440
          CFI EndBlock cfiPicker441

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond442 Using cfiCommon0
          CFI Function ZDP_BindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_225
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond443 Using cfiCommon0
          CFI (cfiCond443) Function ZDP_MgmtBindRsp
          CFI (cfiCond443) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond443) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond443) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond443) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond443) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond443) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond443) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond443) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond443) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond443) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond443) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond443) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond443) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond443) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond443) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond443) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond443) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond443) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond443) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond443) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond443) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond443) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond443) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond443) CFA_SP SP+-2
          CFI (cfiCond443) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker444 Using cfiCommon1
          CFI (cfiPicker444) NoFunction
          CFI (cfiPicker444) Picker
        LCALL   ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_134:
          CFI EndBlock cfiCond442
          CFI EndBlock cfiCond443
          CFI EndBlock cfiPicker444
        REQUIRE ??Subroutine118_0
        ; // Fall through to label ??Subroutine118_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine118_0:
          CFI Block cfiCond445 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_223
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond446 Using cfiCommon0
          CFI (cfiCond446) Function ZDP_MgmtBindRsp
          CFI (cfiCond446) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond446) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond446) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond446) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond446) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond446) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond446) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond446) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond446) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond446) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond446) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond446) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond446) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond446) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond446) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond446) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond446) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond446) CFA_SP SP+-2
          CFI (cfiCond446) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function ZDP_BindUnbindReq
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond447) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond447) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond447) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+-2
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond448 Using cfiCommon0
          CFI (cfiCond448) Function ZDP_MgmtBindRsp
          CFI (cfiCond448) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond448) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond448) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond448) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond448) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond448) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond448) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond448) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond448) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond448) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond448) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond448) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond448) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond448) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond448) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond448) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond448) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond448) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond448) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond448) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond448) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond448) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond448) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond448) CFA_SP SP+-2
          CFI (cfiCond448) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker449 Using cfiCommon1
          CFI (cfiPicker449) NoFunction
          CFI (cfiPicker449) Picker
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x4
        MOV     R2,A
        RET
          CFI EndBlock cfiCond445
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiCond448
          CFI EndBlock cfiPicker449

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond450 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_227
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond451 Using cfiCommon0
          CFI (cfiCond451) Function ZDP_NodeDescMsg
          CFI (cfiCond451) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond451) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond451) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond451) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond451) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond451) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond451) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond451) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond451) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond451) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond451) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond451) CFA_SP SP+-2
          CFI (cfiCond451) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker452 Using cfiCommon1
          CFI (cfiPicker452) NoFunction
          CFI (cfiPicker452) Picker
        INC     DPTR
        INC     DPTR
          CFI EndBlock cfiCond450
          CFI EndBlock cfiCond451
          CFI EndBlock cfiPicker452
        REQUIRE ??Subroutine119_0
        ; // Fall through to label ??Subroutine119_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine119_0:
          CFI Block cfiCond453 Using cfiCommon0
          CFI Function ZDP_MgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_229
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function ZDP_NodeDescMsg
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond454) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond454) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond454) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond454) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond454) CFA_SP SP+-2
          CFI (cfiCond454) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function ZDP_NodeDescMsg
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond455) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond455) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond455) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond455) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond455) CFA_SP SP+-2
          CFI (cfiCond455) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker456 Using cfiCommon1
          CFI (cfiPicker456) NoFunction
          CFI (cfiPicker456) Picker
        INC     DPTR
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiPicker456
        REQUIRE ??Subroutine120_0
        ; // Fall through to label ??Subroutine120_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine120_0:
          CFI Block cfiCond457 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_230
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond458 Using cfiCommon0
          CFI (cfiCond458) Function ZDP_MgmtBindRsp
          CFI (cfiCond458) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond458) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond458) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond458) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond458) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond458) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond458) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond458) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond458) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond458) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond458) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond458) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond458) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond458) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond458) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond458) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond458) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond458) CFA_SP SP+-2
          CFI (cfiCond458) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond459 Using cfiCommon0
          CFI (cfiCond459) Function ZDP_NodeDescMsg
          CFI (cfiCond459) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond459) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond459) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond459) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond459) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond459) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond459) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond459) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond459) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond459) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond459) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond459) CFA_SP SP+-2
          CFI (cfiCond459) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function ZDP_NodeDescMsg
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+-2
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker461 Using cfiCommon1
          CFI (cfiPicker461) NoFunction
          CFI (cfiPicker461) Picker
        LCALL   ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_234:
        RET
          CFI EndBlock cfiCond457
          CFI EndBlock cfiCond458
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiPicker461

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond462 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_156
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function ZDP_NodeDescMsg
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_157
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+-4
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond464 Using cfiCommon0
          CFI (cfiCond464) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond464) Conditional ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_158
          CFI (cfiCond464) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond464) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond464) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond464) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond464) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond464) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond464) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond464) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond464) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond464) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond464) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond464) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond464) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond464) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond464) CFA_SP SP+-4
          CFI (cfiCond464) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function ZDP_SimpleDescMsg
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_2
          CFI (cfiCond465) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond465) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond465) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond465) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond465) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond465) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond465) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond465) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond465) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond465) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond465) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond465) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond465) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond465) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond465) CFA_SP SP+-4
          CFI (cfiCond465) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function ZDP_SimpleDescMsg
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_3
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond466) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond466) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond466) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond466) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond466) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond466) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond466) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond466) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+-4
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function ZDP_UserDescSet
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_0
          CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond467) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond467) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond467) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond467) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond467) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond467) CFA_SP SP+-4
          CFI (cfiCond467) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function ZDP_UserDescRsp
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_1
          CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond468) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond468) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond468) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond468) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond468) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond468) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond468) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond468) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond468) CFA_SP SP+-4
          CFI (cfiCond468) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function ZDP_NodeDescMsg
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_227
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+-4
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond470 Using cfiCommon0
          CFI (cfiCond470) Function ZDP_NodeDescMsg
          CFI (cfiCond470) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_228
          CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond470) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond470) CFA_SP SP+-4
          CFI (cfiCond470) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond471 Using cfiCommon0
          CFI (cfiCond471) Function ZDP_MgmtBindRsp
          CFI (cfiCond471) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_229
          CFI (cfiCond471) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond471) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond471) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond471) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond471) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond471) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond471) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond471) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond471) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond471) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond471) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond471) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond471) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond471) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond471) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond471) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond471) CFA_SP SP+-4
          CFI (cfiCond471) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function ZDP_SendData
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_230
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+-4
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker473 Using cfiCommon1
          CFI (cfiPicker473) NoFunction
          CFI (cfiPicker473) Picker
        LCALL   ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_237:
        INC     DPTR
        RET
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiCond470
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiPicker473

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond474 Using cfiCommon0
          CFI Function ZDP_NodeDescMsg
          CFI Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_33
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond475 Using cfiCommon0
          CFI (cfiCond475) Function ZDP_NodeDescMsg
          CFI (cfiCond475) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_138, ??CrossCallReturnLabel_34
          CFI (cfiCond475) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond475) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond475) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond475) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond475) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond475) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond475) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond475) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond475) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond475) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond475) CFA_SP SP+-6
          CFI (cfiCond475) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function ZDP_NodeDescMsg
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_26
          CFI (cfiCond476) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond476) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond476) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond476) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond476) CFA_SP SP+-6
          CFI (cfiCond476) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function ZDP_NodeDescMsg
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_235, ??CrossCallReturnLabel_139, ??CrossCallReturnLabel_27
          CFI (cfiCond477) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond477) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond477) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond477) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond477) CFA_SP SP+-6
          CFI (cfiCond477) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function ZDP_PowerDescMsg
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_159
          CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond478) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond478) CFA_SP SP+-4
          CFI (cfiCond478) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond479 Using cfiCommon0
          CFI (cfiCond479) Function ZDP_UserDescRsp
          CFI (cfiCond479) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_160
          CFI (cfiCond479) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond479) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond479) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond479) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond479) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond479) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond479) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond479) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond479) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond479) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond479) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond479) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond479) CFA_SP SP+-4
          CFI (cfiCond479) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function ZDP_IncomingData
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_236, ??CrossCallReturnLabel_161
          CFI (cfiCond480) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond480) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond480) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond480) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond480) CFA_SP SP+-4
          CFI (cfiCond480) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function ZDP_NodeDescMsg
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_156
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+-6
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function ZDP_NodeDescMsg
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_157
          CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond482) CFA_SP SP+-6
          CFI (cfiCond482) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond483 Using cfiCommon0
          CFI (cfiCond483) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond483) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_231, ??CrossCallReturnLabel_158
          CFI (cfiCond483) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond483) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond483) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond483) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond483) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond483) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond483) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond483) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond483) CFA_SP SP+-6
          CFI (cfiCond483) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond484 Using cfiCommon0
          CFI (cfiCond484) Function ZDP_SimpleDescMsg
          CFI (cfiCond484) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_2
          CFI (cfiCond484) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond484) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond484) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond484) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond484) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond484) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond484) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond484) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond484) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond484) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond484) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond484) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond484) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond484) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond484) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond484) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond484) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond484) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond484) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond484) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond484) CFA_SP SP+-6
          CFI (cfiCond484) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond485 Using cfiCommon0
          CFI (cfiCond485) Function ZDP_SimpleDescMsg
          CFI (cfiCond485) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_232, ??CrossCallReturnLabel_3
          CFI (cfiCond485) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond485) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond485) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond485) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond485) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond485) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond485) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond485) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond485) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond485) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond485) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond485) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond485) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond485) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond485) CFA_SP SP+-6
          CFI (cfiCond485) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond486 Using cfiCommon0
          CFI (cfiCond486) Function ZDP_UserDescSet
          CFI (cfiCond486) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_0
          CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond486) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond486) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond486) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond486) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond486) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond486) CFA_SP SP+-6
          CFI (cfiCond486) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function ZDP_UserDescRsp
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_233, ??CrossCallReturnLabel_1
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond487) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond487) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond487) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond487) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond487) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond487) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond487) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+-6
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function ZDP_NodeDescMsg
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_227
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+-6
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function ZDP_NodeDescMsg
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_228
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+-6
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function ZDP_MgmtBindRsp
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_229
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond490) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond490) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond490) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond490) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond490) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond490) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond490) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-6
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function ZDP_SendData
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_237, ??CrossCallReturnLabel_234, ??CrossCallReturnLabel_230
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+-6
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond492 Using cfiCommon0
          CFI (cfiCond492) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond492) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond492) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond492) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond492) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond492) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond492) CFA_SP SP+-2
          CFI (cfiCond492) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker493 Using cfiCommon1
          CFI (cfiPicker493) NoFunction
          CFI (cfiPicker493) Picker
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        ; Setup parameters for call to function osal_memcpy
        MOV     DPL,R0
        MOV     DPH,R1
        RET
          CFI EndBlock cfiCond474
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiCond483
          CFI EndBlock cfiCond484
          CFI EndBlock cfiCond485
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiCond492
          CFI EndBlock cfiPicker493

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond494 Using cfiCommon0
          CFI Function ZDP_MgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function ZDP_MgmtBindRsp
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-22)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-21)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond495) V2 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond495) V3 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond495) V4 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond495) V5 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond495) V6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond495) V7 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond495) V8 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond495) V9 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond495) V10 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond495) V11 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) V12 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V13 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+-2
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker496 Using cfiCommon1
          CFI (cfiPicker496) NoFunction
          CFI (cfiPicker496) Picker
        MOV     DPL,R4
        MOV     DPH,R5
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_192:
        LCALL   ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_173:
        INC     DPTR
        LCALL   ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_193:
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,R2
        ADD     A,#0x2
        RET
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiPicker496
// 1825 
// 1826 /*********************************************************************
// 1827  * @fn          ZDP_MgmtNwkUpdateNotify
// 1828  *
// 1829  * @brief       This builds and send a Mgmt_NWK_Update_notify message. This
// 1830  *              function sends a unicast message.
// 1831  *
// 1832  * @param       dstAddr - destination address of the message
// 1833  * @param       status - message status (ZDP_SUCCESS or other)
// 1834  * @param       scannedChannels - List of channels scanned by the request
// 1835  * @param       totalTransmissions - Total transmissions
// 1836  * @param       transmissionFailures - Sum of transmission failures
// 1837  * @param       listCount - Number of records contained in the energyValues list
// 1838  * @param       energyValues - List of descriptors, one for each of ListCount,
// 1839  *                             of the enegry detect descriptors
// 1840  * @param       txOptions - Transmit options
// 1841  * @param       securityEnable - Security options
// 1842  *
// 1843  * @return      afStatus_t
// 1844  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1845 afStatus_t ZDP_MgmtNwkUpdateNotify( uint8 TransSeq, zAddrType_t *dstAddr,
ZDP_MgmtNwkUpdateNotify:
          CFI Block cfiBlock497 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateNotify
        CODE
// 1846                                     uint8 status, uint32 scannedChannels,
// 1847                                     uint16 totalTransmissions, uint16 transmissionFailures,
// 1848                                     uint8 listCount, uint8 *energyValues, uint8 txOptions,
// 1849                                     uint8 securityEnable )
// 1850 {
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_buffer_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, fillAndSend
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_MgmtNwkUpdateNotify, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 1
        MOV     A,#-0x1
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     DPL,?XSP + 0
        MOV     DPH,?XSP + 1
        MOVX    @DPTR,A
        MOV     ?V8,R2
        MOV     ?V9,R3
        MOV     ?V7,R4
        MOV     ?V0,R5
// 1851   uint8 *buf;
// 1852   uint8 *pBuf;
// 1853   uint8 len;
// 1854 
// 1855   (void)securityEnable;  // Intentionally unreferenced parameter
// 1856 
// 1857   // Status + ScannedChannels + totalTransmissions + transmissionFailures + ListCount + energyValues
// 1858   len = 1 + 4 + 2 + 2 + 1 + listCount;
        MOV     A,#0xa
        ADD     A,R5
        MOV     ?V1,A
// 1859 
// 1860   buf = osal_mem_alloc( len+1 ); // +1 for transaction ID
        ; Setup parameters for call to function osal_mem_alloc
        LCALL   ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_112:
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V2,R2
        MOV     ?V3,R3
        MOV     R6,?V2
        MOV     R7,?V3
// 1861   if ( buf == NULL )
        MOV     A,R6
        ORL     A,R7
        JNZ     ??ZDP_MgmtNwkUpdateNotify_0
// 1862   {
// 1863     return afStatus_MEM_FAIL;
        MOV     R1,#0x10
        LJMP    ??ZDP_MgmtNwkUpdateNotify_1 & 0xFFFF
// 1864   }
// 1865 
// 1866   pBuf = buf+1;
??ZDP_MgmtNwkUpdateNotify_0:
        MOV     DPL,R6
        MOV     DPH,R7
        INC     DPTR
        MOV     ?V2,DPL
        MOV     ?V3,DPH
// 1867 
// 1868   *pBuf++ = status;
        MOV     A,?V7
        LCALL   ??Subroutine101_0 & 0xFFFF
// 1869 
// 1870   pBuf = osal_buffer_uint32( pBuf, scannedChannels );
??CrossCallReturnLabel_153:
        ; Setup parameters for call to function osal_buffer_uint32
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL   `??osal_buffer_uint32::?relay`; Banked call to: osal_buffer_uint32
        MOV     A,#0x4
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,#0x17
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine53 & 0xFFFF
// 1871 
// 1872   *pBuf++ = LO_UINT16( totalTransmissions );
??CrossCallReturnLabel_80:
        MOVX    @DPTR,A
// 1873   *pBuf++ = HI_UINT16( totalTransmissions );
        MOV     A,R1
        INC     DPTR
        MOVX    @DPTR,A
        MOV     A,#0x19
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine53 & 0xFFFF
// 1874 
// 1875   *pBuf++ = LO_UINT16( transmissionFailures );
??CrossCallReturnLabel_81:
        INC     DPTR
        INC     DPTR
        LCALL   ?Subroutine35 & 0xFFFF
// 1876   *pBuf++ = HI_UINT16( transmissionFailures );
??CrossCallReturnLabel_45:
        LCALL   ?Subroutine18 & 0xFFFF
// 1877 
// 1878   *pBuf++ = listCount;
??CrossCallReturnLabel_13:
        MOV     A,?V0
        MOVX    @DPTR,A
// 1879 
// 1880   if ( listCount > 0 )
        JZ      ??ZDP_MgmtNwkUpdateNotify_2
// 1881     osal_memcpy( pBuf, energyValues, listCount );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,#0x1b
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_75:
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV     R4,?V0
        MOV     R5,#0x0
        MOV     A,R2
        ADD     A,#0x5
        MOV     R2,A
        JNC     ??ZDP_MgmtNwkUpdateNotify_3
        INC     R3
??ZDP_MgmtNwkUpdateNotify_3:
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
// 1882 
// 1883   FillAndSendBufferTxOptions( &TransSeq, dstAddr, Mgmt_NWK_Update_notify, len, buf, txOptions );
??ZDP_MgmtNwkUpdateNotify_2:
        MOV     DPTR,#ZDP_TmpBuf
        MOV     A,?V2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V3
        MOVX    @DPTR,A
        MOV     A,#0x1d
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        MOV     DPTR,#ZDP_TxOptions
        MOVX    @DPTR,A
        ; Setup parameters for call to function fillAndSend
        MOV     ?V2,#0x38
        MOV     ?V3,#-0x80
        MOV     R0,#?V2
        LCALL   ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R1,?V1
        MOV     R4,?V8
        MOV     R5,?V9
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP101_8
        LCALL   `??fillAndSend::?relay`; Banked call to: fillAndSend
        MOV     A,#0x2
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV     A,R1
        MOV     ?V1,A
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV     DPTR,#ZDP_TmpBuf
        MOV     A,#(ZDP_Buf + 1) & 0xff
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,#((ZDP_Buf + 1) >> 8) & 0xff
        MOVX    @DPTR,A
        MOV     DPTR,#ZDP_TxOptions
        CLR     A
        MOVX    @DPTR,A
        MOV     R1,?V1
??ZDP_MgmtNwkUpdateNotify_1:
        LJMP    ?Subroutine6 & 0xFFFF
// 1884 }
          CFI EndBlock cfiBlock497

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond498 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_80
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_81
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond499) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond499) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond499) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond499) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond499) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond499) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+-2
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker500 Using cfiCommon1
          CFI (cfiPicker500) NoFunction
          CFI (cfiPicker500) Picker
        LCALL   ?Subroutine71 & 0xFFFF
??CrossCallReturnLabel_121:
        RET
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiPicker500

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond501 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_10
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function ZDP_EndDeviceBindReq
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_11
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+-4
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond503 Using cfiCommon0
          CFI (cfiCond503) Function ZDP_BindUnbindReq
          CFI (cfiCond503) Conditional ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_12
          CFI (cfiCond503) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond503) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond503) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond503) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond503) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond503) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond503) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond503) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond503) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond503) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond503) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond503) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond503) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond503) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond503) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond503) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond503) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond503) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond503) CFA_SP SP+-4
          CFI (cfiCond503) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond504 Using cfiCommon0
          CFI (cfiCond504) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond504) Conditional ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_80
          CFI (cfiCond504) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond504) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond504) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond504) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond504) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond504) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond504) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond504) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond504) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond504) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond504) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond504) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond504) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond504) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond504) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond504) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond504) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond504) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond504) CFA_SP SP+-4
          CFI (cfiCond504) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_81
          CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond505) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond505) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond505) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond505) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond505) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond505) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond505) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond505) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond505) CFA_SP SP+-4
          CFI (cfiCond505) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker506 Using cfiCommon1
          CFI (cfiPicker506) NoFunction
          CFI (cfiPicker506) Picker
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_256:
        MOV     R1,A
        MOV     A,R0
        MOV     DPL,R2
        MOV     DPH,R3
        RET
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiCond503
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiPicker506

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond507 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_74
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond508 Using cfiCommon0
          CFI (cfiCond508) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond508) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond508) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond508) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond508) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond508) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond508) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond508) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond508) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond508) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond508) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond508) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond508) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond508) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond508) CFA_SP SP+-2
          CFI (cfiCond508) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker509 Using cfiCommon1
          CFI (cfiPicker509) NoFunction
          CFI (cfiPicker509) Picker
        MOVX    A,@DPTR
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        RET
          CFI EndBlock cfiCond507
          CFI EndBlock cfiCond508
          CFI EndBlock cfiPicker509

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond510 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateReq
          CFI Conditional ??CrossCallReturnLabel_44
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond511 Using cfiCommon0
          CFI (cfiCond511) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond511) Conditional ??CrossCallReturnLabel_45
          CFI (cfiCond511) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond511) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond511) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond511) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond511) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond511) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond511) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond511) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond511) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond511) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond511) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond511) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond511) CFA_SP SP+-2
          CFI (cfiCond511) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker512 Using cfiCommon1
          CFI (cfiPicker512) NoFunction
          CFI (cfiPicker512) Picker
        LCALL   ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_143:
        INC     DPTR
        RET
          CFI EndBlock cfiCond510
          CFI EndBlock cfiCond511
          CFI EndBlock cfiPicker512

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond513 Using cfiCommon0
          CFI Function ZDP_EPRsp
          CFI Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_10
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond514 Using cfiCommon0
          CFI (cfiCond514) Function ZDP_EndDeviceBindReq
          CFI (cfiCond514) Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_11
          CFI (cfiCond514) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond514) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond514) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond514) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond514) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond514) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond514) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond514) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond514) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond514) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond514) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond514) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond514) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond514) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond514) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond514) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond514) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond514) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond514) CFA_SP SP+-4
          CFI (cfiCond514) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function ZDP_BindUnbindReq
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_142, ??CrossCallReturnLabel_12
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond515) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond515) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond515) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond515) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond515) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+-4
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond516 Using cfiCommon0
          CFI (cfiCond516) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond516) Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_44
          CFI (cfiCond516) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond516) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond516) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond516) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond516) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond516) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond516) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond516) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond516) CFA_SP SP+-4
          CFI (cfiCond516) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond517 Using cfiCommon0
          CFI (cfiCond517) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond517) Conditional ??CrossCallReturnLabel_143, ??CrossCallReturnLabel_45
          CFI (cfiCond517) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond517) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond517) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond517) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond517) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond517) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond517) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond517) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond517) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond517) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond517) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond517) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond517) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond517) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond517) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond517) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond517) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond517) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond517) CFA_SP SP+-4
          CFI (cfiCond517) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker518 Using cfiCommon1
          CFI (cfiPicker518) NoFunction
          CFI (cfiPicker518) Picker
        MOVX    @DPTR,A
        MOV     A,R1
        MOV     DPL,R2
        MOV     DPH,R3
        INC     DPTR
        INC     DPTR
        RET
          CFI EndBlock cfiCond513
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiCond516
          CFI EndBlock cfiCond517
          CFI EndBlock cfiPicker518
// 1885 
// 1886 /*********************************************************************
// 1887  * Functions to register for ZDO Over-the-air messages
// 1888  */
// 1889 
// 1890 /*********************************************************************
// 1891  * @fn          ZDO_RegisterForZDOMsg
// 1892  *
// 1893  * @brief       Call this function to register of an incoming over
// 1894  *              the air ZDO message - probably a response message
// 1895  *              but requests can also be received.
// 1896  *              Messages are delivered to the task with ZDO_CB_MSG
// 1897  *              as the message ID.
// 1898  *
// 1899  * @param       taskID - Where you would like the message delivered
// 1900  * @param       clusterID - What message?
// 1901  *                          ZDO_ALL_MSGS_CLUSTERID - all responses
// 1902  *                          and device announce
// 1903  *
// 1904  * @return      ZSuccess - successful, ZMemError if not
// 1905  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1906 ZStatus_t ZDO_RegisterForZDOMsg( uint8 taskID, uint16 clusterID )
ZDO_RegisterForZDOMsg:
          CFI Block cfiBlock519 Using cfiCommon0
          CFI Function ZDO_RegisterForZDOMsg
        CODE
// 1907 {
        FUNCALL ZDO_RegisterForZDOMsg, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        MOV     A,#-0xe
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV     ?V2,R1
        MOV     ?V0,R2
        MOV     ?V1,R3
// 1908   ZDO_MsgCB_t *pList;
// 1909   ZDO_MsgCB_t *pLast;
// 1910   ZDO_MsgCB_t *pNew;
// 1911 
// 1912   // Look for duplicate
// 1913   pList = pLast = zdoMsgCBs;
        MOV     DPTR,#zdoMsgCBs
        LCALL   ??Subroutine117_0 & 0xFFFF
??CrossCallReturnLabel_220:
        MOV     A,R6
        MOV     R0,A
        MOV     A,R7
        SJMP    ??CrossCallReturnLabel_255
// 1914   while ( pList )
// 1915   {
// 1916     if ( pList->taskID == taskID && pList->clusterID == clusterID )
??ZDO_RegisterForZDOMsg_0:
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V2
        JNZ     ??ZDO_RegisterForZDOMsg_1
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V0
        JNZ     ??ZDO_RegisterForZDOMsg_2
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,?V1
??ZDO_RegisterForZDOMsg_2:
        JZ      ??CrossCallReturnLabel_37
// 1917       return ( ZSuccess );
// 1918     pLast = pList;
??ZDO_RegisterForZDOMsg_1:
        MOV     A,R0
        MOV     R6,A
        MOV     A,R1
        MOV     R7,A
// 1919     pList = (ZDO_MsgCB_t *)pList->next;
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine123_0 & 0xFFFF
// 1920   }
??CrossCallReturnLabel_255:
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JNZ     ??ZDO_RegisterForZDOMsg_0
// 1921 
// 1922   // Add to the list
// 1923   pNew = (ZDO_MsgCB_t *)osal_mem_alloc( sizeof ( ZDO_MsgCB_t ) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV     R2,#0x5
        MOV     R3,#0x0
        LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV     ?V4,R2
        MOV     ?V5,R3
        MOV     R0,?V4
        MOV     R1,?V5
// 1924   if ( pNew )
        MOV     A,R0
        ORL     A,R1
        JZ      ??ZDO_RegisterForZDOMsg_3
// 1925   {
// 1926     pNew->taskID = taskID;
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOV     A,?V2
        LCALL   ??Subroutine102_0 & 0xFFFF
// 1927     pNew->clusterID = clusterID;
??CrossCallReturnLabel_158:
        MOV     A,?V0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,?V1
        LCALL   ?Subroutine94 & 0xFFFF
// 1928     pNew->next = NULL;
??CrossCallReturnLabel_238:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
        MOVX    @DPTR,A
// 1929     if ( zdoMsgCBs )
        MOV     DPTR,#zdoMsgCBs
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_200:
        MOV     A,R2
        ORL     A,R3
        JZ      ??ZDO_RegisterForZDOMsg_4
// 1930     {
// 1931       pLast->next = pNew;
        MOV     DPL,R6
        MOV     DPH,R7
        SJMP    ??ZDO_RegisterForZDOMsg_5
// 1932     }
// 1933     else
// 1934       zdoMsgCBs = pNew;
??ZDO_RegisterForZDOMsg_4:
        MOV     DPTR,#zdoMsgCBs
??ZDO_RegisterForZDOMsg_5:
        LCALL   ?Subroutine30 & 0xFFFF
// 1935     return ( ZSuccess );
??CrossCallReturnLabel_37:
        MOV     R1,#0x0
        SJMP    ??ZDO_RegisterForZDOMsg_6
// 1936   }
// 1937   else
// 1938     return ( ZMemError );
??ZDO_RegisterForZDOMsg_3:
        MOV     R1,#0x10
??ZDO_RegisterForZDOMsg_6:
        LJMP    ??Subroutine98_0 & 0xFFFF
// 1939 }
          CFI EndBlock cfiBlock519

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond520 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_35
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function ZDP_MgmtRtgRsp
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-20)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-19)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond521) V4 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond521) V5 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond521) V6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond521) V7 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond521) V8 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) V9 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V10 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V11 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+-2
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_37
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+-2
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function ZDP_IncomingData
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+-2
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function ZDP_IncomingData
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_39
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+-2
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function ZDP_IncomingData
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_40
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+-2
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function ZDP_IncomingData
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond526) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond526) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond526) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond526) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond526) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond526) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond526) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond526) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond526) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond526) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond526) CFA_SP SP+-2
          CFI (cfiCond526) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker527 Using cfiCommon1
          CFI (cfiPicker527) NoFunction
          CFI (cfiPicker527) Picker
        MOV     A,R0
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R1
        MOVX    @DPTR,A
        RET
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiPicker527
// 1940 
// 1941 /*********************************************************************
// 1942  * @fn          ZDO_RemoveRegisteredCB
// 1943  *
// 1944  * @brief       Call this function if you don't want to receive the
// 1945  *              incoming message.
// 1946  *
// 1947  * @param       taskID - Where the messages are being delivered.
// 1948  * @param       clusterID - What message?
// 1949  *
// 1950  * @return      ZSuccess - successful, ZFailure if not found
// 1951  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1952 ZStatus_t ZDO_RemoveRegisteredCB( uint8 taskID, uint16 clusterID )
ZDO_RemoveRegisteredCB:
          CFI Block cfiBlock528 Using cfiCommon0
          CFI Function ZDO_RemoveRegisteredCB
        CODE
// 1953 {
        FUNCALL ZDO_RemoveRegisteredCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R6,A
// 1954   ZDO_MsgCB_t *pList;
// 1955   ZDO_MsgCB_t *pLast = NULL;
        MOV     R4,#0x0
        MOV     R5,#0x0
// 1956 
// 1957   pList = zdoMsgCBs;
        MOV     DPTR,#zdoMsgCBs
        SJMP    ??ZDO_RemoveRegisteredCB_0
// 1958   while ( pList )
// 1959   {
// 1960     if ( pList->taskID == taskID && pList->clusterID == clusterID )
// 1961     {
// 1962       if ( pLast )
// 1963       {
// 1964         // remove this one from the linked list
// 1965         pLast->next = pList->next;
// 1966       }
// 1967       else if ( pList->next )
// 1968       {
// 1969         // remove the first one from the linked list
// 1970         zdoMsgCBs = pList->next;
// 1971       }
// 1972       else
// 1973       {
// 1974         // remove the only item from the list
// 1975         zdoMsgCBs = (ZDO_MsgCB_t *)NULL;
// 1976       }
// 1977       osal_mem_free( pList );
// 1978       return ( ZSuccess );
// 1979     }
// 1980     pLast = pList;
??ZDO_RemoveRegisteredCB_1:
        MOV     A,R0
        MOV     R4,A
        MOV     A,R1
        MOV     R5,A
// 1981     pList = pList->next;
        MOV     DPL,R0
        MOV     DPH,R1
??ZDO_RemoveRegisteredCB_0:
        LCALL   ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_88:
        ORL     A,R1
        JZ      ??ZDO_RemoveRegisteredCB_2
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R6
        JNZ     ??ZDO_RemoveRegisteredCB_1
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??ZDO_RemoveRegisteredCB_3
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??ZDO_RemoveRegisteredCB_3:
        JNZ     ??ZDO_RemoveRegisteredCB_1
        MOV     DPL,R0
        MOV     DPH,R1
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_201:
        MOV     A,R4
        ORL     A,R5
        JZ      ??ZDO_RemoveRegisteredCB_4
        MOV     DPL,R4
        MOV     DPH,R5
        SJMP    ??ZDO_RemoveRegisteredCB_5
??ZDO_RemoveRegisteredCB_4:
        MOV     A,R2
        ORL     A,R3
        MOV     DPTR,#zdoMsgCBs
        JZ      ??ZDO_RemoveRegisteredCB_6
??ZDO_RemoveRegisteredCB_5:
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        SJMP    ??ZDO_RemoveRegisteredCB_7
??ZDO_RemoveRegisteredCB_6:
        CLR     A
        MOVX    @DPTR,A
        INC     DPTR
??ZDO_RemoveRegisteredCB_7:
        MOVX    @DPTR,A
        ; Setup parameters for call to function osal_mem_free
        MOV     A,R0
        MOV     R2,A
        MOV     A,R1
        MOV     R3,A
        LCALL   `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV     R1,#0x0
        SJMP    ??ZDO_RemoveRegisteredCB_8
// 1982   }
// 1983 
// 1984   return ( ZFailure );
??ZDO_RemoveRegisteredCB_2:
        MOV     R1,#0x1
??ZDO_RemoveRegisteredCB_8:
        LJMP    ?Subroutine7 & 0xFFFF
// 1985 }
          CFI EndBlock cfiBlock528
// 1986 
// 1987 /*********************************************************************
// 1988  * @fn          ZDO_SendMsgCBs
// 1989  *
// 1990  * @brief       This function sends messages to registered tasks.
// 1991  *              Local to ZDO and shouldn't be called outside of ZDO.
// 1992  *
// 1993  * @param       inMsg - incoming message
// 1994  *
// 1995  * @return      TRUE if sent to at least 1 task, FALSE if not
// 1996  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 1997 uint8 ZDO_SendMsgCBs( zdoIncomingMsg_t *inMsg )
ZDO_SendMsgCBs:
          CFI Block cfiBlock529 Using cfiCommon0
          CFI Function ZDO_SendMsgCBs
        CODE
// 1998 {
        FUNCALL ZDO_SendMsgCBs, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_SendMsgCBs, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        REQUIRE ?V8
        REQUIRE ?V9
        MOV     A,#-0x12
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
        ; Saved register size: 18
        ; Auto size: 0
        MOV     ?V2,R2
        MOV     ?V3,R3
// 1999   uint8 ret = FALSE;
        MOV     ?V4,#0x0
// 2000   ZDO_MsgCB_t *pList = zdoMsgCBs;
        MOV     DPTR,#zdoMsgCBs
        LCALL   ??Subroutine105_0 & 0xFFFF
??CrossCallReturnLabel_162:
        MOV     A,R2
        ADD     A,#0x10
        MOV     ?V8,A
        CLR     A
        ADDC    A,?V3
        MOV     ?V9,A
        LJMP    ??CrossCallReturnLabel_163 & 0xFFFF
// 2001   while ( pList )
// 2002   {
// 2003     if ( (pList->clusterID == inMsg->clusterID)
// 2004        || ((pList->clusterID == ZDO_ALL_MSGS_CLUSTERID)
// 2005            && ((inMsg->clusterID & ZDO_RESPONSE_BIT) || (inMsg->clusterID == Device_annce))) )
??ZDO_SendMsgCBs_0:
        MOV     A,?V2
        ADD     A,#0xc
        MOV     DPL,A
        CLR     A
        ADDC    A,?V3
        MOV     DPH,A
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_245:
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine113_0 & 0xFFFF
??CrossCallReturnLabel_202:
        MOV     A,R0
        XRL     A,R2
        JNZ     ??ZDO_SendMsgCBs_1
        MOV     A,R1
        XRL     A,R3
??ZDO_SendMsgCBs_1:
        JZ      ??ZDO_SendMsgCBs_2
        MOV     A,#-0x1
        XRL     A,R2
        JNZ     ??ZDO_SendMsgCBs_3
        MOV     A,#-0x1
        XRL     A,R3
??ZDO_SendMsgCBs_3:
        JZ      $+5
        LJMP    ??ZDO_SendMsgCBs_4 & 0xFFFF
        MOV     A,R1
        ANL     A,#0x80
        JNZ     ??ZDO_SendMsgCBs_2
        MOV     A,#0x13
        XRL     A,R0
        ORL     A,R1
        JZ      $+5
        LJMP    ??ZDO_SendMsgCBs_4 & 0xFFFF
// 2006     {
// 2007       zdoIncomingMsg_t *msgPtr;
// 2008 
// 2009       // Send the address to the task
// 2010       msgPtr = (zdoIncomingMsg_t *)osal_msg_allocate( sizeof( zdoIncomingMsg_t ) + inMsg->asduLen );
??ZDO_SendMsgCBs_2:
        ; Setup parameters for call to function osal_msg_allocate
        MOV     DPL,?V8
        MOV     DPH,?V9
        MOVX    A,@DPTR
        ADD     A,#0x17
        MOV     R2,A
        CLR     A
        ADDC    A,#0x0
        MOV     R3,A
        LCALL   `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV     ?V6,R2
        MOV     ?V7,R3
        MOV     R6,?V6
        MOV     R7,?V7
// 2011       if ( msgPtr )
        MOV     A,R6
        ORL     A,R7
        JZ      ??ZDO_SendMsgCBs_4
// 2012       {
// 2013         // copy struct
// 2014         osal_memcpy( msgPtr, inMsg, sizeof( zdoIncomingMsg_t ));
        ; Setup parameters for call to function osal_memcpy
        MOV     ?V4,?V2
        MOV     ?V5,?V3
        MOV     ?V6,#0x0
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     R4,#0x17
        MOV     R5,#0x0
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 2015 
// 2016         if ( inMsg->asduLen )
        MOV     DPL,?V8
        MOV     DPH,?V9
        MOVX    A,@DPTR
        JZ      ??ZDO_SendMsgCBs_5
// 2017         {
// 2018           msgPtr->asdu = (byte*)(((byte*)msgPtr) + sizeof( zdoIncomingMsg_t ));
        MOV     A,R6
        ADD     A,#0x17
        MOV     R2,A
        CLR     A
        ADDC    A,R7
        MOV     R3,A
        MOV     A,R6
        ADD     A,#0x13
        MOV     DPL,A
        CLR     A
        ADDC    A,R7
        MOV     DPH,A
        MOV     A,R2
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R3
        MOVX    @DPTR,A
// 2019           osal_memcpy( msgPtr->asdu, inMsg->asdu, inMsg->asduLen );
        ; Setup parameters for call to function osal_memcpy
        MOV     A,?V2
        ADD     A,#0x13
        MOV     DPL,A
        CLR     A
        ADDC    A,?V3
        MOV     DPH,A
        MOVX    A,@DPTR
        MOV     ?V4,A
        INC     DPTR
        MOVX    A,@DPTR
        MOV     ?V5,A
        MOV     R0,#?V4
        LCALL   ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV     DPL,?V8
        MOV     DPH,?V9
        MOVX    A,@DPTR
        MOV     R4,A
        MOV     R5,#0x0
        LCALL   `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV     A,#0x3
        LCALL   ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 2020         }
// 2021 
// 2022         msgPtr->hdr.event = ZDO_CB_MSG;
??ZDO_SendMsgCBs_5:
        MOV     DPL,R6
        MOV     DPH,R7
        MOV     A,#-0x2d
        MOVX    @DPTR,A
// 2023         osal_msg_send( pList->taskID, (uint8 *)msgPtr );
        ; Setup parameters for call to function osal_msg_send
        MOV     A,R6
        MOV     R2,A
        MOV     A,R7
        MOV     R3,A
        MOV     DPL,?V0
        MOV     DPH,?V1
        INC     DPTR
        INC     DPTR
        MOVX    A,@DPTR
        MOV     R1,A
        LCALL   `??osal_msg_send::?relay`; Banked call to: osal_msg_send
// 2024         ret = TRUE;
        MOV     ?V4,#0x1
// 2025       }
// 2026     }
// 2027     pList = (ZDO_MsgCB_t *)pList->next;
??ZDO_SendMsgCBs_4:
        MOV     DPL,?V0
        MOV     DPH,?V1
        LCALL   ??Subroutine105_0 & 0xFFFF
// 2028   }
??CrossCallReturnLabel_163:
        MOV     A,?V0
        ORL     A,?V1
        JZ      $+5
        LJMP    ??ZDO_SendMsgCBs_0 & 0xFFFF
// 2029   return ( ret );
        MOV     R1,?V4
        LJMP    ??Subroutine110_0 & 0xFFFF
// 2030 }
          CFI EndBlock cfiBlock529

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond530 Using cfiCommon0
          CFI Function ZDP_MatchDescReq
          CFI Conditional ??CrossCallReturnLabel_239
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function ZDP_ServerDiscReq
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+-2
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker532 Using cfiCommon1
          CFI (cfiPicker532) NoFunction
          CFI (cfiPicker532) Picker
        MOV     A,R1
        MOV     R6,A
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiPicker532
        REQUIRE ??Subroutine121_0
        ; // Fall through to label ??Subroutine121_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine121_0:
          CFI Block cfiCond533 Using cfiCommon0
          CFI Function ZDP_IEEEAddrReq
          CFI Conditional ??CrossCallReturnLabel_250
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function ZDP_MatchDescReq
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-2
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function ZDP_ServerDiscReq
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond535) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond535) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond535) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond535) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond535) CFA_SP SP+-2
          CFI (cfiCond535) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker536 Using cfiCommon1
          CFI (cfiPicker536) NoFunction
          CFI (cfiPicker536) Picker
        MOV     DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiPicker536
        REQUIRE ??Subroutine122_0
        ; // Fall through to label ??Subroutine122_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine122_0:
          CFI Block cfiCond537 Using cfiCommon0
          CFI Function ZDP_SendData
          CFI Conditional ??CrossCallReturnLabel_241
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function ZDP_UserDescRsp
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond538) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond538) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond538) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond538) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond538) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond538) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+-2
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function ZDP_GenericRsp
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_243
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+-2
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+-2
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function ZDO_SendMsgCBs
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond541) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond541) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond541) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond541) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond541) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond541) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond541) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond541) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond541) CFA_SP SP+-2
          CFI (cfiCond541) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function ZDP_IncomingData
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+-2
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function ZDP_IncomingData
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+-2
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function ZDP_IncomingData
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond544) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond544) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond544) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond544) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond544) CFA_SP SP+-2
          CFI (cfiCond544) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond545 Using cfiCommon0
          CFI (cfiCond545) Function ZDP_IncomingData
          CFI (cfiCond545) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond545) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond545) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond545) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond545) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond545) CFA_SP SP+-2
          CFI (cfiCond545) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function ZDP_IEEEAddrReq
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-2
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function ZDP_MatchDescReq
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond547) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond547) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond547) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond547) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond547) CFA_SP SP+-2
          CFI (cfiCond547) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function ZDP_ServerDiscReq
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond548) CFA_SP SP+-2
          CFI (cfiCond548) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker549 Using cfiCommon1
          CFI (cfiPicker549) NoFunction
          CFI (cfiPicker549) Picker
        LCALL   ?Subroutine74 & 0xFFFF
??CrossCallReturnLabel_254:
        RET
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiPicker549

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond550 Using cfiCommon0
          CFI Function fillAndSend
          CFI Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_76
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function ZDP_NwkAddrReq
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_77
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+-4
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function ZDP_UserDescSet
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_60
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond552) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond552) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+-4
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function ZDP_NodeDescMsg
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_61
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+-4
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function ZDP_PowerDescMsg
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_62
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+-4
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function ZDP_UserDescSet
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_82
          CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond555) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond555) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond555) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond555) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond555) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond555) CFA_SP SP+-4
          CFI (cfiCond555) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function ZDP_UserDescRsp
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_83
          CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond556) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond556) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond556) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond556) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond556) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond556) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond556) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond556) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond556) CFA_SP SP+-4
          CFI (cfiCond556) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function ZDP_MatchDescReq
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_239
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond557) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+-4
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function ZDP_ServerDiscReq
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_240
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+-4
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function ZDP_IEEEAddrReq
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_250
          CFI (cfiCond559) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond559) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond559) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond559) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond559) CFA_SP SP+-4
          CFI (cfiCond559) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function ZDP_SendData
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_241
          CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond560) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond560) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond560) CFA_SP SP+-4
          CFI (cfiCond560) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function ZDP_UserDescRsp
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_242
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-4
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function ZDP_GenericRsp
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_243
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+-4
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_244
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_SP SP+-4
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function ZDO_SendMsgCBs
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_245
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+-4
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function ZDP_IncomingData
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_246
          CFI (cfiCond565) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond565) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond565) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond565) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond565) CFA_SP SP+-4
          CFI (cfiCond565) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function ZDP_IncomingData
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_247
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+-4
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function ZDP_IncomingData
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_248
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+-4
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function ZDP_IncomingData
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_249
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-4
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker569 Using cfiCommon1
          CFI (cfiPicker569) NoFunction
          CFI (cfiPicker569) Picker
        LCALL   ??Subroutine123_0 & 0xFFFF
??CrossCallReturnLabel_260:
        MOV     R1,A
        RET
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiPicker569

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond570 Using cfiCommon0
          CFI Function ZDP_DeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_258
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond571) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond571) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond571) CFA_SP SP+-2
          CFI (cfiCond571) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker572 Using cfiCommon1
          CFI (cfiPicker572) NoFunction
          CFI (cfiPicker572) Picker
        MOV     DPTR,#ZDP_TmpBuf
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiPicker572
        REQUIRE ??Subroutine123_0
        ; // Fall through to label ??Subroutine123_0

        RSEG BANKED_CODE:CODE:NOROOT(0)
??Subroutine123_0:
          CFI Block cfiCond573 Using cfiCommon0
          CFI Function zdpProcessAddrReq
          CFI Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_89
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond574 Using cfiCommon0
          CFI (cfiCond574) Function ZDP_PowerDescMsg
          CFI (cfiCond574) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_90
          CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond574) CFA_SP SP+-6
          CFI (cfiCond574) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond575 Using cfiCommon0
          CFI (cfiCond575) Function ZDO_RemoveRegisteredCB
          CFI (cfiCond575) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_122, ??CrossCallReturnLabel_88
          CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond575) CFA_SP SP+-6
          CFI (cfiCond575) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function ZDP_ServerDiscRsp
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_86
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-6
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function ZDP_EndDeviceBindReq
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_125, ??CrossCallReturnLabel_87
          CFI (cfiCond577) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond577) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond577) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond577) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond577) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond577) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond577) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond577) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond577) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond577) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond577) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond577) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond577) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond577) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond577) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond577) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond577) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond577) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond577) CFA_SP SP+-6
          CFI (cfiCond577) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function ZDP_EPRsp
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_84
          CFI (cfiCond578) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond578) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond578) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond578) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond578) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond578) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond578) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond578) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond578) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond578) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond578) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond578) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond578) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond578) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond578) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond578) CFA_SP SP+-6
          CFI (cfiCond578) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function ZDP_EndDeviceBindReq
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_124, ??CrossCallReturnLabel_85
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond579) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond579) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond579) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond579) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+-6
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function ZDP_ServerDiscRsp
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_78
          CFI (cfiCond580) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond580) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond580) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond580) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond580) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond580) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond580) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond580) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond580) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond580) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond580) CFA_SP SP+-6
          CFI (cfiCond580) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function ZDP_MgmtNwkUpdateReq
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_123, ??CrossCallReturnLabel_79
          CFI (cfiCond581) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond581) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond581) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond581) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond581) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond581) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond581) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond581) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond581) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond581) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond581) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond581) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond581) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond581) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond581) CFA_SP SP+-6
          CFI (cfiCond581) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond582 Using cfiCommon0
          CFI (cfiCond582) Function ZDP_EPRsp
          CFI (cfiCond582) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_10
          CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond582) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond582) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond582) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond582) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond582) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond582) CFA_SP SP+-6
          CFI (cfiCond582) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function ZDP_EndDeviceBindReq
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_11
          CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond583) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond583) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond583) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond583) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond583) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond583) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond583) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond583) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond583) CFA_SP SP+-6
          CFI (cfiCond583) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function ZDP_BindUnbindReq
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_120, ??CrossCallReturnLabel_12
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond584) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+-6
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_80
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond585) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond585) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond585) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond585) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+-6
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond586 Using cfiCommon0
          CFI (cfiCond586) Function ZDP_MgmtNwkUpdateNotify
          CFI (cfiCond586) Conditional ??CrossCallReturnLabel_256, ??CrossCallReturnLabel_121, ??CrossCallReturnLabel_81
          CFI (cfiCond586) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond586) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond586) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond586) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond586) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond586) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond586) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond586) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond586) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond586) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond586) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond586) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond586) CFA_SP SP+-6
          CFI (cfiCond586) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function ZDO_RegisterForZDOMsg
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond587) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond587) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond587) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond587) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond587) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond587) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond587) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond587) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond587) CFA_SP SP+-2
          CFI (cfiCond587) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function fillAndSend
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_76
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-6
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function ZDP_NwkAddrReq
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_77
          CFI (cfiCond589) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond589) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond589) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond589) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond589) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond589) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond589) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond589) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond589) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond589) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond589) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond589) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond589) CFA_SP SP+-6
          CFI (cfiCond589) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function ZDP_UserDescSet
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_60
          CFI (cfiCond590) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond590) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond590) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond590) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond590) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond590) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond590) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond590) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond590) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond590) CFA_SP SP+-6
          CFI (cfiCond590) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function ZDP_NodeDescMsg
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_61
          CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond591) CFA_SP SP+-6
          CFI (cfiCond591) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function ZDP_PowerDescMsg
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_62
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+-6
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function ZDP_UserDescSet
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_82
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-6
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 15)
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function ZDP_UserDescRsp
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_253, ??CrossCallReturnLabel_83
          CFI (cfiCond594) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond594) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond594) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond594) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond594) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond594) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond594) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond594) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond594) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond594) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond594) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond594) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond594) CFA_SP SP+-6
          CFI (cfiCond594) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function ZDP_MatchDescReq
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_239
          CFI (cfiCond595) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond595) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond595) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond595) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond595) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond595) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond595) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond595) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond595) CFA_SP SP+-6
          CFI (cfiCond595) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function ZDP_ServerDiscReq
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_240
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+-6
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function ZDP_IEEEAddrReq
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_250
          CFI (cfiCond597) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond597) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond597) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond597) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond597) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond597) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond597) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond597) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond597) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond597) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond597) CFA_SP SP+-6
          CFI (cfiCond597) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function ZDP_SendData
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_241
          CFI (cfiCond598) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond598) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond598) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond598) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond598) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond598) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond598) CFA_SP SP+-6
          CFI (cfiCond598) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond599 Using cfiCommon0
          CFI (cfiCond599) Function ZDP_UserDescRsp
          CFI (cfiCond599) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_242
          CFI (cfiCond599) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond599) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond599) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond599) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond599) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond599) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond599) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond599) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond599) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond599) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond599) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond599) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond599) CFA_SP SP+-6
          CFI (cfiCond599) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond600 Using cfiCommon0
          CFI (cfiCond600) Function ZDP_GenericRsp
          CFI (cfiCond600) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_243
          CFI (cfiCond600) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond600) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond600) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond600) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond600) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond600) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond600) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond600) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond600) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond600) CFA_SP SP+-6
          CFI (cfiCond600) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function ZDP_MgmtPermitJoinReq
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_244
          CFI (cfiCond601) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond601) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond601) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond601) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond601) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond601) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond601) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond601) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond601) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond601) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond601) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond601) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond601) CFA_SP SP+-6
          CFI (cfiCond601) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond602 Using cfiCommon0
          CFI (cfiCond602) Function ZDO_SendMsgCBs
          CFI (cfiCond602) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_245
          CFI (cfiCond602) R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI (cfiCond602) VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI (cfiCond602) V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond602) V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond602) V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond602) V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond602) V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond602) V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond602) V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond602) V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond602) V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond602) V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond602) CFA_SP SP+-6
          CFI (cfiCond602) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function ZDP_IncomingData
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_246
          CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond603) CFA_SP SP+-6
          CFI (cfiCond603) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function ZDP_IncomingData
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_247
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+-6
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function ZDP_IncomingData
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_248
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+-6
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function ZDP_IncomingData
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_254, ??CrossCallReturnLabel_249
          CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond606) CFA_SP SP+-6
          CFI (cfiCond606) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond607 Using cfiCommon0
          CFI (cfiCond607) Function ZDP_DeviceAnnce
          CFI (cfiCond607) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond607) CFA_SP SP+-2
          CFI (cfiCond607) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function ZDP_MgmtDirectJoinReq
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+-2
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker609 Using cfiCommon1
          CFI (cfiPicker609) NoFunction
          CFI (cfiPicker609) Picker
        MOVX    A,@DPTR
        MOV     R0,A
        INC     DPTR
        MOVX    A,@DPTR
        RET
          CFI EndBlock cfiCond573
          CFI EndBlock cfiCond574
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiCond599
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiPicker609
// 2031 
// 2032 /*********************************************************************
// 2033  * Incoming message processor
// 2034  */
// 2035 
// 2036 /*********************************************************************
// 2037  * @fn          ZDP_IncomingData
// 2038  *
// 2039  * @brief       This function indicates the transfer of a data PDU (ASDU)
// 2040  *              from the APS sub-layer to the ZDO.
// 2041  *
// 2042  * @param       pData - Incoming Message
// 2043  *
// 2044  * @return      none
// 2045  */

        RSEG BANKED_CODE:CODE:NOROOT(0)
// 2046 void ZDP_IncomingData( afIncomingMSGPacket_t *pData )
ZDP_IncomingData:
          CFI Block cfiBlock610 Using cfiCommon0
          CFI Function ZDP_IncomingData
        CODE
// 2047 {
        FUNCALL ZDP_IncomingData, ZDO_SendMsgCBs
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDP_IncomingData, ZDApp_InMsgCB
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 23
        MOV     A,#-0x17
        LCALL   ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
// 2048   uint8 x = 0;
        MOV     R6,#0x0
// 2049   uint8 handled;
// 2050   zdoIncomingMsg_t inMsg;
// 2051 
// 2052   inMsg.srcAddr.addrMode = Addr16Bit;
        MOV     A,#0xa
        LCALL   ?XSTACK_DISP0_8
        MOV     A,#0x2
        LCALL   ?Subroutine18 & 0xFFFF
// 2053   inMsg.srcAddr.addr.shortAddr = pData->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_14:
        INC     DPTR
        INC     DPTR
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_246:
        MOV     A,#0x2
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine30 & 0xFFFF
// 2054   inMsg.wasBroadcast = pData->wasBroadcast;
??CrossCallReturnLabel_38:
        MOV     A,R2
        ADD     A,#0x15
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xb
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        LCALL   ?Subroutine18 & 0xFFFF
// 2055   inMsg.clusterID = pData->clusterId;
??CrossCallReturnLabel_15:
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_247:
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine30 & 0xFFFF
// 2056   inMsg.SecurityUse = pData->SecurityUse;
??CrossCallReturnLabel_39:
        MOV     A,R2
        ADD     A,#0x19
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xe
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2057 
// 2058   inMsg.asduLen = pData->cmd.DataLength-1;
        MOV     A,R2
        ADD     A,#0x20
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        MOVX    A,@DPTR
        DEC     A
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x10
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2059   inMsg.asdu = pData->cmd.Data+1;
        MOV     A,R2
        ADD     A,#0x22
        MOV     R0,A
        CLR     A
        ADDC    A,R3
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        MOVX    A,@DPTR
        ADD     A,#0x1
        MOV     R4,A
        INC     DPTR
        MOVX    A,@DPTR
        ADDC    A,#0x0
        MOV     R5,A
        MOV     A,#0x13
        LCALL   ?XSTACK_DISP0_8
        MOV     A,R4
        MOVX    @DPTR,A
        INC     DPTR
        MOV     A,R5
        LCALL   ??Subroutine104_0 & 0xFFFF
// 2060   inMsg.TransSeq = pData->cmd.Data[0];
??CrossCallReturnLabel_161:
        LCALL   ??Subroutine109_0 & 0xFFFF
??CrossCallReturnLabel_182:
        MOVX    A,@DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0xf
        LCALL   ?XSTACK_DISP0_8
        POP     A
          CFI CFA_SP SP+0
        MOVX    @DPTR,A
// 2061   inMsg.macDestAddr = pData->macDestAddr;
        MOV     A,R2
        ADD     A,#0x12
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_248:
        MOV     A,#0x11
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine30 & 0xFFFF
// 2062   inMsg.macSrcAddr = pData->macSrcAddr;
??CrossCallReturnLabel_40:
        MOV     A,R2
        ADD     A,#0x24
        MOV     DPL,A
        CLR     A
        ADDC    A,R3
        MOV     DPH,A
        LCALL   ??Subroutine122_0 & 0xFFFF
??CrossCallReturnLabel_249:
        MOV     A,#0x15
        LCALL   ?XSTACK_DISP0_8
        LCALL   ?Subroutine30 & 0xFFFF
// 2063 
// 2064   handled = ZDO_SendMsgCBs( &inMsg );
??CrossCallReturnLabel_41:
        ; Setup parameters for call to function ZDO_SendMsgCBs
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??ZDO_SendMsgCBs::?relay`; Banked call to: ZDO_SendMsgCBs
        MOV     A,R1
        MOV     R4,A
        SJMP    ??ZDP_IncomingData_0
// 2065 
// 2066 #if (defined MT_ZDO_CB_FUNC)
// 2067 #if !defined MT_TASK
// 2068   if (zgZdoDirectCB)
// 2069 #endif
// 2070   {
// 2071     MT_ZdoDirectCB( pData, &inMsg );
// 2072   }
// 2073 #endif
// 2074 
// 2075   while ( zdpMsgProcs[x].clusterID != 0xFFFF )
// 2076   {
// 2077     if ( zdpMsgProcs[x].clusterID == inMsg.clusterID )
// 2078     {
// 2079       zdpMsgProcs[x].pFn( &inMsg );
// 2080       return;
// 2081     }
// 2082     x++;
??ZDP_IncomingData_1:
        INC     R6
??ZDP_IncomingData_0:
        MOV     ?V0,R6
        MOV     ?V1,#0x0
        MOV     A,#0x2
        MOV     R0,#?V0
        LCALL   ?S_SHL
        MOV     A,#zdpMsgProcs & 0xff
        ADD     A,?V0
        MOV     R0,A
        MOV     A,#(zdpMsgProcs >> 8) & 0xff
        ADDC    A,?V1
        MOV     R1,A
        MOV     DPL,R0
        MOV     DPH,R1
        CLR     A
        MOVC    A,@A+DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        MOVC    A,@A+DPTR
        MOV     DPH,A
        POP     DPL
          CFI CFA_SP SP+0
        MOV     R2,DPL
        MOV     R3,DPH
        MOV     A,#-0x1
        XRL     A,R2
        JNZ     ??ZDP_IncomingData_2
        MOV     A,#-0x1
        XRL     A,R3
??ZDP_IncomingData_2:
        JZ      ??ZDP_IncomingData_3
        MOV     A,#0xc
        LCALL   ?XSTACK_DISP0_8
        MOVX    A,@DPTR
        XRL     A,R2
        JNZ     ??ZDP_IncomingData_4
        INC     DPTR
        MOVX    A,@DPTR
        XRL     A,R3
??ZDP_IncomingData_4:
        JNZ     ??ZDP_IncomingData_1
        ; Setup parameters for indirect call
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        MOV     DPL,R0
        MOV     DPH,R1
        INC     DPTR
        INC     DPTR
        CLR     A
        MOVC    A,@A+DPTR
        PUSH    A
          CFI CFA_SP SP+-1
        MOV     A,#0x1
        MOVC    A,@A+DPTR
        MOV     DPH,A
        POP     DPL
          CFI CFA_SP SP+0
        LCALL   ?CALL_IND
        SJMP    ??ZDP_IncomingData_5
// 2083   }
// 2084 
// 2085   // Handle unhandled messages
// 2086   if ( !handled )
??ZDP_IncomingData_3:
        MOV     A,R4
        JNZ     ??ZDP_IncomingData_5
// 2087     ZDApp_InMsgCB( &inMsg );
        ; Setup parameters for call to function ZDApp_InMsgCB
        MOV     R2,?XSP + 0
        MOV     R3,?XSP + 1
        LCALL   `??ZDApp_InMsgCB::?relay`; Banked call to: ZDApp_InMsgCB
// 2088 }
??ZDP_IncomingData_5:
        MOV     A,#0x17
        LJMP    ??Subroutine100_0 & 0xFFFF
          CFI EndBlock cfiBlock610

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond611 Using cfiCommon0
          CFI Function ZDP_MgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_13
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-18)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-17)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V8 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V9 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function ZDP_IncomingData
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+-2
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function ZDP_IncomingData
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+-2
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker614 Using cfiCommon1
          CFI (cfiPicker614) NoFunction
          CFI (cfiPicker614) Picker
        LCALL   ?Subroutine89 & 0xFFFF
??CrossCallReturnLabel_145:
        INC     DPTR
        RET
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiPicker614

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for ZDP_TmpBuf>`:
        DATA16
        DW ZDP_Buf + 1H

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_a:
        DD 10

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??fillAndSend::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    fillAndSend

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_SendData::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_SendData

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_NWKAddrOfInterestReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_NWKAddrOfInterestReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_NwkAddrReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_NwkAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_IEEEAddrReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_IEEEAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MatchDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MatchDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_SimpleDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_SimpleDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_UserDescSet::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_UserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_ServerDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_ServerDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_DeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_DeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_ParentAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_ParentAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zdpProcessAddrReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zdpProcessAddrReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_NodeDescMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_NodeDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_PowerDescMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_PowerDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_SimpleDescMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_SimpleDescMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_EPRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_EPRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_UserDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_UserDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_ServerDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_ServerDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_GenericRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_GenericRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_EndDeviceBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_EndDeviceBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_BindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_BindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtDirectJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtDirectJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtPermitJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtPermitJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtLeaveReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtLeaveReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkUpdateReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkUpdateReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtLqiRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtLqiRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtRtgRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtRtgRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtBindRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtBindRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_MgmtNwkUpdateNotify::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_MgmtNwkUpdateNotify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_RegisterForZDOMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RegisterForZDOMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_RemoveRegisteredCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RemoveRegisteredCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_SendMsgCBs::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_SendMsgCBs

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDP_IncomingData::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDP_IncomingData

        END
// 2089 
// 2090 /*********************************************************************
// 2091 *********************************************************************/
// 2092 
// 
// 6 984 bytes in segment BANKED_CODE
//   210 bytes in segment BANK_RELAYS
//    49 bytes in segment CODE_C
//     2 bytes in segment XDATA_I
//     2 bytes in segment XDATA_ID
//     4 bytes in segment XDATA_ROM_C
//    85 bytes in segment XDATA_Z
// 
// 7 245 bytes of CODE  memory
//     0 bytes of CONST memory (+ 4 bytes shared)
//    87 bytes of XDATA memory
//
//Errors: none
//Warnings: none
